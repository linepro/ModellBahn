{
	"info": {
		"_postman_id": "0c35f344-9cbf-440f-8361-8798066090e3",
		"name": "ModellBahn",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Enums",
			"item": [
				{
					"name": "Adress Typ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fae1469f-9af1-48c1-8833-8f34cdbf2f3b",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/adressTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"adressTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anderungs Typ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4e80b3dc-797b-4db8-9372-25ce1e9936b1",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/anderungsTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"anderungsTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Decoder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1ffa2db-f684-447d-a598-d1ccb6436eed",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/decoder",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"decoder"
							]
						}
					},
					"response": []
				},
				{
					"name": "Konfiguration",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8721fedf-b39d-47e7-b52c-bd681fedb7ef",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/konfiguration",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"konfiguration"
							]
						}
					},
					"response": []
				},
				{
					"name": "leistungsubertragung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbf1734d-e271-4ea4-9328-b8b793e13283",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/leistungsubertragung",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"leistungsubertragung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0426678-d841-4b1d-b593-98d2940a852f",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/status",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stecker",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d92f3683-2856-44e1-93b1-4dc6bca6fcc3",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/stecker",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"stecker"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Achsfolg",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7551ca9-cf76-4a67-82f8-bfb5d39ed39c",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/achsfolg\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/achsfolg",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "868a3490-30c5-41e7-ae9f-1250d5e0b645",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3e86a77a-736c-4cc6-96c7-63e6d13de297",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/achsfolg\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/achsfolg/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/achsfolg",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4737e6c0-e443-4d66-971b-9e6deb850f3c",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7a1b6b94-912a-4d0c-b652-28c3ba0ad94f",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/achsfolg\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/achsfolg/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{api}}/achsfolg/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77d90f92-41c7-4771-aa78-13520f0a02cf",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/achsfolg\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/achsfolg/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/achsfolg/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "124eb6e0-3d50-42e0-ad7b-25ba44a1616a",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/achsfolg/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Antrieb",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ccc575e5-bfdc-40cd-99bd-7cdd39abe12b",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/antrieb\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.antrieb.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.antrieb.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.antrieb.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/antrieb",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a93a5759-2889-4355-a514-3d8835381b26",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "dd7da091-5815-41a6-afd3-a23b1713588f",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/antrieb\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/antrieb/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/antrieb",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bb1b9300-3888-48c1-87c5-0167da568aa1",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a6b298b1-019b-4d2f-9832-4a67c1f3c7d0",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/antrieb\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/antrieb/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/antrieb/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a15f424b-1179-4677-b5bc-2d718cca2bf4",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/antrieb\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/antrieb/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/antrieb/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d188622-3b55-48a8-a996-29ac12f951f8",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/antrieb/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Aufbau",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cd9b9c8-8214-44f6-aa4e-94352a77ae23",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.aufbau.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.aufbau.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.aufbau.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/aufbau",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "75f8a2b0-ff8d-4832-bf48-eeb4192f65c8",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "15a7f126-2f3d-4084-a029-708a655e5ccb",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/aufbau/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/aufbau",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d91b029-ace1-40cf-b351-df13066a48d2",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/aufbau/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/aufbau/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/aufbau/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1b603365-b859-4ed3-b658-0fdb612075c9",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "202569e9-3ed8-4f75-8878-3f9491b59c3a",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/aufbau/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/aufbau/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/aufbau/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebb72e29-8fc2-4f9b-bfdc-1134903704d9",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/aufbau/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/aufbau/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/aufbau/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "765fc480-73d0-4c17-b6ac-0a0ecdaa94f7",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/aufbau/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/aufbau/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a8ecfbc-0070-4786-bd97-dba30a653f0a",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/aufbau/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Bahnverwaltung",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e03aeeeb-153f-41d3-948c-64751c1234b7",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/bahnverwaltung\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.bahnverwaltung.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.bahnverwaltung.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.bahnverwaltung.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/bahnverwaltung",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "27a85a34-32ef-4d7d-85b5-f4e276136326",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"land\", pm.variables.replaceIn(\"{{$randomCountryCode}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "adef91d4-cae6-437f-8b0a-b882a17a4152",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/bahnverwaltung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/bahnverwaltung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"land\": \"{{land}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/bahnverwaltung",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "592a5f90-adfc-4b65-a8a0-1825b22c7c56",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"land\", pm.variables.replaceIn(\"{{$randomCountryCode}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "546c27d3-d1e7-49ae-ba26-23447f598952",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/bahnverwaltung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/bahnverwaltung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"land\": \"{{land}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/bahnverwaltung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8a4bee3-fae3-46ce-b39c-5a5f0440e8a5",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/bahnverwaltung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/bahnverwaltung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/bahnverwaltung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47331d50-79a9-4c59-91d4-aac79dd8cd4e",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/bahnverwaltung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Epoch",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02ffae85-5370-4c0d-baa4-f3949b0084dc",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/epoch\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.epoch.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.epoch.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.epoch.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/epoch",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "23824055-72d2-46e9-a81a-db2e4a1c2a59",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4b8cb4e0-862c-4067-801b-4564610296c9",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/epoch\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/epoch/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/epoch",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "379b757f-4fa1-45d6-a15a-f1e4753a347f",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c1719137-67e2-4b72-814f-e735ccc72c67",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/epoch\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/epoch/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/epoch/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4f3fa25-8f31-4cca-b95c-51224cffb9ed",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/epoch\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/epoch/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/epoch/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e56dfa3-5dd0-4188-857c-ab1bbd912b6e",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/epoch/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Gattung",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f8dca82-230d-4c21-ab16-326549907f0c",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/gattung\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.gattung.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.gattung.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.gattung.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/gattung",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "09c50a3e-e351-472e-992f-53257fcbb3af",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7f577c2a-15af-45fe-99b1-32a0dc83b1de",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/gattung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/gattung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/gattung",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8041c2e2-4cce-4724-b225-318ba903ce1e",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "039f9c8a-18be-40ad-9506-46000b58c51d",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/gattung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/gattung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/gattung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "61e6d880-9d72-48a0-97d4-5ee8f184d869",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/gattung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/gattung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/gattung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d26a1512-b1bb-4768-95fb-06864be56029",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/gattung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Hersteller",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2de9641-e763-4638-9fa7-ccb7dd185b71",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/hersteller\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.hersteller.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.hersteller.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.hersteller.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/hersteller",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6aef0a45-4239-4648-86df-7d7e27a5d79e",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"url\", pm.variables.replaceIn(\"{{$randomUrl}}\"));\r",
									"pm.environment.set(\"telefon\", pm.variables.replaceIn(\"+1{{$$randomPhoneNumber}}\").replaceAll(/-/,\"\"));\r",
									"pm.environment.set(\"land\", pm.variables.replaceIn(\"{{$randomCountryCode}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d404ba6a-3b54-42ff-9952-d3ac533fe6ad",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/hersteller\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/hersteller/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.url).to.eql(pm.variables.get(\"url\"));\r",
									"pm.expect(jsonData.telefon).to.eql(pm.variables.get(\"telefon\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"url\": \"{{url}}\",\n\t\"telefon\": \"{{telefon}}\",\n\t\"land\": \"{{land}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/hersteller",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "457a8915-f1f7-49ec-8393-8306f57edc6f",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"url\", pm.variables.replaceIn(\"{{$randomUrl}}\"));\r",
									"pm.environment.set(\"telefon\", pm.variables.replaceIn(\"+1{{$$randomPhoneNumber}}\").replaceAll(/-/,\"\"));\r",
									"pm.environment.set(\"land\", pm.variables.replaceIn(\"{{$randomCountryCode}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ac843a8c-45a2-41f7-8f58-34776be452fb",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/hersteller\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/hersteller/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.url).to.eql(pm.variables.get(\"url\"));\r",
									"pm.expect(jsonData.telefon).to.eql(pm.variables.get(\"telefon\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"url\": \"{{url}}\",\n\t\"telefon\": \"{{telefon}}\",\n\t\"land\": \"{{land}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/hersteller/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10f15b9d-146a-4c4e-871c-7aa9eda0eb24",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/hersteller\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/hersteller/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.url).to.eql(pm.variables.get(\"url\"));\r",
									"pm.expect(jsonData.telefon).to.eql(pm.variables.get(\"telefon\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/hersteller/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "871bbe55-8662-4131-8658-d57008f1c4a2",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/hersteller/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Kupplung",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fe0c8896-dc05-4fcb-88bf-d8eda6c54070",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.kupplung.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.kupplung.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.kupplung.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kupplung",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "566af1e1-3c33-4e43-8423-f438bec684ef",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b7bd4ef1-22f4-4387-802c-b67236a65e19",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kupplung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kupplung",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39003ace-60eb-4902-89e1-864d0b5a546a",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kupplung/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/kupplung/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/kupplung/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b4cb54ac-f38d-40d9-912d-1c77a0213507",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7696761e-e90f-4f4a-b05d-4da391a4cb96",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kupplung/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/kupplung/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kupplung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99abf996-a823-4cf2-8098-9bbbb27b69c6",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kupplung/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/kupplung/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kupplung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74c4ffac-1427-449f-881f-de87d48a9d18",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kupplung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/kupplung/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77519928-208d-4d6c-b94f-c280f7d46d05",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/kupplung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Licht",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c6f494b-79ec-45a3-8f89-e0c1bb86bb23",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.licht.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.licht.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.licht.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/licht",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "056b392a-db3c-4108-85d4-a54de5f5f4f5",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "76a7c697-5f74-46e0-a579-7b55a2c8ec4d",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/licht/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/licht",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6be52d0f-1d97-4132-8c77-a619d4a75a0f",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/licht/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/licht/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/licht/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2af11bc5-39a9-4cd8-a030-33d9b8a29bed",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5aaf7d19-7150-4a67-a61f-011f650017e0",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/licht/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/licht/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/licht/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6322ba0d-1814-4fd3-ad5a-aad1fb62cd73",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/licht/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/licht/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/licht/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7adbb3c3-7849-49af-b0af-4692ffee3711",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/licht/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/licht/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db1350ad-0161-4ae0-b81f-4a9c07286128",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/licht/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Massstab",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "82c35dbc-99e8-4236-8b87-e34144f42291",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/massstab\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.massstab.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.massstab.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.massstab.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/massstab",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6be9575b-c588-40ea-b875-6f3f9d981218",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2c23d3ec-360f-4a55-93ed-33cc548223e4",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/massstab\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/massstab/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/massstab",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4e91444c-8628-48a7-93de-15348fafef78",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "304a0fdb-f3e4-4e45-af21-d2c48fb46d4f",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/massstab\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/massstab/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/massstab/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e810361-967f-4b29-b32b-865807d16bbf",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/massstab\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/massstab/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/massstab/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f91b741e-778f-4692-9706-8a9626fae7a3",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/massstab/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Motor Typ",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ccbd753-304d-44d7-89c5-40ce58cc024b",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/motorTyp\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.motorTyp.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.motorTyp.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.motorTyp.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/motorTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4a76b868-03d4-4f23-9376-bd96cd405285",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "42bd76bc-6b88-46db-9373-d535ea9cbacf",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/motorTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/motorTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/motorTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "584d6c36-f372-4842-bd0c-8e77ff7a0b81",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ecb6c3d2-059d-4fa4-8bb4-03c52daa937e",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/motorTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/motorTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/motorTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51c13887-f27e-4058-9a8b-06b2681aca1f",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/motorTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/motorTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/motorTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4c37dc40-0e97-46e0-b747-db92b7d7f4cf",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/motorTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Protokoll",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a25f4cde-3da4-4a06-b073-b9bd80e957ee",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/protokoll\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.protokoll.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.protokoll.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.protokoll.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/protokoll",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "46ccc99c-ac1f-425c-abbd-2abc63bd189e",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "db08cf68-222d-49cf-bd7c-91d1c638fc37",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/protokoll\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/protokoll/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/protokoll",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3330267c-e5bf-403f-a66a-4434d6c9bd98",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a30ae42e-16a6-4848-a8cb-97338c70de64",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/protokoll\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/protokoll/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/protokoll/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8f15e74-0bd5-4e9b-bd9e-a5939e30a817",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/protokoll\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/protokoll/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/protokoll/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2075088e-b09c-45d8-a423-133114b46630",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/protokoll/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Sondermodell",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8722170b-8e33-4935-a3b6-9b6c13dfeaa0",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/sondermodell\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.sondermodell.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.sondermodell.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.sondermodell.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/sondermodell",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f1159509-772c-486b-bdb0-586fadcf86f4",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6e9662c3-32d9-47bf-ae9f-6d0cdd670813",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/sondermodell\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/sondermodell/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/sondermodell",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e0aa819d-f787-4f27-83d6-8ebb559e7d91",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a48676a1-e3b4-4ff6-998c-5ce20401c081",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/sondermodell\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/sondermodell/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/sondermodell/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e78d4b82-8aad-4705-b90b-2154992c7dc9",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/sondermodell\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/sondermodell/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/sondermodell/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "606da661-a6e2-4036-b321-68711f5339c9",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/sondermodell/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Spurweite",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "090ef30f-4e4d-4356-9ea5-89999df96f67",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/spurweite\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.spurweite.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.spurweite.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.spurweite.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/spurweite",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "25997051-6750-417c-9116-64b6bbb56b09",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "25799783-6ec2-4073-8d79-1f3ff3515bdd",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/spurweite\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/spurweite/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/spurweite",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "09bffbb9-8042-4584-b712-a9c8948b8761",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "deef98ea-5623-48d4-908c-2a05864a3c28",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/spurweite\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/spurweite/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/spurweite/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9f1b29f-5fa6-4a09-b289-4bcd8c639474",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/spurweite\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/spurweite/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/spurweite/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a7563b1-6c2f-43ba-8dbd-d35c8d53db76",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/spurweite/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Steuerung",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ffdefadd-419b-485a-a022-22b7a72527f4",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/steuerung\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.steuerung.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.steuerung.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.steuerung.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/steuerung",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6c5bcb2d-16e7-4438-9cc2-1e68a1fdf6c7",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8856926b-538e-4606-82e0-66cd5ad5d1da",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/steuerung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/steuerung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/steuerung",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "50f9271d-189a-4e3b-959a-404ae08264e4",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7baea752-5198-47ca-852e-d13a56c89e49",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/steuerung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/steuerung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/steuerung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b27e9a7d-62a2-4ee1-bcd0-153f137274e4",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/steuerung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/steuerung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/steuerung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f402291f-b132-4a29-9447-d12ddf2df978",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/steuerung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Zug Typ",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f975f138-611d-4b1f-8547-fed5c74a6095",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zugTyp\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.zugTyp.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.zugTyp.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.zugTyp.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/zugTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c8f1f1cf-416f-4cfa-833f-38ec70bf2e50",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9294591e-c77f-4fa8-85f4-0997b2196e83",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zugTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zugTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zugTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e33844fd-e0bf-4296-ade0-a88b8c2f1b51",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "59b788a5-19db-442c-8ad6-3c8846f9c1fb",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zugTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zugTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zugTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f572fd0c-6320-4fd2-9280-620011d26beb",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zugTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zugTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/zugTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5edc1c4b-0935-4743-914a-f4486405a6ac",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/zugTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Kategorie",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "71410dac-3b1d-40f0-805b-12686cea08e7",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.kategorie.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.kategorie.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.kategorie.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Unter Kategorie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd38e0fd-ca8e-47a9-bb5d-574b63de165b",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.kategorie.forEach(function(k) { \r",
									"    var self = root + \"/\" + k.name;\r",
									"    pm.expect(k.name).to.be.oneOf([\"AUSGESTALTUNG\",\"BELEUCHTUNG\"]);\r",
									"    pm.expect(k.bezeichnung).to.exist;\r",
									"    k.unterKategorien.forEach(function(u){\r",
									"        pm.expect(u.kategorie).to.eql(k.name);\r",
									"        pm.expect(u.name).to.exist;\r",
									"        pm.expect(u.bezeichnung).to.exist;\r",
									"        pm.expect(u.deleted).to.be.false;\r",
									"    });\r",
									"    pm.expect(k.deleted).to.be.false;\r",
									"    pm.expect(k._links.add[0].href).to.eql(root);\r",
									"    pm.expect(k._links.self[0].href).to.eql(self);\r",
									"    pm.expect(k._links.update[0].href).to.eql(self);\r",
									"    pm.expect(k._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(k._links.search[0].href).to.eql(root);\r",
									"});\r",
									"root = pm.variables.replaceIn(\"{{api}}/unterKategorien?kategorien=AUSGESTALTUNG,BELEUCHTUNG\");\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.kategorie.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.kategorie.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/unterKategorien?kategorien=AUSGESTALTUNG,BELEUCHTUNG",
							"host": [
								"{{api}}"
							],
							"path": [
								"unterKategorien"
							],
							"query": [
								{
									"key": "kategorien",
									"value": "AUSGESTALTUNG,BELEUCHTUNG"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b524dc7c-b031-460e-b572-8ab48f5264f8",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "911abb3d-8db1-4bb6-98a0-7cf6cc06d232",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.unterKategorie).to.eql(undefined);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Unter Kategorie",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "135ce5d4-84a8-4199-b648-bfecb06b45cc",
								"exec": [
									"pm.environment.set(\"unterAdd\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"unterBezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "78f52d4b-eea1-46cb-aa1b-b06198eae7cf",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}\");\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"unterAdd\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"unterBezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"kategorie\": \"{{name}}\",\n\t\"name\": \"{{unterAdd}}\",\n\t\"bezeichnung\": \"{{unterBezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kategorie/{{name}}/unterKategorien",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}",
								"unterKategorien"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Unter Kategorie",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6d2f3cc1-5071-40ef-8b09-d911c4ad03ef",
								"exec": [
									"pm.environment.set(\"unterBezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "19b0cda6-5867-443b-9a9e-8ddf9c0b69f4",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}\");\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"unterAdd\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"unterBezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"kategorie\": \"{{name}}\",\n\t\"name\": \"{{unterAdd}}\",\n\t\"bezeichnung\": \"{{unterBezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}",
								"unterKategorien",
								"{{unterAdd}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "723a7ec0-c027-4737-8186-4f05ae044173",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "66057ea4-e0b6-4e8b-9154-031244e203b1",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}\");\r",
									"var child = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.unterKategorien.length).to.eql(1);\r",
									"pm.expect(jsonData.unterKategorien[0].kategorie).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.unterKategorien[0].name).to.eql(pm.variables.get(\"unterAdd\"));\r",
									"pm.expect(jsonData.unterKategorien[0].bezeichnung).to.eql(pm.variables.get(\"unterBezeichnung\"));\r",
									"pm.expect(jsonData.unterKategorien[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.unterKategorien[0]._links.add[0].href).to.eql(self);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.update[0].href).to.eql(child);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.delete[0].href).to.eql(child);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kategorie/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e769f6d3-d04e-403c-8145-bd6d4609fee4",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}\");\r",
									"var child = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.unterKategorien.length).to.eql(1);\r",
									"pm.expect(jsonData.unterKategorien[0].kategorie).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.unterKategorien[0].name).to.eql(pm.variables.get(\"unterAdd\"));\r",
									"pm.expect(jsonData.unterKategorien[0].bezeichnung).to.eql(pm.variables.get(\"unterBezeichnung\"));\r",
									"pm.expect(jsonData.unterKategorien[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.unterKategorien[0]._links.add[0].href).to.eql(self);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.update[0].href).to.eql(child);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.delete[0].href).to.eql(child);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kategorie/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Unter Kategorie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8221362c-6002-48c0-b16a-e0de282e90aa",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}",
								"unterKategorien",
								"{{unterAdd}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8aba647-6f81-44fc-b366-ebbd9a062858",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/kategorie/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Vorbild",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fbfc862-a6bb-4ff3-bac4-4cd21f7b52e0",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.vorbild.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.gattung).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.vorbild.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.vorbild.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/vorbild",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7782d7c2-c3c7-4f60-9e28-88aeaedd798d",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}{{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.environment.set(\"gattung\", pm.variables.replaceIn(\"{{gattungAdd}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"kategorie\", pm.variables.replaceIn(\"{{kategorieAdd}}\"));\r",
									"pm.environment.set(\"unterKategorie\", pm.variables.replaceIn(\"{{unterKategorieAdd}}\"));\r",
									"pm.environment.set(\"bahnverwaltung\", pm.variables.replaceIn(\"{{bahnverwaltungAdd}}\"));\r",
									"pm.environment.set(\"hersteller\", pm.variables.replaceIn(\"{{$randomCompanyName}}\"));\r",
									"pm.environment.set(\"bauzeit\", new Date(pm.variables.replaceIn(\"{{$randomDatePast}}\")).toISOString().substring(0, 10));\r",
									"pm.environment.set(\"anzahl\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.environment.set(\"antrieb\", pm.variables.replaceIn(\"{{antriebAdd}}\"));\r",
									"pm.environment.set(\"achsfolg\", pm.variables.replaceIn(\"{{achsfolgAdd}}\"));\r",
									"pm.environment.set(\"anfahrzugkraft\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"leistung\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"dienstgewicht\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"geschwindigkeit\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"ausserdienst\", new Date(pm.variables.replaceIn(\"{{$randomDatePast}}\")).toISOString().substring(0, 10));\r",
									"pm.environment.set(\"dmTreibrad\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"dmLaufradVorn\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"dmLaufradHinten\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"zylinder\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"dmZylinder\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"kolbenhub\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"kesseluberdruck\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"rostflache\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"uberhitzerflache\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"wasservorrat\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"verdampfung\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"fahrmotoren\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"motorbauart\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"leistungsubertragung\", pm.variables.replaceIn(\"{{leistungsubertragungAdd}}\"));\r",
									"pm.environment.set(\"reichweite\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"kapazitat\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"klasse\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"sitzplatzeKL1\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"sitzplatzeKL2\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"sitzplatzeKL3\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"sitzplatzeKL4\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"aufbau\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"triebkopf\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"mittelwagen\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"drehgestellBauart\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "67d0eaaa-feaa-4db5-bcb2-30f60c4fb378",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/vorbild/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.antrieb).to.eql(pm.variables.get(\"antrieb\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.leistung).to.eql(pm.variables.get(\"leistung\"));\r",
									"pm.expect(jsonData.dienstgewicht).to.eql(pm.variables.get(\"dienstgewicht\"));\r",
									"pm.expect(jsonData.geschwindigkeit).to.eql(pm.variables.get(\"geschwindigkeit\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.ausserdienst).to.eql(pm.variables.get(\"ausserdienst\"));\r",
									"pm.expect(jsonData.dmTreibrad).to.eql(pm.variables.get(\"dmTreibrad\"));\r",
									"pm.expect(jsonData.zylinder).to.eql(pm.variables.get(\"zylinder\"));\r",
									"pm.expect(jsonData.dmZylinder).to.eql(pm.variables.get(\"dmZylinder\"));\r",
									"pm.expect(jsonData.kolbenhub).to.eql(pm.variables.get(\"kolbenhub\"));\r",
									"pm.expect(jsonData.kesseluberdruck).to.eql(pm.variables.get(\"kesseluberdruck\"));\r",
									"pm.expect(jsonData.rostflache).to.eql(pm.variables.get(\"rostflache\"));\r",
									"pm.expect(jsonData.uberhitzerflache).to.eql(pm.variables.get(\"uberhitzerflache\"));\r",
									"pm.expect(jsonData.wasservorrat).to.eql(pm.variables.get(\"wasservorrat\"));\r",
									"pm.expect(jsonData.verdampfung).to.eql(pm.variables.get(\"verdampfung\"));\r",
									"pm.expect(jsonData.fahrmotoren).to.eql(pm.variables.get(\"fahrmotoren\"));\r",
									"pm.expect(jsonData.motorbauart).to.eql(pm.variables.get(\"motorbauart\"));\r",
									"pm.expect(jsonData.leistungsubertragung).to.eql(pm.variables.get(\"leistungsubertragung\"));\r",
									"pm.expect(jsonData.reichweite).to.eql(pm.variables.get(\"reichweite\"));\r",
									"pm.expect(jsonData.kapazitat).to.eql(pm.variables.get(\"kapazitat\"));\r",
									"pm.expect(jsonData.klasse).to.eql(pm.variables.get(\"klasse\"));\r",
									"pm.expect(jsonData.sitzplatzeKL1).to.eql(pm.variables.get(\"sitzplatzeKL1\"));\r",
									"pm.expect(jsonData.sitzplatzeKL2).to.eql(pm.variables.get(\"sitzplatzeKL2\"));\r",
									"pm.expect(jsonData.sitzplatzeKL3).to.eql(pm.variables.get(\"sitzplatzeKL3\"));\r",
									"pm.expect(jsonData.sitzplatzeKL4).to.eql(pm.variables.get(\"sitzplatzeKL4\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.triebkopf).to.eql(pm.variables.get(\"triebkopf\"));\r",
									"pm.expect(jsonData.mittelwagen).to.eql(pm.variables.get(\"mittelwagen\"));\r",
									"pm.expect(jsonData.drehgestellBauart).to.eql(pm.variables.get(\"drehgestellBauart\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{name}}\",\n    \"gattung\": \"{{gattung}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"hersteller\": \"{{hersteller}}\",\n    \"bauzeit\": \"{{bauzeit}}\",\n    \"anzahl\": {{anzahl}},\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"antrieb\":\"{{antrieb}}\",\n    \"achsfolg\":\"{{achsfolg}}\",\n    \"leistung\": {{leistung}},\n    \"dienstgewicht\": {{dienstgewicht}},\n    \"geschwindigkeit\": {{geschwindigkeit}},\n    \"lange\": {{lange}},\n    \"ausserdienst\": \"{{ausserdienst}}\",\n    \"dmTreibrad\": {{dmTreibrad}},\n    \"zylinder\": {{zylinder}},\n    \"dmZylinder\": {{dmZylinder}},\n    \"kolbenhub\": {{kolbenhub}},\n    \"kesseluberdruck\": {{kesseluberdruck}},\n    \"rostflache\": {{rostflache}},\n    \"uberhitzerflache\": {{uberhitzerflache}},\n    \"wasservorrat\": {{wasservorrat}},\n    \"verdampfung\": {{verdampfung}},\n    \"fahrmotoren\": {{fahrmotoren}},\n    \"motorbauart\": \"{{motorbauart}}\",\n    \"leistungsubertragung\": \"{{leistungsubertragung}}\",\n    \"reichweite\": {{reichweite}},\n    \"kapazitat\": {{kapazitat}},\n    \"klasse\": {{klasse}},\n    \"sitzplatzeKL1\": {{sitzplatzeKL1}},\n    \"sitzplatzeKL2\": {{sitzplatzeKL2}},\n    \"sitzplatzeKL3\": {{sitzplatzeKL3}},\n    \"sitzplatzeKL4\": {{sitzplatzeKL4}},\n    \"aufbau\": \"{{aufbau}}\",\n    \"triebkopf\": {{triebkopf}},\n    \"mittelwagen\": {{mittelwagen}},\n    \"drehgestellBauart\": \"{{drehgestellBauart}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/vorbild",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "491b3a1c-8043-45e9-bf44-2d91e962d28d",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/vorbild/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/vorbild/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.antrieb).to.eql(pm.variables.get(\"antrieb\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.leistung).to.eql(pm.variables.get(\"leistung\"));\r",
									"pm.expect(jsonData.dienstgewicht).to.eql(pm.variables.get(\"dienstgewicht\"));\r",
									"pm.expect(jsonData.geschwindigkeit).to.eql(pm.variables.get(\"geschwindigkeit\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.ausserdienst).to.eql(pm.variables.get(\"ausserdienst\"));\r",
									"pm.expect(jsonData.dmTreibrad).to.eql(pm.variables.get(\"dmTreibrad\"));\r",
									"pm.expect(jsonData.zylinder).to.eql(pm.variables.get(\"zylinder\"));\r",
									"pm.expect(jsonData.dmZylinder).to.eql(pm.variables.get(\"dmZylinder\"));\r",
									"pm.expect(jsonData.kolbenhub).to.eql(pm.variables.get(\"kolbenhub\"));\r",
									"pm.expect(jsonData.kesseluberdruck).to.eql(pm.variables.get(\"kesseluberdruck\"));\r",
									"pm.expect(jsonData.rostflache).to.eql(pm.variables.get(\"rostflache\"));\r",
									"pm.expect(jsonData.uberhitzerflache).to.eql(pm.variables.get(\"uberhitzerflache\"));\r",
									"pm.expect(jsonData.wasservorrat).to.eql(pm.variables.get(\"wasservorrat\"));\r",
									"pm.expect(jsonData.verdampfung).to.eql(pm.variables.get(\"verdampfung\"));\r",
									"pm.expect(jsonData.fahrmotoren).to.eql(pm.variables.get(\"fahrmotoren\"));\r",
									"pm.expect(jsonData.motorbauart).to.eql(pm.variables.get(\"motorbauart\"));\r",
									"pm.expect(jsonData.leistungsubertragung).to.eql(pm.variables.get(\"leistungsubertragung\"));\r",
									"pm.expect(jsonData.reichweite).to.eql(pm.variables.get(\"reichweite\"));\r",
									"pm.expect(jsonData.kapazitat).to.eql(pm.variables.get(\"kapazitat\"));\r",
									"pm.expect(jsonData.klasse).to.eql(pm.variables.get(\"klasse\"));\r",
									"pm.expect(jsonData.sitzplatzeKL1).to.eql(pm.variables.get(\"sitzplatzeKL1\"));\r",
									"pm.expect(jsonData.sitzplatzeKL2).to.eql(pm.variables.get(\"sitzplatzeKL2\"));\r",
									"pm.expect(jsonData.sitzplatzeKL3).to.eql(pm.variables.get(\"sitzplatzeKL3\"));\r",
									"pm.expect(jsonData.sitzplatzeKL4).to.eql(pm.variables.get(\"sitzplatzeKL4\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.triebkopf).to.eql(pm.variables.get(\"triebkopf\"));\r",
									"pm.expect(jsonData.mittelwagen).to.eql(pm.variables.get(\"mittelwagen\"));\r",
									"pm.expect(jsonData.drehgestellBauart).to.eql(pm.variables.get(\"drehgestellBauart\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/vorbild/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02d31487-cae5-4f7c-a67f-448969385e48",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/vorbild/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/vorbild/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.antrieb).to.eql(pm.variables.get(\"antrieb\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.leistung).to.eql(pm.variables.get(\"leistung\"));\r",
									"pm.expect(jsonData.dienstgewicht).to.eql(pm.variables.get(\"dienstgewicht\"));\r",
									"pm.expect(jsonData.geschwindigkeit).to.eql(pm.variables.get(\"geschwindigkeit\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.ausserdienst).to.eql(pm.variables.get(\"ausserdienst\"));\r",
									"pm.expect(jsonData.dmTreibrad).to.eql(pm.variables.get(\"dmTreibrad\"));\r",
									"pm.expect(jsonData.zylinder).to.eql(pm.variables.get(\"zylinder\"));\r",
									"pm.expect(jsonData.dmZylinder).to.eql(pm.variables.get(\"dmZylinder\"));\r",
									"pm.expect(jsonData.kolbenhub).to.eql(pm.variables.get(\"kolbenhub\"));\r",
									"pm.expect(jsonData.kesseluberdruck).to.eql(pm.variables.get(\"kesseluberdruck\"));\r",
									"pm.expect(jsonData.rostflache).to.eql(pm.variables.get(\"rostflache\"));\r",
									"pm.expect(jsonData.uberhitzerflache).to.eql(pm.variables.get(\"uberhitzerflache\"));\r",
									"pm.expect(jsonData.wasservorrat).to.eql(pm.variables.get(\"wasservorrat\"));\r",
									"pm.expect(jsonData.verdampfung).to.eql(pm.variables.get(\"verdampfung\"));\r",
									"pm.expect(jsonData.fahrmotoren).to.eql(pm.variables.get(\"fahrmotoren\"));\r",
									"pm.expect(jsonData.motorbauart).to.eql(pm.variables.get(\"motorbauart\"));\r",
									"pm.expect(jsonData.leistungsubertragung).to.eql(pm.variables.get(\"leistungsubertragung\"));\r",
									"pm.expect(jsonData.reichweite).to.eql(pm.variables.get(\"reichweite\"));\r",
									"pm.expect(jsonData.kapazitat).to.eql(pm.variables.get(\"kapazitat\"));\r",
									"pm.expect(jsonData.klasse).to.eql(pm.variables.get(\"klasse\"));\r",
									"pm.expect(jsonData.sitzplatzeKL1).to.eql(pm.variables.get(\"sitzplatzeKL1\"));\r",
									"pm.expect(jsonData.sitzplatzeKL2).to.eql(pm.variables.get(\"sitzplatzeKL2\"));\r",
									"pm.expect(jsonData.sitzplatzeKL3).to.eql(pm.variables.get(\"sitzplatzeKL3\"));\r",
									"pm.expect(jsonData.sitzplatzeKL4).to.eql(pm.variables.get(\"sitzplatzeKL4\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.triebkopf).to.eql(pm.variables.get(\"triebkopf\"));\r",
									"pm.expect(jsonData.mittelwagen).to.eql(pm.variables.get(\"mittelwagen\"));\r",
									"pm.expect(jsonData.drehgestellBauart).to.eql(pm.variables.get(\"drehgestellBauart\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f7985df1-f3bd-470d-9fbf-a72c42a6e2ff",
								"exec": [
									"pm.environment.set(\"gattung\", pm.variables.replaceIn(\"{{gattungUpdate}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"kategorie\", pm.variables.replaceIn(\"{{kategorieUpdate}}\"));\r",
									"pm.environment.set(\"unterKategorie\", pm.variables.replaceIn(\"{{unterKategorieUpdate}}\"));\r",
									"pm.environment.set(\"bahnverwaltung\", pm.variables.replaceIn(\"{{bahnverwaltungUpdate}}\"));\r",
									"pm.environment.set(\"hersteller\", pm.variables.replaceIn(\"{{$randomCompanyName}}\"));\r",
									"pm.environment.set(\"bauzeit\", new Date(pm.variables.replaceIn(\"{{$randomDatePast}}\")).toISOString().substring(0,10));\r",
									"pm.environment.set(\"anzahl\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.environment.set(\"antrieb\", pm.variables.replaceIn(\"{{antriebUpdate}}\"));\r",
									"pm.environment.set(\"achsfolg\", pm.variables.replaceIn(\"{{achsfolgUpdate}}\"));\r",
									"pm.environment.set(\"anfahrzugkraft\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"leistung\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"dienstgewicht\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"geschwindigkeit\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"ausserdienst\", new Date(pm.variables.replaceIn(\"{{$randomDatePast}}\")).toISOString().substring(0,10));\r",
									"pm.environment.set(\"dmTreibrad\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"dmLaufradVorn\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"dmLaufradHinten\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"zylinder\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"dmZylinder\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"kolbenhub\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"kesseluberdruck\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"rostflache\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"uberhitzerflache\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"wasservorrat\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"verdampfung\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"fahrmotoren\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"motorbauart\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"leistungsubertragung\", pm.variables.replaceIn(\"{{leistungsubertragungUpdate}}\"));\r",
									"pm.environment.set(\"reichweite\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"kapazitat\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"klasse\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"sitzplatzeKL1\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"sitzplatzeKL2\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"sitzplatzeKL3\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"sitzplatzeKL4\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"aufbau\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"triebkopf\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"mittelwagen\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"drehgestellBauart\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{name}}\",\n    \"gattung\": \"{{gattung}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"hersteller\": \"{{hersteller}}\",\n    \"bauzeit\": \"{{bauzeit}}\",\n    \"anzahl\": {{anzahl}},\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"antrieb\":\"{{antrieb}}\",\n    \"achsfolg\":\"{{achsfolg}}\",\n    \"leistung\": {{leistung}},\n    \"dienstgewicht\": {{dienstgewicht}},\n    \"geschwindigkeit\": {{geschwindigkeit}},\n    \"lange\": {{lange}},\n    \"ausserdienst\": \"{{ausserdienst}}\",\n    \"dmTreibrad\": {{dmTreibrad}},\n    \"zylinder\": {{zylinder}},\n    \"dmZylinder\": {{dmZylinder}},\n    \"kolbenhub\": {{kolbenhub}},\n    \"kesseluberdruck\": {{kesseluberdruck}},\n    \"rostflache\": {{rostflache}},\n    \"uberhitzerflache\": {{uberhitzerflache}},\n    \"wasservorrat\": {{wasservorrat}},\n    \"verdampfung\": {{verdampfung}},\n    \"fahrmotoren\": {{fahrmotoren}},\n    \"motorbauart\": \"{{motorbauart}}\",\n    \"leistungsubertragung\": \"{{leistungsubertragung}}\",\n    \"reichweite\": {{reichweite}},\n    \"kapazitat\": {{kapazitat}},\n    \"klasse\": {{klasse}},\n    \"sitzplatzeKL1\": {{sitzplatzeKL1}},\n    \"sitzplatzeKL2\": {{sitzplatzeKL2}},\n    \"sitzplatzeKL3\": {{sitzplatzeKL3}},\n    \"sitzplatzeKL4\": {{sitzplatzeKL4}},\n    \"aufbau\": \"{{aufbau}}\",\n    \"triebkopf\": {{triebkopf}},\n    \"mittelwagen\": {{mittelwagen}},\n    \"drehgestellBauart\": \"{{drehgestellBauart}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/vorbild/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e96d603-973f-4478-8bba-5b3d711d27c8",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/vorbild/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/vorbild/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.antrieb).to.eql(pm.variables.get(\"antrieb\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.leistung).to.eql(pm.variables.get(\"leistung\"));\r",
									"pm.expect(jsonData.dienstgewicht).to.eql(pm.variables.get(\"dienstgewicht\"));\r",
									"pm.expect(jsonData.geschwindigkeit).to.eql(pm.variables.get(\"geschwindigkeit\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.ausserdienst).to.eql(pm.variables.get(\"ausserdienst\"));\r",
									"pm.expect(jsonData.dmTreibrad).to.eql(pm.variables.get(\"dmTreibrad\"));\r",
									"pm.expect(jsonData.zylinder).to.eql(pm.variables.get(\"zylinder\"));\r",
									"pm.expect(jsonData.dmZylinder).to.eql(pm.variables.get(\"dmZylinder\"));\r",
									"pm.expect(jsonData.kolbenhub).to.eql(pm.variables.get(\"kolbenhub\"));\r",
									"pm.expect(jsonData.kesseluberdruck).to.eql(pm.variables.get(\"kesseluberdruck\"));\r",
									"pm.expect(jsonData.rostflache).to.eql(pm.variables.get(\"rostflache\"));\r",
									"pm.expect(jsonData.uberhitzerflache).to.eql(pm.variables.get(\"uberhitzerflache\"));\r",
									"pm.expect(jsonData.wasservorrat).to.eql(pm.variables.get(\"wasservorrat\"));\r",
									"pm.expect(jsonData.verdampfung).to.eql(pm.variables.get(\"verdampfung\"));\r",
									"pm.expect(jsonData.fahrmotoren).to.eql(pm.variables.get(\"fahrmotoren\"));\r",
									"pm.expect(jsonData.motorbauart).to.eql(pm.variables.get(\"motorbauart\"));\r",
									"pm.expect(jsonData.leistungsubertragung).to.eql(pm.variables.get(\"leistungsubertragung\"));\r",
									"pm.expect(jsonData.reichweite).to.eql(pm.variables.get(\"reichweite\"));\r",
									"pm.expect(jsonData.kapazitat).to.eql(pm.variables.get(\"kapazitat\"));\r",
									"pm.expect(jsonData.klasse).to.eql(pm.variables.get(\"klasse\"));\r",
									"pm.expect(jsonData.sitzplatzeKL1).to.eql(pm.variables.get(\"sitzplatzeKL1\"));\r",
									"pm.expect(jsonData.sitzplatzeKL2).to.eql(pm.variables.get(\"sitzplatzeKL2\"));\r",
									"pm.expect(jsonData.sitzplatzeKL3).to.eql(pm.variables.get(\"sitzplatzeKL3\"));\r",
									"pm.expect(jsonData.sitzplatzeKL4).to.eql(pm.variables.get(\"sitzplatzeKL4\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.triebkopf).to.eql(pm.variables.get(\"triebkopf\"));\r",
									"pm.expect(jsonData.mittelwagen).to.eql(pm.variables.get(\"mittelwagen\"));\r",
									"pm.expect(jsonData.drehgestellBauart).to.eql(pm.variables.get(\"drehgestellBauart\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/vorbild/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d784f107-0ed7-4448-933a-80a9990894e7",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/vorbild/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.antrieb).to.eql(pm.variables.get(\"antrieb\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.leistung).to.eql(pm.variables.get(\"leistung\"));\r",
									"pm.expect(jsonData.dienstgewicht).to.eql(pm.variables.get(\"dienstgewicht\"));\r",
									"pm.expect(jsonData.geschwindigkeit).to.eql(pm.variables.get(\"geschwindigkeit\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.ausserdienst).to.eql(pm.variables.get(\"ausserdienst\"));\r",
									"pm.expect(jsonData.dmTreibrad).to.eql(pm.variables.get(\"dmTreibrad\"));\r",
									"pm.expect(jsonData.zylinder).to.eql(pm.variables.get(\"zylinder\"));\r",
									"pm.expect(jsonData.dmZylinder).to.eql(pm.variables.get(\"dmZylinder\"));\r",
									"pm.expect(jsonData.kolbenhub).to.eql(pm.variables.get(\"kolbenhub\"));\r",
									"pm.expect(jsonData.kesseluberdruck).to.eql(pm.variables.get(\"kesseluberdruck\"));\r",
									"pm.expect(jsonData.rostflache).to.eql(pm.variables.get(\"rostflache\"));\r",
									"pm.expect(jsonData.uberhitzerflache).to.eql(pm.variables.get(\"uberhitzerflache\"));\r",
									"pm.expect(jsonData.wasservorrat).to.eql(pm.variables.get(\"wasservorrat\"));\r",
									"pm.expect(jsonData.verdampfung).to.eql(pm.variables.get(\"verdampfung\"));\r",
									"pm.expect(jsonData.fahrmotoren).to.eql(pm.variables.get(\"fahrmotoren\"));\r",
									"pm.expect(jsonData.motorbauart).to.eql(pm.variables.get(\"motorbauart\"));\r",
									"pm.expect(jsonData.leistungsubertragung).to.eql(pm.variables.get(\"leistungsubertragung\"));\r",
									"pm.expect(jsonData.reichweite).to.eql(pm.variables.get(\"reichweite\"));\r",
									"pm.expect(jsonData.kapazitat).to.eql(pm.variables.get(\"kapazitat\"));\r",
									"pm.expect(jsonData.klasse).to.eql(pm.variables.get(\"klasse\"));\r",
									"pm.expect(jsonData.sitzplatzeKL1).to.eql(pm.variables.get(\"sitzplatzeKL1\"));\r",
									"pm.expect(jsonData.sitzplatzeKL2).to.eql(pm.variables.get(\"sitzplatzeKL2\"));\r",
									"pm.expect(jsonData.sitzplatzeKL3).to.eql(pm.variables.get(\"sitzplatzeKL3\"));\r",
									"pm.expect(jsonData.sitzplatzeKL4).to.eql(pm.variables.get(\"sitzplatzeKL4\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.triebkopf).to.eql(pm.variables.get(\"triebkopf\"));\r",
									"pm.expect(jsonData.mittelwagen).to.eql(pm.variables.get(\"mittelwagen\"));\r",
									"pm.expect(jsonData.drehgestellBauart).to.eql(pm.variables.get(\"drehgestellBauart\"));\r",
									"pm.expect(jsonData.abbildung).to.be(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/vorbild/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a6bdf2eb-32ee-4cf6-a037-1d52842a1233",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/vorbild/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Decoder Typ",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1efb7964-8080-4bfd-a306-6e91a02f5349",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.decoderTyp.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.decoderTyp.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.decoderTyp.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1bb4fd28-0301-47f8-85c0-9aeccef7b3c7",
								"exec": [
									"pm.environment.set(\"hersteller\", pm.variables.get(\"decoderHerstellerAdd\"));\r",
									"pm.environment.set(\"bestellNr\", pm.variables.replaceIn(\"decoderBestellAdd\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"iMax\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"protokoll\", pm.variables.get(\"protokollAdd\"));\r",
									"pm.environment.set(\"fahrstufe\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"gerausch\", new Boolean(true));\r",
									"pm.environment.set(\"konfiguration\", pm.variables.get(\"konfigurationAdd\"));\r",
									"pm.environment.set(\"stecker\", pm.variables.get(\"steckerAdd\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "493e9604-5e52-4f04-9750-606935c21777",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.iMax).to.eql(pm.variables.get(\"iMax\"));\r",
									"pm.expect(jsonData.protokoll).to.eql(pm.variables.get(\"protokoll\"));\r",
									"pm.expect(jsonData.fahrstufe).to.eql(pm.variables.get(\"fahrstufe\"));\r",
									"pm.expect(jsonData.gerausch).to.eql(pm.variables.get(\"gerausch\"));\r",
									"pm.expect(jsonData.konfiguration).to.eql(pm.variables.get(\"konfiguration\"));\r",
									"pm.expect(jsonData.stecker).to.eql(pm.variables.get(\"stecker\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(undefined);\r",
									"pm.expect(jsonData.adressen).to.eql(undefined);\r",
									"pm.expect(jsonData.cvs).to.eql(undefined);\r",
									"pm.expect(jsonData.funktionen).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"iMax\": {{iMax}},\n    \"protokoll\": \"{{protokoll}}\",\n    \"fahrstufe\": {{fahrstufe}},\n    \"gerausch\": false,\n    \"konfiguration\": \"{{konfiguration}}\",\n    \"stecker\": \"{{stecker}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Anleitungen",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b378e62-a3d7-4f7f-9e29-9ae8d6c3194a",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.iMax).to.eql(pm.variables.get(\"iMax\"));\r",
									"pm.expect(jsonData.protokoll).to.eql(pm.variables.get(\"protokoll\"));\r",
									"pm.expect(jsonData.fahrstufe).to.eql(pm.variables.get(\"fahrstufe\"));\r",
									"pm.expect(jsonData.gerausch).to.eql(pm.variables.get(\"gerausch\"));\r",
									"pm.expect(jsonData.konfiguration).to.eql(pm.variables.get(\"konfiguration\"));\r",
									"pm.expect(jsonData.stecker).to.eql(pm.variables.get(\"stecker\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.adressen).to.eql(undefined);\r",
									"pm.expect(jsonData.cvs).to.eql(undefined);\r",
									"pm.expect(jsonData.funktionen).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "anleitungen",
									"type": "file",
									"src": "{{pdfFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/anleitungen",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"anleitungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Adress",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1ab79091-31eb-4f16-bce7-27b466b37d74",
								"exec": [
									"pm.environment.set(\"index\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"adressAdd\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"adressTyp\", \"MFX\");\r",
									"pm.environment.set(\"span\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"adress\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e93cbba5-10f2-4cc9-ac89-baba1daa11f0",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{index}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.index).to.eql(pm.variables.get(\"index\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"adressAdd\"));\r",
									"pm.expect(jsonData.adressTyp).to.eql(pm.variables.get(\"adressTyp\"));\r",
									"pm.expect(jsonData.span).to.eql(pm.variables.get(\"span\"));\r",
									"pm.expect(jsonData.werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{bestellNr}}\",\n    \"index\": {{index}},\n\t\"bezeichnung\": \"{{adressAdd}}\",\n    \"adressTyp\": \"{{adressTyp}}\",\n    \"span\": {{span}},\n    \"werkseinstellung\": {{adress}},\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/adress",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"adress"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Adress",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2c2815b7-1479-4829-a49d-c308ec078956",
								"exec": [
									"pm.environment.set(\"index\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"adressAdd\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"adressTyp\", \"DELTA\");\r",
									"pm.environment.set(\"span\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"adress\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6e159af6-0c15-4dcb-8712-312e3574e75a",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{index}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.index).to.eql(pm.variables.get(\"index\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"adressAdd\"));\r",
									"pm.expect(jsonData.adressTyp).to.eql(pm.variables.get(\"adressTyp\"));\r",
									"pm.expect(jsonData.span).to.eql(pm.variables.get(\"span\"));\r",
									"pm.expect(jsonData.werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{decoderBestellNr}}\",\n    \"index\": 1,\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"adressTyp\": \"{{adressTyp}}\",\n    \"span\": 1,\n    \"werkseinstellung\": 1,\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/adress/{{index}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"adress",
								"{{index}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add CV",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4f50862f-a909-4bf2-b2b1-baf11b8e7c75",
								"exec": [
									"pm.environment.set(\"cv\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"cvAdd\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"minimal\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"maximal\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"cvValue\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c1b4704a-a5e9-4478-aa30-af84104802f6",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{index}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.index).to.eql(pm.variables.get(\"index\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"adressAdd\"));\r",
									"pm.expect(jsonData.adressTyp).to.eql(pm.variables.get(\"adressTyp\"));\r",
									"pm.expect(jsonData.span).to.eql(pm.variables.get(\"span\"));\r",
									"pm.expect(jsonData.werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{bestellNr}}\",\n    \"cv\": {{cv}},\n\t\"bezeichnung\": \"{{cvAdd}}\",\n    \"minimal\": {{minimal}},\n    \"maximal\": {{maximal}},\n    \"werkseinstellung\": {{cvValue}},\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/cv",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"cv"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update CV",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "da8b8801-8903-4415-83c9-8d6da7ff17f2",
								"exec": [
									"pm.environment.set(\"index\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"adressAdd\", pm.variables.replaceIn(\"{{$randomProductName}}\")));\r",
									"pm.environment.set(\"adressTyp\", \"adressTyp\");\r",
									"pm.environment.set(\"span\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"adress\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "921d5a5d-9088-4e6e-940f-83476ce0823b",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{index}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.index).to.eql(pm.variables.get(\"index\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"adressAdd\"));\r",
									"pm.expect(jsonData.adressTyp).to.eql(pm.variables.get(\"adressTyp\"));\r",
									"pm.expect(jsonData.span).to.eql(pm.variables.get(\"span\"));\r",
									"pm.expect(jsonData.werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{bestellNr}}\",\n    \"cv\": {{cv}},\n\t\"bezeichnung\": \"{{cvAdd}}\",\n    \"minimal\": {{minimal}},\n    \"maximal\": {{maximal}},\n    \"werkseinstellung\": {{cvValue}},\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/cv/{{cv}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"cv",
								"{{cv}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Funktion",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5da90da9-dff1-4744-9540-5461c45f015e",
								"exec": [
									"pm.environment.set(\"index\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"adressAdd\", pm.variables.replaceIn(\"{{$randomProductName}}\")));\r",
									"pm.environment.set(\"adressTyp\", \"adressTyp\");\r",
									"pm.environment.set(\"span\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"adress\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01722195-9197-4ba9-baf2-a916dc492798",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{index}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.index).to.eql(pm.variables.get(\"index\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"adressAdd\"));\r",
									"pm.expect(jsonData.adressTyp).to.eql(pm.variables.get(\"adressTyp\"));\r",
									"pm.expect(jsonData.span).to.eql(pm.variables.get(\"span\"));\r",
									"pm.expect(jsonData.werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{bestellNr}}\",\n    \"reihe\": {{reihe}},\n    \"funktion\": \"{{funktion}}\",\n\t\"bezeichnung\": \"{{funktionAdd}}\",\n\t\"programmable\": {{programmable}},\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/funktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"funktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Funktion",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "148f63a3-ef8b-4d94-9375-92a9b8e38ada",
								"exec": [
									"pm.environment.set(\"index\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"adressAdd\", pm.variables.replaceIn(\"{{$randomProductName}}\")));\r",
									"pm.environment.set(\"adressTyp\", \"adressTyp\");\r",
									"pm.environment.set(\"span\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"adress\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f64a9dbf-cdf5-41ed-963c-7286c1753c97",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{index}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.index).to.eql(pm.variables.get(\"index\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"adressAdd\"));\r",
									"pm.expect(jsonData.adressTyp).to.eql(pm.variables.get(\"adressTyp\"));\r",
									"pm.expect(jsonData.span).to.eql(pm.variables.get(\"span\"));\r",
									"pm.expect(jsonData.werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{bestellNr}}\",\n    \"reihe\": {{reihe}},\n    \"funktion\": \"{{funktion}}\",\n\t\"bezeichnung\": \"{{funktionAdd}}\",\n\t\"programmable\": {{programmable}},\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/funktion/{{funktion}}/{{reihe}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"funktion",
								"{{funktion}}",
								"{{reihe}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a5764ea3-66fc-45d2-9930-04cd3964fdc0",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"iMax\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"protokoll\", pm.variables.get(\"protokollUpdate\"));\r",
									"pm.environment.set(\"fahrstufe\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"gerausch\", new Boolean(false));\r",
									"pm.environment.set(\"konfiguration\", pm.variables.get(\"konfigurationUpdate\"));\r",
									"pm.environment.set(\"stecker\", pm.variables.get(\"steckerUpdate\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "709ef2e8-8549-4861-b2c1-222d5dcea9b3",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.iMax).to.eql(pm.variables.get(\"iMax\"));\r",
									"pm.expect(jsonData.protokoll).to.eql(pm.variables.get(\"protokoll\"));\r",
									"pm.expect(jsonData.fahrstufe).to.eql(pm.variables.get(\"fahrstufe\"));\r",
									"pm.expect(jsonData.gerausch).to.eql(pm.variables.get(\"gerausch\"));\r",
									"pm.expect(jsonData.konfiguration).to.eql(pm.variables.get(\"konfiguration\"));\r",
									"pm.expect(jsonData.stecker).to.eql(pm.variables.get(\"stecker\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.adressen).to.eql(undefined);\r",
									"pm.expect(jsonData.cvs).to.eql(undefined);\r",
									"pm.expect(jsonData.funktionen).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"iMax\": {{iMax}},\n    \"protokoll\": \"{{protokoll}}\",\n    \"fahrstufe\": {{fahrstufe}},\n    \"gerausch\": false,\n    \"konfiguration\": \"{{konfiguration}}\",\n    \"stecker\": \"{{stecker}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8361469-4494-4960-986b-a21a532169e2",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.iMax).to.eql(pm.variables.get(\"iMax\"));\r",
									"pm.expect(jsonData.protokoll).to.eql(pm.variables.get(\"protokoll\"));\r",
									"pm.expect(jsonData.fahrstufe).to.eql(pm.variables.get(\"fahrstufe\"));\r",
									"pm.expect(jsonData.gerausch).to.eql(pm.variables.get(\"gerausch\"));\r",
									"pm.expect(jsonData.konfiguration).to.eql(pm.variables.get(\"konfiguration\"));\r",
									"pm.expect(jsonData.stecker).to.eql(pm.variables.get(\"stecker\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.adressen).to.eql(undefined);\r",
									"pm.expect(jsonData.cvs).to.eql(undefined);\r",
									"pm.expect(jsonData.funktionen).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Anleitungen",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81bef65a-08af-4cd8-9d34-28f6c92607ab",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/anleitungen",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"anleitungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Adress",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a597e777-8983-42ae-b15c-d2dd104274c6",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/adress/{{index}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"adress",
								"{{index}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete CV",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "959e73e9-e0cb-4d4a-8dd9-75cf8ec2a7bd",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/cv/{{cv}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"cv",
								"{{cv}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Funktion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2183baef-6d50-4f88-8a19-76e4e3a94048",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/funktion/{{funktion}}/{{reihe}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"funktion",
								"{{funktion}}",
								"{{reihe}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c0346b0-7beb-45ab-8401-6a162419b1b8",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Produkt",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "afbac6ac-e860-4539-bd2f-1881eaf3514c",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.produkt.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.produkt.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.produkt.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/produkt",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0a4ef8e1-f189-4827-87c5-1b228439c37d",
								"exec": [
									"pm.environment.set(\"hersteller\", pm.variables.get(\"herstellerAdd\"));\r",
									"pm.environment.set(\"bestellNr\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"kategorie\", pm.variables.get(\"kategorieAdd\"));\r",
									"pm.environment.set(\"unterKategorie\", pm.variables.get(\"unterKategorieAdd\"));\r",
									"pm.environment.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"massstab\", pm.variables.get(\"massstabAdd\"));\r",
									"pm.environment.set(\"spurweite\", pm.variables.get(\"spurweiteAdd\"));\r",
									"pm.environment.set(\"epoch\", pm.variables.get(\"epochAdd\"));\r",
									"pm.environment.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungAdd\"));\r",
									"pm.environment.set(\"gattung\", pm.variables.get(\"gattung\"));\r",
									"pm.environment.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.environment.set(\"bauzeit\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.environment.set(\"achsfolg\", pm.variables.get(\"achsfolgAdd\"));\r",
									"pm.environment.set(\"sondermodell\", pm.variables.get(\"sondermodellAdd\"));\r",
									"pm.environment.set(\"aufbau\", pm.variables.get(\"aufbauAdd\"));\r",
									"pm.environment.set(\"licht\", pm.variables.get(\"lichtAdd\"));\r",
									"pm.environment.set(\"kupplung\", pm.variables.get(\"kupplungAdd\"));\r",
									"pm.environment.set(\"steuerung\", pm.variables.get(\"steuerungAdd\"));\r",
									"pm.environment.set(\"decoderHersteller\", pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.environment.set(\"decoderBestellNr\", pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.environment.set(\"motorTyp\", pm.variables.get(\"motorTypAdd\"));\r",
									"pm.environment.set(\"anmerkung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e4d05c43-1749-43ee-a06c-a219eb088027",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderpHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(undefined);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(undefined);\r",
									"pm.expect(jsonData.teilen).to.eql(undefined);\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n    \"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"lange\": \"{{lange}}\",\n    \"massstab\": \"{{massstab}}\",\n    \"spurweite\": \"{{spurweite}}\",\n    \"epoch\": \"{{epoch}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"gattung\": \"{{gattung}}\",\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"bauzeit\": \"{{bauzeit}}\",\n    \"achsfolg\": \"{{achsfolg}}\",\n    \"sondermodell\": \"{{sondermodell}}\",\n    \"aufbau\": \"{{aufbau}}\",\n    \"licht\": \"{{licht}}\",\n    \"kupplung\": \"{{kupplung}}\",\n    \"steuerung\": \"{{steuerung}}\",\n    \"decoderTypHersteller\": \"{{decoderHersteller}}\",\n    \"decoderTypBestellNr\": \"{{decoderBestellNr}}\",\n    \"motorTyp\": \"{{motorTyp}}\",\n    \"anmerkung\": \"{{anmerkung}}\",\n    \"anleitungen\": \"{{anleitungen}}\",\n    \"explosionszeichnung\": \"{{explosionszeichnung}}\",\n    \"teilen\": \"{{teilen}}\",\n    \"abbildung\": \"{{abbildung}}\",\n    \"deleted\": \"{{deleted}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/produkt",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66f2b05a-a554-4044-8723-1dc2e0b574f5",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(undefined);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(undefined);\r",
									"pm.expect(jsonData.teilen).to.eql(undefined);\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Anleitungen",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec2e22d7-4346-4a1a-bea3-781c89af72de",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung.jpg\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(undefined);\r",
									"pm.expect(jsonData.teilen).to.eql(undefined);\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "anleitungen",
									"type": "file",
									"src": "{{pdfFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"anleitungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Explosionszeichnung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "739ecb8e-94ad-47e0-a1b4-2dc09e13b02f",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung.jpg\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"var explosionszeichnung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(explosionszeichnung);\r",
									"pm.expect(jsonData.teilen).to.eql(undefined);\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "explosionszeichnung",
									"type": "file",
									"src": "{{pdfFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"explosionszeichnung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Teil",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c37e7784-2c6c-4acf-a6eb-793fa54b43be",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"kategorie\", pm.variables.get(\"kategorieAdd\"));\r",
									"pm.environment.set(\"unterKategorie\", pm.variables.get(\"unterKategorieAdd\"));\r",
									"pm.environment.set(\"anzahl\", pm.variables.replaceIn(\"{{$randomInt}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "676948db-0aff-4479-8d1c-76c69721bb7e",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen/{{hersteller}}/{{bestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.teilHersteller).to.eql(pm.variables.get(\"teilHersteller\"));\r",
									"pm.expect(jsonData.teilBestellNr).to.eql(pm.variables.get(\"teilBestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n    \"teilHersteller\": \"{{teilHersteller}}\",\n    \"teilBestellNr\": \"{{teilBestellNr}}\",\n    \"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"anzahl\": {{anzahl}},\n    \"deleted\": \"{{deleted}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"teilen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Teil",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b30c95b0-65f4-4902-b8af-9daecb8680e2",
								"exec": [
									"pm.environment.set(\"anzahl\", pm.variables.replaceIn(\"{{$randomInt}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "55b42c7e-0d33-4d57-b567-662ffa2dea98",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen/{{hersteller}}/{{bestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.teilHersteller).to.eql(pm.variables.get(\"teilHersteller\"));\r",
									"pm.expect(jsonData.teilBestellNr).to.eql(pm.variables.get(\"teilBestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen/{{teilHersteller}}/{{teilBestellNr}}?anzahl={{anzahl}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"teilen",
								"{{teilHersteller}}",
								"{{teilBestellNr}}"
							],
							"query": [
								{
									"key": "anzahl",
									"value": "{{anzahl}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e5f4a642-ce45-4a93-9446-407009824868",
								"exec": [
									"pm.environment.set(\"hersteller\", pm.variables.get(\"herstellerAdd\"));\r",
									"pm.environment.set(\"bestellNr\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"kategorie\", pm.variables.get(\"kategorieAdd\"));\r",
									"pm.environment.set(\"unterKategorie\", pm.variables.get(\"unterKategorieAdd\"));\r",
									"pm.environment.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"massstab\", pm.variables.get(\"massstabAdd\"));\r",
									"pm.environment.set(\"spurweite\", pm.variables.get(\"spurweiteAdd\"));\r",
									"pm.environment.set(\"epoch\", pm.variables.get(\"epochAdd\"));\r",
									"pm.environment.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungAdd\"));\r",
									"pm.environment.set(\"gattung\", pm.variables.get(\"gattung\"));\r",
									"pm.environment.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.environment.set(\"bauzeit\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.environment.set(\"achsfolg\", pm.variables.get(\"achsfolgAdd\"));\r",
									"pm.environment.set(\"sondermodell\", pm.variables.get(\"sondermodellAdd\"));\r",
									"pm.environment.set(\"aufbau\", pm.variables.get(\"aufbauAdd\"));\r",
									"pm.environment.set(\"licht\", pm.variables.get(\"lichtAdd\"));\r",
									"pm.environment.set(\"kupplung\", pm.variables.get(\"kupplungAdd\"));\r",
									"pm.environment.set(\"steuerung\", pm.variables.get(\"steuerungAdd\"));\r",
									"pm.environment.set(\"decoderTypHersteller\", pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.environment.set(\"decoderTypBestellNr\", pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.environment.set(\"motorTyp\", pm.variables.get(\"motorTypAdd\"));\r",
									"pm.environment.set(\"anmerkung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "31727e7f-2413-4a95-ba87-8afad1e29276",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(pm.variables.get(\"anleitungen\"));\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(pm.variables.get(\"explosionszeichnung\"));\r",
									"pm.expect(jsonData.teilen).to.eql(pm.variables.get(\"teilen\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n    \"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"lange\": \"{{lange}}\",\n    \"massstab\": \"{{massstab}}\",\n    \"spurweite\": \"{{spurweite}}\",\n    \"epoch\": \"{{epoch}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"gattung\": \"{{gattung}}\",\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"bauzeit\": \"{{bauzeit}}\",\n    \"achsfolg\": \"{{achsfolg}}\",\n    \"sondermodell\": \"{{sondermodell}}\",\n    \"aufbau\": \"{{aufbau}}\",\n    \"licht\": \"{{licht}}\",\n    \"kupplung\": \"{{kupplung}}\",\n    \"steuerung\": \"{{steuerung}}\",\n    \"decoderTypHersteller\": \"{{decoderHersteller}}\",\n    \"decoderTypBestellNr\": \"{{decoderBestellNr}}\",\n    \"motorTyp\": \"{{motorTyp}}\",\n    \"anmerkung\": \"{{anmerkung}}\",\n    \"anleitungen\": \"{{anleitungen}}\",\n    \"explosionszeichnung\": \"{{explosionszeichnung}}\",\n    \"teilen\": \"{{teilen}}\",\n    \"abbildung\": \"{{abbildung}}\",\n    \"deleted\": \"{{deleted}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b231f84-6315-460f-8d7d-a3862301e901",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung.jpg\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"var explosionszeichnung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(explosionszeichnung);\r",
									"pm.expect(jsonData.teilen).to.eql(undefined);\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1b6273f3-e383-415e-899c-f18f7ef7e592",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"var explosionszeichnung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(explosionszeichnung);\r",
									"pm.expect(jsonData.teilen).to.eql(undefined);\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Anleitungen",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "87a8c94c-5921-4a1e-a851-15c1d1ab1310",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var explosionszeichnung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(undefined);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(explosionszeichnung);\r",
									"pm.expect(jsonData.teilen).to.eql(undefined);\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"anleitungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Explosionszeichnung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f650b022-759d-43aa-9841-8e5096c86f1c",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(undefined);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(undefined);\r",
									"pm.expect(jsonData.teilen).to.eql(undefined);\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"explosionszeichnung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Teil",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d22e5ff-ab0c-45f7-8f3d-c0c5955a436c",
								"exec": [
									"pm.response.to.have.status(204);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen/{{teilHersteller}}/{{teilBestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"teilen",
								"{{teilHersteller}}",
								"{{teilBestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8bd2689-5e8d-4ee3-837b-d5c09f7ae284",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Decoder",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9e10778-8704-4803-90e1-be80ead94166",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoder\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.decoder.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.decoderId).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.decoder.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.decoder.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/decoder",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a1dee96f-cb97-4878-b18e-80a320595eee",
								"exec": [
									"pm.environment.set(\"decoderId\", pm.variables.get(\"decoderId\"));\r",
									"pm.environment.set(\"hersteller\", pm.variables.get(\"hersteller\"));\r",
									"pm.environment.set(\"bestellNr\", pm.variables.get(\"bestellNr\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.get(\"bezeichnung\"));\r",
									"pm.environment.set(\"iMax\", pm.variables.get(\"iMax\"));\r",
									"pm.environment.set(\"protokoll\", pm.variables.get(\"protokoll\"));\r",
									"pm.environment.set(\"fahrstufe\", pm.variables.get(\"fahrstufe\"));\r",
									"pm.environment.set(\"sound\", pm.variables.get(\"sound\"));\r",
									"pm.environment.set(\"konfiguration\", pm.variables.get(\"konfiguration\"));\r",
									"pm.environment.set(\"stecker\", pm.variables.get(\"stecker\"));\r",
									"pm.environment.set(\"status\", pm.variables.get(\"status\"));\r",
									"pm.environment.set(\"anleitungen\", pm.variables.get(\"anleitungen\"));\r",
									"pm.environment.set(\"adressen\", pm.variables.get(\"adressen\"));\r",
									"pm.environment.set(\"cvs\", pm.variables.get(\"cvs\"));\r",
									"pm.environment.set(\"funktionen\", pm.variables.get(\"funktionen\"));\r",
									"pm.environment.set(\"deleted\", pm.variables.get(\"deleted\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e5b60d71-a3d2-48bc-9aa3-1af6bde337f6",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoder\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoder/{{decoderId}}\"));\r",
									"pm.expect(jsonData.decoderId).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.iMax).to.eql(pm.variables.get(\"iMax\"));\r",
									"pm.expect(jsonData.protokoll).to.eql(pm.variables.get(\"protokoll\"));\r",
									"pm.expect(jsonData.fahrstufe).to.eql(pm.variables.get(\"fahrstufe\"));\r",
									"pm.expect(jsonData.sound).to.eql(pm.variables.get(\"sound\"));\r",
									"pm.expect(jsonData.konfiguration).to.eql(pm.variables.get(\"konfiguration\"));\r",
									"pm.expect(jsonData.stecker).to.eql(pm.variables.get(\"stecker\"));\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(pm.variables.get(\"anleitungen\"));\r",
									"pm.expect(jsonData.adressen).to.eql(pm.variables.get(\"adressen\"));\r",
									"pm.expect(jsonData.cvs).to.eql(pm.variables.get(\"cvs\"));\r",
									"pm.expect(jsonData.funktionen).to.eql(pm.variables.get(\"funktionen\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Adress",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}/adress/{{index}}?adress={{adress}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}",
								"adress",
								"{{index}}"
							],
							"query": [
								{
									"key": "adress",
									"value": "{{adress}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update CV",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}/cv/{{cv}}?wert={{wert}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}",
								"cv",
								"{{cv}}"
							],
							"query": [
								{
									"key": "wert",
									"value": "{{wert}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Funktion",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}/funktion/{{funktion}}/{{reihe}}?bezeichnung={{bezeichnung}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}",
								"funktion",
								"{{funktion}}",
								"{{reihe}}"
							],
							"query": [
								{
									"key": "bezeichnung",
									"value": "{{bezeichnung}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "62dfc753-1bfb-4984-95af-9ba8e86b30b2",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c7280e4e-ebcb-4bf9-b0a0-4994c8f7c3df",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoder\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoder/{{decoderId}}\");\r",
									"pm.expect(jsonData.decoderId).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"decoderId\": \"{{decoderId}}\",\n    \"hersteller\": \"{{decoderHersteller}}\",\n    \"bestellNr\": \"{{decoderBestellNr}}\",\n    \"protokoll\": \"MFX\",\n    \"status\": \"INSTALIERT\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46dbaeba-ad09-4782-908a-89cefd792162",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoder\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoder/{{decoderId}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c53a4741-73b4-4e3b-8dc3-5744a88f9d89",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Artikel",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1a7a77a-1e45-4e52-aa1a-9b3d037a336b",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.artikel.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.artikelId;\r",
									"    pm.expect(a.artikelId).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.artikel.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.artikel.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/artikel",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6bd71ee7-8635-4190-ac7b-787fe4d3c298",
								"exec": [
									"pm.environment.set(\"hersteller\", pm.variables.get(\"herstellerAdd\"));\r",
									"pm.environment.set(\"bestellNr\", pm.variables.get(\"bestellNr\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"kategorie\", pm.variables.get(\"kategorieAdd\"));\r",
									"pm.environment.set(\"unterKategorie\", pm.variables.get(\"unterKategorieAdd\"));\r",
									"pm.environment.set(\"lange\", Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"massstab\", pm.variables.get(\"massstabAdd\"));\r",
									"pm.environment.set(\"spurweite\", pm.variables.get(\"spurweiteAdd\"));\r",
									"pm.environment.set(\"epoch\", pm.variables.get(\"epochAdd\"));\r",
									"pm.environment.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungAdd\"));\r",
									"pm.environment.set(\"gattung\", pm.variables.get(\"gattungAdd\"));\r",
									"pm.environment.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.environment.set(\"achsfolg\", pm.variables.get(\"achsfolgAdd\"));\r",
									"pm.environment.set(\"sondermodell\", pm.variables.get(\"sondermodellAdd\"));\r",
									"pm.environment.set(\"aufbau\", pm.variables.get(\"aufbauAdd\"));\r",
									"pm.environment.set(\"licht\", pm.variables.get(\"lichtAdd\"));\r",
									"pm.environment.set(\"kupplung\", pm.variables.get(\"kupplungAdd\"));\r",
									"pm.environment.set(\"steuerung\", pm.variables.get(\"steuerungAdd\"));\r",
									"pm.environment.set(\"decoder\", pm.variables.get(\"decoderAdd\"));\r",
									"pm.environment.set(\"motorTyp\", pm.variables.get(\"motorTypAdd\"));\r",
									"pm.environment.set(\"kaufdatum\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.environment.set(\"wahrung\", pm.variables.replaceIn(\"{{$randomCurrencyCode}}\"));\r",
									"pm.environment.set(\"preis\", Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"stuck\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"verbleibende\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"anmerkung\", pm.variables.replaceIn(\"{{$randomCatchPhrase}}\"));\r",
									"pm.environment.set(\"beladung\", pm.variables.replaceIn(\"{{$randomProductMaterial}}\"));\r",
									"pm.environment.set(\"status\", \"GEKAUFT\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "dfa3a6f3-4d88-4241-8cc9-761f58384c5b",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var artikelId = jsonData.artikelId;\r",
									"pm.environment.set(\"artikelId\", artikelId);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoder\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung).to.eql(undefined);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"lange\": {{lange}},\n    \"massstab\": \"{{massstab}}\",\n    \"spurweite\": \"{{spurweite}}\",\n    \"epoch\": \"{{epoch}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"gattung\": \"{{gattung}}\",\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"achsfolg\": \"{{achsfolg}}\",\n    \"sondermodell\": \"{{sondermodell}}\",\n    \"aufbau\": \"{{aufbau}}\",\n    \"licht\": \"{{licht}}\",\n    \"kupplung\": \"{{kupplung}}\",\n    \"steuerung\": \"{{steuerung}}\",\n    \"decoder\": \"{{decoder}}\",\n    \"motorTyp\": \"{{motorTyp}}\",\n    \"kaufdatum\": \"{{kaufdatum}}\",\n    \"wahrung\": \"{{wahrung}}\",\n    \"preis\": {{preis}},\n    \"stuck\": {{stuck}},\n    \"verbleibende\": {{verbleibende}},\n    \"anmerkung\": \"{{anmerkung}}\",\n    \"beladung\": \"{{beladung}}\",\n    \"status\": \"{{status}}\",\n    \"deleted\": false\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/artikel",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cb32f30-f8e2-43a9-9504-a0a454d8c126",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var artikelId = jsonData.artikelId;\r",
									"pm.environment.set(\"artikelId\", artikelId);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{root}}/artikel/{{artikelId}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung).to.eql(undefined);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Anderung",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2257a653-dda6-45ba-8fad-54692fdb4bf2",
								"exec": [
									"pm.environment.set(\"anderungId\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"anderungsDatum\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.environment.set(\"anderungsTyp\", \"UMGEBAUT\");\r",
									"pm.environment.set(\"anderungStuck\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"anderung\", pm.variables.replaceIn(\"{{$randomLoremParagraph}}\"));\r",
									"pm.environment.set(\"status\", \"GEKAUFT\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e5d92515-aeab-468e-8316-4f1f30b9ac11",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.anderungId).to.eql(pm.variables.get(\"anderungId\"));\r",
									"pm.expect(jsonData.anderungsDatum).to.eql(pm.variables.get(\"anderungsDatum\"));\r",
									"pm.expect(jsonData.anderungsTyp).to.eql(pm.variables.get(\"anderungsTyp\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"anderung\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"anderungStuck\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"artikelId\": \"{{artikelId}}\",\n\t\"anderungId\": \"{{anderungId}}\",\n    \"anderungsDatum\": \"{{anderungsDatum}}\",\n    \"anderungsTyp\": \"{{anderungsTyp}}\",\n    \"bezeichnung\": \"{{anderung}}\",\n    \"stuck\": {{anderungStuck}},\n    \"anmerkung\": \"{{anmerkung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/anderung",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"anderung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Anderung",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e789bb7f-13df-4d8b-90bc-4b9145c38d30",
								"exec": [
									"pm.environment.set(\"anderungsDatum\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.environment.set(\"anderungsTyp\", \"REPARIERT\");\r",
									"pm.environment.set(\"anderungStuck\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"anderung\", pm.variables.replaceIn(\"{{$randomLoremParagraph}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "223275af-6eb6-4efb-8a4b-d5c2b9c1c99e",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.anderungId).to.eql(pm.variables.get(\"anderungId\"));\r",
									"pm.expect(jsonData.anderungsDatum).to.eql(pm.variables.get(\"anderungsDatum\"));\r",
									"pm.expect(jsonData.anderungsTyp).to.eql(pm.variables.get(\"anderungsTyp\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"anderung\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"anderungStuck\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"artikelId\": \"{{artikelId}}\",\n\t\"anderungId\": \"{{anderungId}}\",\n    \"anderungsDatum\": \"{{anderungsDatum}}\",\n    \"anderungsTyp\": \"{{anderungsTyp}}\",\n    \"bezeichnung\": \"{{anderung}}\",\n    \"stuck\": {{anderungStuck}},\n    \"anmerkung\": \"{{anmerkung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/anderung/{{anderungId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"anderung",
								"{{anderungId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c100ae69-62bf-4db5-933a-26e18ec02f80",
								"exec": [
									"pm.environment.set(\"hersteller\", pm.variables.get(\"herstellerUpdate\"));\r",
									"pm.environment.set(\"bestellNr\", pm.variables.get(\"bestellNr\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"kategorie\", pm.variables.get(\"kategorieUpdate\"));\r",
									"pm.environment.set(\"unterKategorie\", pm.variables.get(\"unterKategorieUpdate\"));\r",
									"pm.environment.set(\"lange\", Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"massstab\", pm.variables.get(\"massstabUpdate\"));\r",
									"pm.environment.set(\"spurweite\", pm.variables.get(\"spurweiteUpdate\"));\r",
									"pm.environment.set(\"epoch\", pm.variables.get(\"epochUpdate\"));\r",
									"pm.environment.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungUpdate\"));\r",
									"pm.environment.set(\"gattung\", pm.variables.get(\"gattungUpdate\"));\r",
									"pm.environment.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.environment.set(\"achsfolg\", pm.variables.get(\"achsfolgUpdate\"));\r",
									"pm.environment.set(\"sondermodell\", pm.variables.get(\"sondermodellUpdate\"));\r",
									"pm.environment.set(\"aufbau\", pm.variables.get(\"aufbauUpdate\"));\r",
									"pm.environment.set(\"licht\", pm.variables.get(\"lichtUpdate\"));\r",
									"pm.environment.set(\"kupplung\", pm.variables.get(\"kupplungUpdate\"));\r",
									"pm.environment.set(\"steuerung\", pm.variables.get(\"steuerungUpdate\"));\r",
									"pm.environment.set(\"decoder\", pm.variables.get(\"decoderUpdate\"));\r",
									"pm.environment.set(\"motorTyp\", pm.variables.get(\"motorTypUpdate\"));\r",
									"pm.environment.set(\"kaufdatum\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.environment.set(\"wahrung\", pm.variables.replaceIn(\"{{$randomCurrencyCode}}\"));\r",
									"pm.environment.set(\"preis\", Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"stuck\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"verbleibende\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"anmerkung\", pm.variables.replaceIn(\"{{$randomCatchPhrase}}\"));\r",
									"pm.environment.set(\"beladung\", pm.variables.replaceIn(\"{{$randomProductMaterial}}\"));\r",
									"pm.environment.set(\"status\", \"BASTLER\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fdfaf21a-8a9b-4aab-82db-0ff9b8e1e944",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{root}}/artikel/{{artikelId}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung.size).to.eql(1);\r",
									"pm.expect(jsonData.anderung[0].artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungId).to.eql(pm.variables.get(\"anderungId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsDatum).to.eql(pm.variables.get(\"anderungsDatum\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsTyp).to.eql(pm.variables.get(\"anderungsTyp\"));\r",
									"pm.expect(jsonData.anderung[0].bezeichnung).to.eql(pm.variables.get(\"anderung\"));\r",
									"pm.expect(jsonData.anderung[0].stuck).to.eql(pm.variables.get(\"anderungStuck\"));\r",
									"pm.expect(jsonData.anderung[0].anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anderung[0].deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"artikelId\": \"{{artikelId}}\",\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"lange\": {{lange}},\n    \"massstab\": \"{{massstab}}\",\n    \"spurweite\": \"{{spurweite}}\",\n    \"epoch\": \"{{epoch}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"gattung\": \"{{gattung}}\",\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"achsfolg\": \"{{achsfolg}}\",\n    \"sondermodell\": \"{{sondermodell}}\",\n    \"aufbau\": \"{{aufbau}}\",\n    \"licht\": \"{{licht}}\",\n    \"kupplung\": \"{{kupplung}}\",\n    \"steuerung\": \"{{steuerung}}\",\n    \"decoder\": \"{{decoder}}\",\n    \"motorTyp\": \"{{motorTyp}}\",\n    \"kaufdatum\": \"{{kaufdatum}}\",\n    \"wahrung\": \"{{wahrung}}\",\n    \"preis\": {{preis}},\n    \"stuck\": {{stuck}},\n    \"verbleibende\": {{verbleibende}},\n    \"anmerkung\": \"{{anmerkung}}\",\n    \"beladung\": \"{{beladung}}\",\n    \"status\": \"{{status}}\",\n    \"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5ded952-b415-4f42-b17e-5403b87ff2c0",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/artikel/{{artikelId}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung[0].artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungId).to.eql(pm.variables.get(\"anderungId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsDatum).to.eql(pm.variables.get(\"anderungsDatum\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsTyp).to.eql(pm.variables.get(\"anderungsTyp\"));\r",
									"pm.expect(jsonData.anderung[0].bezeichnung).to.eql(pm.variables.get(\"anderung\"));\r",
									"pm.expect(jsonData.anderung[0].stuck).to.eql(pm.variables.get(\"anderungStuck\"));\r",
									"pm.expect(jsonData.anderung[0].anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anderung[0].deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd3cce7a-161e-41a3-9164-ac3a0859a122",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung[0].artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungId).to.eql(pm.variables.get(\"anderungId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsDatum).to.eql(pm.variables.get(\"anderungsDatum\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsTyp).to.eql(pm.variables.get(\"anderungsTyp\"));\r",
									"pm.expect(jsonData.anderung[0].bezeichnung).to.eql(pm.variables.get(\"anderung\"));\r",
									"pm.expect(jsonData.anderung[0].stuck).to.eql(pm.variables.get(\"anderungStuck\"));\r",
									"pm.expect(jsonData.anderung[0].anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anderung[0].deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Anderung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "35515faf-40cd-46cc-b581-68d8169afeda",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung).to.eql(undefined);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/anderung/{{anderungId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"anderung",
								"{{anderungId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "41017d87-0f7a-4f65-be97-433d0923821b",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Zug",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aebd3c82-dcea-460e-b566-73206cc5cc68",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.zug.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.zug.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.zug.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/zug",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "39e5dc89-13bd-46d4-9b71-fd5aad9a6ab7",
								"exec": [
									"pm.environment.set(\"zug\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"zugTyp\", pm.variables.get(\"zugTypAdd\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a217ba5f-a22c-4ae4-ae3c-07edf99c2e5d",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var zug = pm.variables.get(\"zug\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zug/{{zug}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"zug\"));\r",
									"pm.expect(jsonData.zugTyp).to.eql(pm.variables.get(\"zugTyp\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{zug}}\",\n    \"zugTyp\": \"{{zugTyp}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zug",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Consist",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "900602da-c0f0-4576-9b97-891006c913bc",
								"exec": [
									"pm.environment.set(\"position\", pm.variables.replaceIn(\"{{$randomInt}}\"));\r",
									"pm.environment.set(\"artikelId\", pm.variables.get(\"artikelAdd\"));\r",
									"pm.environment.set(\"hersteller\", pm.variables.get(\"herstellerAdd\"));\r",
									"pm.environment.set(\"bestellNr\", pm.variables.get(\"bestellNr\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungAdd\"));\r",
									"pm.environment.set(\"gattung\", pm.variables.get(\"gattungAdd\"));\r",
									"pm.environment.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "265532d9-86cd-4d21-9e28-64a7ef8f7719",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var zug = pm.variables.get(\"zug\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zug/{{zug}}\");\r",
									"pm.expect(jsonData.zug).to.eql(pm.variables.get(\"zug\"));\r",
									"pm.expect(jsonData.position).to.eql(pm.variables.get(\"position\"));\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(pm.variables.get(undefined));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"zug\": \"{{zug}}\",\n    \"position\": \"{{position}}\",\n    \"artikelId\": \"{{artikelId}}\",\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n    \"bezeichnung\": \"{{bezeichnung}}\",\n    \"lange\": \"{{lange}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"gattung\": \"{{gattung}}\",\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"abbildung\": \"{{abbildung}}\",\n    \"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zug/{{zug}}/consist/{{position}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}",
								"consist",
								"{{position}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Consist",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8336ea5c-8d21-4991-a48b-17d51d4a2d2a",
								"exec": [
									"pm.environment.set(\"position\", pm.variables.replaceIn(\"{{$randomInt}}\"));\r",
									"pm.environment.set(\"artikelId\", pm.variables.get(\"artikelAdd\"));\r",
									"pm.environment.set(\"hersteller\", pm.variables.get(\"herstellerAdd\"));\r",
									"pm.environment.set(\"bestellNr\", pm.variables.get(\"bestellNr\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungAdd\"));\r",
									"pm.environment.set(\"gattung\", pm.variables.get(\"gattungAdd\"));\r",
									"pm.environment.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d38ab6a8-bd75-4144-9fa1-bfe0deb22a74",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var zug = pm.variables.get(\"zug\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zug/{{zug}}\");\r",
									"pm.expect(jsonData.zug).to.eql(pm.variables.get(\"zug\"));\r",
									"pm.expect(jsonData.position).to.eql(pm.variables.get(\"position\"));\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(pm.variables.get(undefined));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"zug\": \"{{zug}}\",\r\n    \"position\": \"{{position}}\",\r\n    \"artikelId\": \"{{artikelId}}\",\r\n    \"hersteller\": \"{{hersteller}}\",\r\n    \"bestellNr\": \"{{bestellNr}}\",\r\n\t\"bezeichnung\": \"{{bezeichnung}}\",\r\n    \"lange\": \"{{lange}}\",\r\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\r\n    \"gattung\": \"{{gattung}}\",\r\n    \"betreibsnummer\": \"\",\r\n    \"abbildung\": \"\",\r\n\t\"deleted\": true\r\n}"
						},
						"url": {
							"raw": "{{api}}/zug/{{zug}}/consist/{{position}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}",
								"consist",
								"{{position}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cafda6c7-568a-4523-abaa-a407fc5d6a67",
								"exec": [
									"pm.environment.set(\"zugTyp\", pm.variables.get(\"zugTypUpdate\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "538914f4-0f90-41ad-827f-2e7161e50581",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var zug = pm.variables.get(\"zug\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zug/{{zug}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"zug\"));\r",
									"pm.expect(jsonData.zugTyp).to.eql(pm.variables.get(\"zugTyp\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{zug}}\",\n    \"zugTyp\": \"{{zugTyp}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zug/{{zug}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c4e51594-5f79-4115-9a17-dc3788be7954",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var zug = pm.variables.get(\"zug\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zug/{{zug}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"zug\"));\r",
									"pm.expect(jsonData.zugTyp).to.eql(pm.variables.get(\"zugTyp\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/zug/{{zug}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Consist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6aaaa2d2-689b-4a6f-b8b7-0b10591e310d",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/zug/{{zug}}/consist/{{position}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}",
								"consist",
								"{{position}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1be89f55-8404-4e18-9fed-dc80cc64dcfc",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/zug/{{zug}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Open Api",
			"item": [
				{
					"name": "Get Docs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{root}}/v3/api-docs.json",
							"host": [
								"{{root}}"
							],
							"path": [
								"v3",
								"api-docs.json"
							]
						},
						"description": "http://LINEPRO2.home:8086/ModellBahn/api/swagger/swagger."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Export",
			"item": [
				{
					"name": "Achsfolg",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/achsfolg",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"achsfolg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anderung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/anderung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"anderung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Antrieb",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/antrieb",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"antrieb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Artikel",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/artikel",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"artikel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Aufbau",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/aufbau",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"aufbau"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bahnverwaltung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/bahnverwaltung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"bahnverwaltung"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderAdress",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderAdress",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderAdress"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderCv",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderCv",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderCv"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderFunktion",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderFunktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderFunktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Decoder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoder",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoder"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypAdress",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderTypAdress",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypAdress"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypCv",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderTypCv",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypCv"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypFunktion",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderTypFunktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypFunktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTyp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Epoch",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/epoch",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"epoch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gattung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/gattung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"gattung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hersteller",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/hersteller",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"hersteller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kategorie",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/kategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"kategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kupplung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/kupplung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"kupplung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Licht",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/licht",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"licht"
							]
						}
					},
					"response": []
				},
				{
					"name": "Massstab",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/massstab",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"massstab"
							]
						}
					},
					"response": []
				},
				{
					"name": "MotorTyp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/motorTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"motorTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Produkt",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/produkt",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"produkt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Produkt Teil",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/produktTeil",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"produktTeil"
							]
						}
					},
					"response": []
				},
				{
					"name": "Protokoll",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/protokoll",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"protokoll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sondermodell",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/sondermodell",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"sondermodell"
							]
						}
					},
					"response": []
				},
				{
					"name": "Spurweite",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/spurweite",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"spurweite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Steuerung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/steuerung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"steuerung"
							]
						}
					},
					"response": []
				},
				{
					"name": "UnterKategorie",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/unterKategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"unterKategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vorbild",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/vorbild",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"vorbild"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zug Consist",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/zugConsist",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zugConsist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zug",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/zug",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zug"
							]
						}
					},
					"response": []
				},
				{
					"name": "ZugTyp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/zugTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zugTyp"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Import",
			"item": [
				{
					"name": "Achsfolg",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/achsfolg",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"achsfolg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anderung",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/anderung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"anderung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Antrieb",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/antrieb",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"antrieb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Artikel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/artikel",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"artikel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Aufbau",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/aufbau",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"aufbau"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bahnverwaltung",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/bahnverwaltung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"bahnverwaltung"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderAdress",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderAdress",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderAdress"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderCv",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderCv",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderCv"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderFunktion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderFunktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderFunktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Decoder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoder",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoder"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypAdress",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderTypAdress",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypAdress"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypCv",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderTypCv",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypCv"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypFunktion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderTypFunktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypFunktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTyp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Epoch",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/epoch",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"epoch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gattung",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/gattung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"gattung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hersteller",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/hersteller",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"hersteller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kategorie",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/kategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"kategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kupplung",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/kupplung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"kupplung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Licht",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/licht",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"licht"
							]
						}
					},
					"response": []
				},
				{
					"name": "Massstab",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/massstab",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"massstab"
							]
						}
					},
					"response": []
				},
				{
					"name": "MotorTyp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/motorTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"motorTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Produkt",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/produkt",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"produkt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Produkt Teil",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/produktTeil",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"produktTeil"
							]
						}
					},
					"response": []
				},
				{
					"name": "Protokoll",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/protokoll",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"protokoll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sondermodell",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/sondermodell",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"sondermodell"
							]
						}
					},
					"response": []
				},
				{
					"name": "Spurweite",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/spurweite",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"spurweite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Steuerung",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/steuerung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"steuerung"
							]
						}
					},
					"response": []
				},
				{
					"name": "UnterKategorie",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/unterKategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"unterKategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vorbild",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/vorbild",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"vorbild"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zug Consist",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/zugConsist",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zugConsist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zug",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/zug",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zug"
							]
						}
					},
					"response": []
				},
				{
					"name": "ZugTyp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/zugTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zugTyp"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "password",
				"type": "string"
			},
			{
				"key": "username",
				"value": "username",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "133cdb36-f86f-47d2-aad6-bd12f7a7b5e3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f0fc221a-507b-443e-8597-07a9ad5c8112",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "4f5e6b57-82eb-4ab0-901c-b8571da044ce",
			"key": "host",
			"value": "127.0.0.1"
		},
		{
			"id": "bc210fa7-93fb-4f38-aa31-7b34acd1ce70",
			"key": "port",
			"value": ":8086"
		},
		{
			"id": "fd88ecbd-a17e-4926-860f-e7238c587dcc",
			"key": "server",
			"value": "http://{{host}}{{port}}"
		},
		{
			"id": "02b69d81-68ba-4643-938d-147cabeaac82",
			"key": "root",
			"value": "{{server}}/ModellBahn"
		},
		{
			"id": "51215f99-1c5c-4a5d-a864-8dadef79f8a4",
			"key": "api",
			"value": "{{root}}/api"
		},
		{
			"id": "9fd9f73e-a56e-4950-9144-f1434018f839",
			"key": "language",
			"value": "de"
		},
		{
			"id": "c8f830d5-1aca-4e4b-8ddc-43cc90569c99",
			"key": "achsfolgAdd",
			"value": "1C1H2T"
		},
		{
			"id": "71f6b177-7409-46a3-a333-343ca84b25a2",
			"key": "achsfolgUpdate",
			"value": "COCO"
		},
		{
			"id": "dc366459-837f-47c4-a890-0539518dc99d",
			"key": "adressTypAdd",
			"value": "MFX"
		},
		{
			"id": "0ad42941-e723-4229-9a46-6579877b6c5f",
			"key": "adressTypUpdate",
			"value": "DELTA"
		},
		{
			"id": "3a8177cb-40e1-4692-9609-bce55cc28bb6",
			"key": "anderungAdd",
			"value": "1"
		},
		{
			"id": "69c81f17-a23a-48e1-a367-36a0261c0de9",
			"key": "anderungUpdate",
			"value": "1"
		},
		{
			"id": "121f874c-c713-47cf-a639-e93293d95c36",
			"key": "antriebAdd",
			"value": "DAMPF"
		},
		{
			"id": "89a70706-327b-44d1-ae4b-c13822936a3e",
			"key": "antriebUpdate",
			"value": "ELEKTRO"
		},
		{
			"id": "7ff75d7d-7e6a-441e-b95c-16c6dec0aa2c",
			"key": "artikelAdd",
			"value": "00001"
		},
		{
			"id": "73f5b7bd-7dcc-4341-880e-0faf0df22a46",
			"key": "artikelUpdate",
			"value": "00001"
		},
		{
			"id": "db4e86f0-7618-4abf-b18c-30361fabc829",
			"key": "aufbauAdd",
			"value": "LK"
		},
		{
			"id": "7f0055d2-ffb9-493f-a2a2-dce081de4574",
			"key": "aufbauUpdate",
			"value": "LK"
		},
		{
			"id": "050832fe-dea5-4468-a41a-c623bab7180e",
			"key": "bestellNrAdd",
			"value": "3000"
		},
		{
			"id": "f91128a5-1ef0-4c8e-9e65-82667db660dc",
			"key": "bestellNrUpdate",
			"value": "3003"
		},
		{
			"id": "ef395813-6b77-4db7-a363-ad616d586486",
			"key": "bahnverwaltungAdd",
			"value": "DB"
		},
		{
			"id": "d0f048a7-c9e4-4705-b24c-f023f8b2b592",
			"key": "bahnverwaltungUpdate",
			"value": "DBAG"
		},
		{
			"id": "1f78470e-4511-4b7f-b20c-27588015621b",
			"key": "decoderAdd",
			"value": "00001"
		},
		{
			"id": "5c74f06d-0413-4c78-bf9c-2a810ceb04e9",
			"key": "decoderUpdate",
			"value": "00001"
		},
		{
			"id": "0084af02-e4ba-4316-8be7-d3ad75654222",
			"key": "decoderHerstellerAdd",
			"value": "ESU"
		},
		{
			"id": "15da1bc7-6335-4083-8c88-b3c4dadeafa7",
			"key": "decoderHerstellerUpdate",
			"value": "ESU"
		},
		{
			"id": "e32a0d1b-5c97-4c0f-96e7-f05c98f5b909",
			"key": "decoderBestellAdd",
			"value": "62400"
		},
		{
			"id": "1946a5ce-986f-4bfb-94e1-2a3822d19682",
			"key": "decoderBestellUpdate",
			"value": "62400"
		},
		{
			"id": "d823d538-4582-44ed-8549-f42e5b04edab",
			"key": "epochAdd",
			"value": "IV"
		},
		{
			"id": "215c58b7-5eda-4281-a5fc-62139f4b72be",
			"key": "epochUpdate",
			"value": "IV"
		},
		{
			"id": "61ff8652-79e5-4476-bf0c-a6fd7cbace43",
			"key": "gattungAdd",
			"value": "BR89.0"
		},
		{
			"id": "77d74e23-a694-408a-b4d7-0c76418bf12a",
			"key": "gattungUpdate",
			"value": "BR89.0"
		},
		{
			"id": "1b607096-6aa6-4a05-b660-095d5b729164",
			"key": "herstellerAdd",
			"value": "MARKLIN"
		},
		{
			"id": "746e5c52-2487-4084-8c59-ce5f647b361d",
			"key": "herstellerUpdate",
			"value": "MARKLIN"
		},
		{
			"id": "61feaf6c-c7d7-42eb-a9ea-1287e6492d90",
			"key": "kategorieAdd",
			"value": "LOKOMOTIV"
		},
		{
			"id": "26fa73e4-4277-4faa-b3e2-b7cff9c5ff7c",
			"key": "kategorieUpdate",
			"value": "AUSGESTALTUNG"
		},
		{
			"id": "e78eb768-f0a5-4cba-ba90-ed6b6718fd33",
			"key": "kupplungAdd",
			"value": "RELEX"
		},
		{
			"id": "5a84127f-f1e7-4678-8891-acdd7398dec0",
			"key": "kupplungUpdate",
			"value": "RELEX"
		},
		{
			"id": "785c6ee7-8227-4989-a6e8-a93784d1057e",
			"key": "konfigurationAdd",
			"value": "CV"
		},
		{
			"id": "34f14707-fc08-4f7e-888a-c305236d3458",
			"key": "konfigurationUpdate",
			"value": "STECKER"
		},
		{
			"id": "2923b94c-27ff-48b8-bae0-1403e5e9ab14",
			"key": "leistungsubertragungAdd",
			"value": "MECHANISH"
		},
		{
			"id": "0ae99106-f35c-4089-b66f-eb1b0cafa549",
			"key": "leistungsubertragungUpdate",
			"value": "ELEKTRISH"
		},
		{
			"id": "185aa994-5872-49be-87f7-5f5a7caf1187",
			"key": "lichtAdd",
			"value": "L1V"
		},
		{
			"id": "d7ec7e64-3d1b-43b9-b3fd-3957107b1175",
			"key": "lichtUpdate",
			"value": "L1V"
		},
		{
			"id": "3d1e5586-6a43-4f89-901d-83f8d3cb594a",
			"key": "massstabAdd",
			"value": "H0"
		},
		{
			"id": "fe3a60ad-0a0b-4018-8642-37ac36bba642",
			"key": "massstabUpdate",
			"value": "H0"
		},
		{
			"id": "c6cb3cdb-ceb1-4d05-b26f-fd66f25e5e25",
			"key": "motorTypAdd",
			"value": "CSINUS"
		},
		{
			"id": "2508f7e7-9a1a-428d-83ef-6ae1cf19656c",
			"key": "motorTypUpdate",
			"value": "CSINUS"
		},
		{
			"id": "ba3b49ba-96d9-4ceb-8c19-4f5d5f8916ba",
			"key": "protokollAdd",
			"value": "MFX"
		},
		{
			"id": "ececb2e6-219b-476d-b0a8-c089a9b4dab1",
			"key": "protokollUpdate",
			"value": "DELTA"
		},
		{
			"id": "96863c3e-a57d-469d-a2b1-df06db4312a3",
			"key": "sondermodellAdd",
			"value": "MM"
		},
		{
			"id": "beeecf5f-9e4c-4cee-91f7-d4193e9b6b2c",
			"key": "sondermodellUpdate",
			"value": "MM"
		},
		{
			"id": "86125d23-e065-49f7-935d-fe86cbd12c67",
			"key": "spurweiteAdd",
			"value": "H0"
		},
		{
			"id": "e300692f-5461-44a7-9ca4-c637a5b51bf1",
			"key": "spurweiteUpdate",
			"value": "H0"
		},
		{
			"id": "4b6dc460-71a7-43c9-8e29-014d5fd3aa03",
			"key": "steckerAdd",
			"value": "NEM651"
		},
		{
			"id": "d2de30a2-65e7-4e32-91e1-c9c9d9c494b8",
			"key": "steckerUpdate",
			"value": "NEM652"
		},
		{
			"id": "f40d4116-ca00-4d91-b0be-807d76aa103a",
			"key": "steuerungAdd",
			"value": "DIGITAL"
		},
		{
			"id": "b75a72b9-1729-4a9a-b313-8dc8161da4ce",
			"key": "steuerungUpdate",
			"value": "DIGITAL"
		},
		{
			"id": "2fa01a41-3e46-4a6c-8a9b-c7d0b85721f2",
			"key": "unterKategorieAdd",
			"value": "DAMPF"
		},
		{
			"id": "1d19e292-f615-4a33-ae62-ffa0d033cda2",
			"key": "unterKategorieUpdate",
			"value": "HECKEN"
		},
		{
			"id": "7c1f7b60-0d59-45db-b5ef-f82a273cf9c9",
			"key": "vorbildAdd",
			"value": "HECKEN"
		},
		{
			"id": "e625d57b-577c-4af2-9493-75583c88b1c8",
			"key": "vorbildUpdate",
			"value": "HECKEN"
		},
		{
			"id": "85ac32ba-cdb1-498d-ac52-311085001909",
			"key": "zugAdd",
			"value": "BAVARIA"
		},
		{
			"id": "c9cde096-58dc-4c4c-93d6-ee08c554c14b",
			"key": "zugUpdate",
			"value": "BAVARIA"
		},
		{
			"id": "a40a41d5-ff66-4f1f-b518-c374e8de2f91",
			"key": "zugTypAdd",
			"value": "TEE"
		},
		{
			"id": "bee36110-3ce8-4b47-ae35-04f3a2d5d8d4",
			"key": "zugTypUpdate",
			"value": "TEE"
		},
		{
			"id": "9737a93d-ef16-4455-8a62-24ac0e67d00e",
			"key": "imageFile",
			"value": "3000.jpg"
		},
		{
			"id": "e0a116ac-d03e-4e01-93bb-9ea7ac8a2e79",
			"key": "anleitungFile",
			"value": "3000_betrieb.pdf"
		},
		{
			"id": "0bc2f56e-cd71-4ccf-af0d-70f589cfa85b",
			"key": "explosionszeichnungFile",
			"value": "3000_explo.pdf"
		}
	],
	"protocolProfileBehavior": {}
}