{
	"info": {
		"_postman_id": "db16553a-ae13-448c-9536-5712faa59a72",
		"name": "ModellBahn",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Enums",
			"item": [
				{
					"name": "Adress Typ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d9df5a8-708f-435a-953d-a6ce20727912",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/adressTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"adressTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anderungs Typ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4468fc9d-8553-4193-8c4a-5ca61b55e418",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/anderungsTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"anderungsTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Decoder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d1e8de46-0351-4292-8848-5f1a0a07f133",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/decoder",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"decoder"
							]
						}
					},
					"response": []
				},
				{
					"name": "Konfiguration",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ff2bbeea-3724-4119-8008-7664b3ff8273",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/konfiguration",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"konfiguration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Leistungsubertragung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ca0a43c-2a37-40fe-bf01-efdf8dd6b612",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/leistungsubertragung",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"leistungsubertragung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc30ac06-ee27-4474-b96e-79eca6394cfc",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/status",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stecker",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ff466d71-1925-46b3-9b4a-7737d5eb9b68",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/stecker",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"stecker"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Achsfolg",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee2ab6a7-09e7-4645-a22d-cdcdaf464b1f",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/achsfolg\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/achsfolg",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9dd8d119-10fa-4fcb-b2e4-5d925f3ea240",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f0b1a5a3-a3c8-48e8-967d-a0544814048d",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/achsfolg\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/achsfolg/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/achsfolg",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "da06fd6d-637d-4b34-8801-17120a238c89",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "93c02acf-4ed2-4fa6-a597-828822c4f5d6",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/achsfolg\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/achsfolg/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{api}}/achsfolg/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c14e6599-cb4f-4299-a903-08c27d8ecfbc",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/achsfolg\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/achsfolg/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/achsfolg/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f1424d9-f3fe-4de8-81b1-399f07fd948b",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/achsfolg/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Antrieb",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7914cebf-af3c-424a-81d1-f8c39e672f1b",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/antrieb\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.antrieb.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.antrieb.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.antrieb.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/antrieb",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ab11dd28-a4f1-422e-a68c-53cf015aedab",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e7e0e73a-f409-4f6a-8e74-789f12f2dfe5",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/antrieb\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/antrieb/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/antrieb",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e772be63-dd52-4a60-bd6c-e6ccdf221431",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1f3751a2-d153-4f9a-96bf-c1a3f8265251",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/antrieb\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/antrieb/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/antrieb/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e7f2810-f92b-4416-904d-b8e49b78062a",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/antrieb\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/antrieb/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/antrieb/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cdbd4389-9b0a-4e47-a24c-876a8dbf5fd9",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/antrieb/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Aufbau",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2bda3fd1-06a4-45cc-a349-c6fa575e55d5",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.aufbau.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.aufbau.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.aufbau.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/aufbau",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c2f4d842-bcb1-46b7-8617-099d1438b2c2",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e91842bf-fca0-4b19-809c-22cd5bf17e67",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/aufbau/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/aufbau",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a21aca5-a00d-46ff-8f90-2d1cf5cd9d19",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/aufbau/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/aufbau/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/aufbau/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5d1ec165-3416-4e7d-a5e7-691594ca26e6",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7b61ad17-f4aa-4f11-a299-60ccc6a42017",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/aufbau/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/aufbau/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/aufbau/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b3d24ad-0ae9-4ea1-a039-2b7d51a82c96",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/aufbau/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/aufbau/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/aufbau/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "346391ad-57cb-4383-815e-7edb4db1305c",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/aufbau/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/aufbau/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f989d78-fa40-42eb-87a7-a7dc7dfcf75a",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/aufbau/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Bahnverwaltung",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d86bc256-0dd8-47f1-a5bc-80588561036a",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/bahnverwaltung\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.bahnverwaltung.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.bahnverwaltung.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.bahnverwaltung.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/bahnverwaltung",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0154176a-ab27-4042-aa26-36163f0eb23e",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"land\", pm.variables.replaceIn(\"{{$randomCountryCode}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bf882fd8-4748-479c-9f59-5fde33df071d",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/bahnverwaltung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/bahnverwaltung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"land\": \"{{land}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/bahnverwaltung",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9aeaa867-8e34-4d78-a1ea-bba860ffb378",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"land\", pm.variables.replaceIn(\"{{$randomCountryCode}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "89a6ddfb-2b57-400c-9dc3-ba7c63c0eb76",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/bahnverwaltung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/bahnverwaltung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"land\": \"{{land}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/bahnverwaltung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4dfdb73d-8947-487d-9489-80ca67b0b089",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/bahnverwaltung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/bahnverwaltung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/bahnverwaltung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df25c3f7-a473-432c-840e-36012a882ea4",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/bahnverwaltung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Epoch",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11433caa-f6d1-4197-8e44-5c66c1358f11",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/epoch\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.epoch.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.epoch.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.epoch.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/epoch",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5fbafb67-edb7-4d24-95a6-1c5014c2272e",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f2375015-56a5-422e-8878-8e6f0dae0129",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/epoch\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/epoch/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/epoch",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "60341c29-cb18-4677-9e08-003e45c3ff42",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "78cacc54-ca4f-4efa-b787-2fd74ed2563a",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/epoch\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/epoch/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/epoch/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f35d7ea-8422-40cb-a139-4918474c7f39",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/epoch\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/epoch/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/epoch/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "58af3583-7ce3-487e-9788-9f7c8ce2d17f",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/epoch/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Gattung",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9051ef4c-93ad-4ddb-8f3e-350971ecd418",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/gattung\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.gattung.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.gattung.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.gattung.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/gattung",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a11f93a2-439d-497b-a6ca-80f2a8d52adc",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2f74155c-69a0-474a-9fe6-549a93910a3c",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/gattung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/gattung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/gattung",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "19c03aa4-6ee6-4ca7-a133-5953de65d378",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a7be7db4-aa5d-483d-bc6b-816a5d516159",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/gattung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/gattung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/gattung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1be79f61-8e2e-4d7b-940a-c2c383647fa9",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/gattung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/gattung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/gattung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d955456-bfa9-4ef6-a53d-8d3c88f3d8d6",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/gattung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Hersteller",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d0d10ae-210a-4cb7-9d38-cde6aa08b93e",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/hersteller\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.hersteller.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.hersteller.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.hersteller.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/hersteller",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e761ea81-1701-4776-8ff0-f8bf1b1acfe2",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"url\", pm.variables.replaceIn(\"{{$randomUrl}}\"));\r",
									"pm.collectionVariables.set(\"telefon\", pm.variables.replaceIn(\"+1{{$$randomPhoneNumber}}\").replaceAll(/-/,\"\"));\r",
									"pm.collectionVariables.set(\"land\", pm.variables.replaceIn(\"{{$randomCountryCode}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c38e571c-f0e3-4f7b-882f-e357e475b2e1",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/hersteller\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/hersteller/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.url).to.eql(pm.variables.get(\"url\"));\r",
									"pm.expect(jsonData.telefon).to.eql(pm.variables.get(\"telefon\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"url\": \"{{url}}\",\n\t\"telefon\": \"{{telefon}}\",\n\t\"land\": \"{{land}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/hersteller",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "008bbebb-ba80-4ed2-806b-48067915106b",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"url\", pm.variables.replaceIn(\"{{$randomUrl}}\"));\r",
									"pm.collectionVariables.set(\"telefon\", pm.variables.replaceIn(\"+1{{$$randomPhoneNumber}}\").replaceAll(/-/,\"\"));\r",
									"pm.collectionVariables.set(\"land\", pm.variables.replaceIn(\"{{$randomCountryCode}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1cb26cc9-cffc-4106-aad4-0fa22fd85cc6",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/hersteller\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/hersteller/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.url).to.eql(pm.variables.get(\"url\"));\r",
									"pm.expect(jsonData.telefon).to.eql(pm.variables.get(\"telefon\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"url\": \"{{url}}\",\n\t\"telefon\": \"{{telefon}}\",\n\t\"land\": \"{{land}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/hersteller/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f69482b2-f71e-4244-9a95-02c7a5cb294d",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/hersteller\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/hersteller/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.url).to.eql(pm.variables.get(\"url\"));\r",
									"pm.expect(jsonData.telefon).to.eql(pm.variables.get(\"telefon\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/hersteller/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b66ceb1-0832-4351-8635-d50813069e42",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/hersteller/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Kupplung",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4dd32064-2db7-4e14-9a92-ef20542591ec",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.kupplung.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.kupplung.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.kupplung.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kupplung",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c56c49fd-c15d-42f8-a4fe-4e269b85f83d",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "25a1315a-ebca-4450-b334-f773d2ea779d",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kupplung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kupplung",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5bdb70c-b974-48e0-a9dc-7b58a7e1b531",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kupplung/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/kupplung/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/kupplung/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2f8011f4-7edc-404e-91fc-ba9af89acdf5",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cf83259e-3e98-4fd9-99a0-36822a3530a5",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kupplung/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/kupplung/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kupplung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ce67ad34-9419-4834-9158-29d76d67b1da",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kupplung/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/kupplung/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kupplung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c4c0116b-1af3-4a2d-acfc-05c130072b4b",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kupplung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/kupplung/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "049bd522-3755-46e1-acbb-6b7153145f0a",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/kupplung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Licht",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a6a5cb8-0506-4e39-a6a3-31281761cedb",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.licht.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.licht.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.licht.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/licht",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c4ae3ad9-61e1-4f1e-9718-17b374842666",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "53c11e78-4d2e-49b0-a747-1ee8a624936d",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/licht/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/licht",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95772dfd-e5b4-4a46-b1b1-6d482e05c32b",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/licht/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/licht/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/licht/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "57ba5342-59fa-44fd-902a-78b00c107ddd",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "50fc5b4c-36fa-4f5d-9866-614e4fa8321d",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/licht/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/licht/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/licht/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eaf676c5-0e28-4090-8622-c3b4d0091835",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/licht/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/licht/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/licht/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47656efb-5cf9-4168-a744-a3ff07227e6c",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/licht/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/licht/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "30efb1a3-c65b-468f-a0e1-b976941c2319",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/licht/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Massstab",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "565c0dbe-7401-4ef4-a8e9-3aa724821109",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/massstab\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.massstab.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.massstab.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.massstab.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/massstab",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9bbf1045-05bb-4f92-a17b-6b2c48b6d6e9",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e5aec71a-1c11-4aba-a24f-9e0e40ed38b4",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/massstab\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/massstab/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/massstab",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b8c017de-5f67-4bb7-ab99-0c064a21f1f3",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "299bcb96-c9ca-474a-a37f-3dce96cf9994",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/massstab\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/massstab/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/massstab/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd5025d7-0c04-41ee-96a2-bcc22992a515",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/massstab\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/massstab/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/massstab/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4054ba4f-31e2-4c9e-af34-3642a28456ab",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/massstab/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Motor Typ",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dfa24e7b-fbac-4d47-ad48-ef72ecf0cdb8",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/motorTyp\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.motorTyp.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.motorTyp.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.motorTyp.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/motorTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "19557918-a414-4dda-9bfd-76c977bea425",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7d04ecb6-3b0d-496f-932d-e18b6468dfe6",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/motorTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/motorTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/motorTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8b08ea5d-c454-461a-8887-f6e7119580dc",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2d36bf21-1995-4ff7-a36a-262e100f0cc8",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/motorTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/motorTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/motorTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ba5415d-f943-488a-83ed-051032084968",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/motorTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/motorTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/motorTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1cc05d52-dfa9-41d9-8816-f97208b79949",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/motorTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Protokoll",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a456a964-2137-4570-b785-7f6795b20c48",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/protokoll\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.protokoll.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.protokoll.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.protokoll.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/protokoll",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "28198e37-c0e6-4c73-8a9a-eb2a7abae7ab",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ab690c87-e423-4eff-a561-dfd6463dcb46",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/protokoll\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/protokoll/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/protokoll",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8a29b68c-a1f8-4367-b202-408d27a37fcc",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "87bceece-809d-4afc-bbb1-f6b0fb17fbcd",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/protokoll\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/protokoll/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/protokoll/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6494b5c6-0f8d-4bcd-9430-39953265321c",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/protokoll\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/protokoll/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/protokoll/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95369c64-d2fb-4d66-ba41-6e338ba1df4e",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/protokoll/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Sondermodell",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3eaf1b8-4f55-4c46-a60e-d9ff03d451be",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/sondermodell\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.sondermodell.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.sondermodell.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.sondermodell.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/sondermodell",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5587700d-36f9-4dc6-a22a-876b437c17e3",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "155c4fa7-9a13-4c22-a4d4-6279880030dc",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/sondermodell\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/sondermodell/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/sondermodell",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e6c29b04-d0e0-419d-b95d-53878a02a0e0",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c3016feb-63e8-4ddf-82da-0c7f5467e33c",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/sondermodell\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/sondermodell/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/sondermodell/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "af968449-4b09-4f17-a8f6-be0a82bd67ec",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/sondermodell\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/sondermodell/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/sondermodell/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a318a80f-2dca-4f6e-a8bd-b1985c4186c6",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/sondermodell/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Spurweite",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3aba3c44-996b-4110-8379-553fb0addf7c",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/spurweite\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.spurweite.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.spurweite.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.spurweite.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/spurweite",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4d12f6ed-1cd6-4204-a3f5-37a8550c8957",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f5da479f-1366-4047-a0d7-064361a62eed",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/spurweite\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/spurweite/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/spurweite",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d2bc3678-46bd-4ad1-bec7-000988e845aa",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fcb52eee-342c-4f1d-b5fb-db907d31ce63",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/spurweite\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/spurweite/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/spurweite/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ecfd7ffd-434b-4ed9-83bb-98f4a596901f",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/spurweite\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/spurweite/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/spurweite/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c09c536d-d43c-416e-939c-8ab6f4346a57",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/spurweite/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Steuerung",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e1bdb4a-8f4c-41e9-8d6c-6856b678060d",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/steuerung\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.steuerung.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.steuerung.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.steuerung.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/steuerung",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ea349262-2007-459c-9a83-f94341b2e50f",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9afc6c00-c791-40b9-9f3c-66daaf4b938a",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/steuerung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/steuerung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/steuerung",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "eea595ea-b6eb-40a8-a07c-9fef0c689439",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e783885a-4b35-4246-8092-4b3dd4ab022e",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/steuerung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/steuerung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/steuerung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ac73b70-ea43-461d-b30c-0bc93049b9c5",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/steuerung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/steuerung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/steuerung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e21a2d8b-71bf-43e2-8150-6d54196088dd",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/steuerung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Zug Typ",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a9632d9-a4cf-4e2c-89b1-2e36d9a6cc14",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zugTyp\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.zugTyp.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.zugTyp.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.zugTyp.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/zugTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b651a9d1-a89e-4de6-bd53-94b2c8f70b75",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fabb5bfd-1674-468f-9b78-ca5d934d6674",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zugTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zugTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zugTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a46e7c0d-ec0b-4608-86f9-439ceffecbd3",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "df211a94-1558-4f7e-b147-993a6f4b18e8",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zugTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zugTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zugTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3b403f4-a324-483c-9d01-87ed5b292407",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zugTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zugTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/zugTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "acfb247a-0363-40fe-a2e1-cd7d184ee6a4",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/zugTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Kategorie",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "910e4ead-0fd9-4e8e-992c-7ef863af9e0a",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.kategorie.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.kategorie.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.kategorie.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Unter Kategorie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b1eb534-61e2-4de5-a778-65c4c3b1f506",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.kategorie.forEach(function(k) { \r",
									"    var self = root + \"/\" + k.name;\r",
									"    pm.expect(k.name).to.be.oneOf([\"AUSGESTALTUNG\",\"BELEUCHTUNG\"]);\r",
									"    pm.expect(k.bezeichnung).to.exist;\r",
									"    k.unterKategorien.forEach(function(u){\r",
									"        pm.expect(u.kategorie).to.eql(k.name);\r",
									"        pm.expect(u.name).to.exist;\r",
									"        pm.expect(u.bezeichnung).to.exist;\r",
									"        pm.expect(u.deleted).to.be.false;\r",
									"    });\r",
									"    pm.expect(k.deleted).to.be.false;\r",
									"    pm.expect(k._links.add[0].href).to.eql(root);\r",
									"    pm.expect(k._links.self[0].href).to.eql(self);\r",
									"    pm.expect(k._links.update[0].href).to.eql(self);\r",
									"    pm.expect(k._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(k._links.search[0].href).to.eql(root);\r",
									"});\r",
									"root = pm.variables.replaceIn(\"{{api}}/unterKategorien?kategorien=AUSGESTALTUNG,BELEUCHTUNG\");\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.kategorie.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.kategorie.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/unterKategorien?kategorien=AUSGESTALTUNG,BELEUCHTUNG",
							"host": [
								"{{api}}"
							],
							"path": [
								"unterKategorien"
							],
							"query": [
								{
									"key": "kategorien",
									"value": "AUSGESTALTUNG,BELEUCHTUNG"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "55d2d912-fd42-4158-bdfa-441c916d56e5",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e4220380-9a61-4e2d-88f7-f698c3932c19",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.unterKategorie).to.eql(undefined);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Unter Kategorie",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "48bfbc2e-3ecc-4b67-90a1-3c62b114af4f",
								"exec": [
									"pm.collectionVariables.set(\"unterAdd\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"unterBezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c6d1dc7e-77fb-4609-86e7-84131b70a775",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}\");\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"unterAdd\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"unterBezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"kategorie\": \"{{name}}\",\n\t\"name\": \"{{unterAdd}}\",\n\t\"bezeichnung\": \"{{unterBezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kategorie/{{name}}/unterKategorien",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}",
								"unterKategorien"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Unter Kategorie",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f55092a4-a16e-4141-9e8e-4f8229d367df",
								"exec": [
									"pm.collectionVariables.set(\"unterBezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1dfa4dff-210f-4414-8312-b0bbb29fa2fe",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}\");\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"unterAdd\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"unterBezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"kategorie\": \"{{name}}\",\n\t\"name\": \"{{unterAdd}}\",\n\t\"bezeichnung\": \"{{unterBezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}",
								"unterKategorien",
								"{{unterAdd}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8a577ff3-b30c-4e61-983c-93461b886c6b",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8095ee25-4f0a-4613-a26c-6759c9e6ca40",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}\");\r",
									"var child = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.unterKategorien.length).to.eql(1);\r",
									"pm.expect(jsonData.unterKategorien[0].kategorie).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.unterKategorien[0].name).to.eql(pm.variables.get(\"unterAdd\"));\r",
									"pm.expect(jsonData.unterKategorien[0].bezeichnung).to.eql(pm.variables.get(\"unterBezeichnung\"));\r",
									"pm.expect(jsonData.unterKategorien[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.unterKategorien[0]._links.add[0].href).to.eql(self);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.update[0].href).to.eql(child);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.delete[0].href).to.eql(child);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kategorie/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b2b8230e-1cce-45a0-9638-28d1bc2f8fdc",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}\");\r",
									"var child = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.unterKategorien.length).to.eql(1);\r",
									"pm.expect(jsonData.unterKategorien[0].kategorie).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.unterKategorien[0].name).to.eql(pm.variables.get(\"unterAdd\"));\r",
									"pm.expect(jsonData.unterKategorien[0].bezeichnung).to.eql(pm.variables.get(\"unterBezeichnung\"));\r",
									"pm.expect(jsonData.unterKategorien[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.unterKategorien[0]._links.add[0].href).to.eql(self);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.update[0].href).to.eql(child);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.delete[0].href).to.eql(child);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kategorie/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Unter Kategorie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8f35541-ea52-47cb-9429-10ed5134d58e",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}",
								"unterKategorien",
								"{{unterAdd}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0689b65e-3572-47d5-8f2c-7eea38890489",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/kategorie/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Vorbild",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d41bde9-8f4e-44cd-9d4e-0840532772cd",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.vorbild.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.gattung;\r",
									"    pm.expect(a.gattung).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.vorbild.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.vorbild.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/vorbild",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7ef78628-095e-4d66-99cc-3af983d90523",
								"exec": [
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}{{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.collectionVariables.set(\"gattung\", pm.variables.replaceIn(\"{{gattungAdd}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"kategorie\", pm.variables.replaceIn(\"{{kategorieAdd}}\"));\r",
									"pm.collectionVariables.set(\"unterKategorie\", pm.variables.replaceIn(\"{{unterKategorieAdd}}\"));\r",
									"pm.collectionVariables.set(\"bahnverwaltung\", pm.variables.replaceIn(\"{{bahnverwaltungAdd}}\"));\r",
									"pm.collectionVariables.set(\"hersteller\", pm.variables.replaceIn(\"{{$randomCompanyName}}\"));\r",
									"pm.collectionVariables.set(\"bauzeit\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.collectionVariables.set(\"anzahl\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.collectionVariables.set(\"antrieb\", pm.variables.replaceIn(\"{{antriebAdd}}\"));\r",
									"pm.collectionVariables.set(\"achsfolg\", pm.variables.replaceIn(\"{{achsfolgAdd}}\"));\r",
									"pm.collectionVariables.set(\"anfahrzugkraft\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"leistung\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"dienstgewicht\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"geschwindigkeit\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"ausserdienst\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.collectionVariables.set(\"dmTreibrad\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"dmLaufradVorn\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"dmLaufradHinten\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"zylinder\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"dmZylinder\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"kolbenhub\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"kesseluberdruck\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"rostflache\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"uberhitzerflache\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"wasservorrat\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"verdampfung\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"fahrmotoren\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"motorbauart\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"leistungsUbertragung\", pm.variables.replaceIn(\"{{leistungsUbertragungAdd}}\"));\r",
									"pm.collectionVariables.set(\"reichweite\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"kapazitat\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"klasse\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"sitzplatzeKL1\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"sitzplatzeKL2\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"sitzplatzeKL3\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"sitzplatzeKL4\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"aufbau\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"triebkopf\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"mittelwagen\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"drehgestellBauart\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d44fbd3c-f438-469d-bb0b-fca0a413ae4d",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var gattung = pm.variables.get(\"gattung\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/vorbild/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.antrieb).to.eql(pm.variables.get(\"antrieb\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.leistung).to.eql(pm.variables.get(\"leistung\"));\r",
									"pm.expect(jsonData.dienstgewicht).to.eql(pm.variables.get(\"dienstgewicht\"));\r",
									"pm.expect(jsonData.geschwindigkeit).to.eql(pm.variables.get(\"geschwindigkeit\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.ausserdienst).to.eql(pm.variables.get(\"ausserdienst\"));\r",
									"pm.expect(jsonData.dmTreibrad).to.eql(pm.variables.get(\"dmTreibrad\"));\r",
									"pm.expect(jsonData.zylinder).to.eql(pm.variables.get(\"zylinder\"));\r",
									"pm.expect(jsonData.dmZylinder).to.eql(pm.variables.get(\"dmZylinder\"));\r",
									"pm.expect(jsonData.kolbenhub).to.eql(pm.variables.get(\"kolbenhub\"));\r",
									"pm.expect(jsonData.kesseluberdruck).to.eql(pm.variables.get(\"kesseluberdruck\"));\r",
									"pm.expect(jsonData.rostflache).to.eql(pm.variables.get(\"rostflache\"));\r",
									"pm.expect(jsonData.uberhitzerflache).to.eql(pm.variables.get(\"uberhitzerflache\"));\r",
									"pm.expect(jsonData.wasservorrat).to.eql(pm.variables.get(\"wasservorrat\"));\r",
									"pm.expect(jsonData.verdampfung).to.eql(pm.variables.get(\"verdampfung\"));\r",
									"pm.expect(jsonData.fahrmotoren).to.eql(pm.variables.get(\"fahrmotoren\"));\r",
									"pm.expect(jsonData.motorbauart).to.eql(pm.variables.get(\"motorbauart\"));\r",
									"pm.expect(jsonData.leistungsUbertragung).to.eql(pm.variables.get(\"leistungsUbertragung\"));\r",
									"pm.expect(jsonData.reichweite).to.eql(pm.variables.get(\"reichweite\"));\r",
									"pm.expect(jsonData.kapazitat).to.eql(pm.variables.get(\"kapazitat\"));\r",
									"pm.expect(jsonData.klasse).to.eql(pm.variables.get(\"klasse\"));\r",
									"pm.expect(jsonData.sitzplatzeKL1).to.eql(pm.variables.get(\"sitzplatzeKL1\"));\r",
									"pm.expect(jsonData.sitzplatzeKL2).to.eql(pm.variables.get(\"sitzplatzeKL2\"));\r",
									"pm.expect(jsonData.sitzplatzeKL3).to.eql(pm.variables.get(\"sitzplatzeKL3\"));\r",
									"pm.expect(jsonData.sitzplatzeKL4).to.eql(pm.variables.get(\"sitzplatzeKL4\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.triebkopf).to.eql(pm.variables.get(\"triebkopf\"));\r",
									"pm.expect(jsonData.mittelwagen).to.eql(pm.variables.get(\"mittelwagen\"));\r",
									"pm.expect(jsonData.drehgestellBauart).to.eql(pm.variables.get(\"drehgestellBauart\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{name}}\",\n    \"gattung\": \"{{gattung}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"hersteller\": \"{{hersteller}}\",\n    \"bauzeit\": \"{{bauzeit}}\",\n    \"anzahl\": {{anzahl}},\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"antrieb\":\"{{antrieb}}\",\n    \"achsfolg\":\"{{achsfolg}}\",\n    \"leistung\": {{leistung}},\n    \"dienstgewicht\": {{dienstgewicht}},\n    \"geschwindigkeit\": {{geschwindigkeit}},\n    \"lange\": {{lange}},\n    \"ausserdienst\": \"{{ausserdienst}}\",\n    \"dmTreibrad\": {{dmTreibrad}},\n    \"zylinder\": {{zylinder}},\n    \"dmZylinder\": {{dmZylinder}},\n    \"kolbenhub\": {{kolbenhub}},\n    \"kesseluberdruck\": {{kesseluberdruck}},\n    \"rostflache\": {{rostflache}},\n    \"uberhitzerflache\": {{uberhitzerflache}},\n    \"wasservorrat\": {{wasservorrat}},\n    \"verdampfung\": {{verdampfung}},\n    \"fahrmotoren\": {{fahrmotoren}},\n    \"motorbauart\": \"{{motorbauart}}\",\n    \"leistungsUbertragung\": \"{{leistungsUbertragung}}\",\n    \"reichweite\": {{reichweite}},\n    \"kapazitat\": {{kapazitat}},\n    \"klasse\": {{klasse}},\n    \"sitzplatzeKL1\": {{sitzplatzeKL1}},\n    \"sitzplatzeKL2\": {{sitzplatzeKL2}},\n    \"sitzplatzeKL3\": {{sitzplatzeKL3}},\n    \"sitzplatzeKL4\": {{sitzplatzeKL4}},\n    \"aufbau\": \"{{aufbau}}\",\n    \"triebkopf\": {{triebkopf}},\n    \"mittelwagen\": {{mittelwagen}},\n    \"drehgestellBauart\": \"{{drehgestellBauart}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/vorbild",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1d43054-652c-471d-9979-ceeebb41d68f",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/vorbild/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/vorbild/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.antrieb).to.eql(pm.variables.get(\"antrieb\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.leistung).to.eql(pm.variables.get(\"leistung\"));\r",
									"pm.expect(jsonData.dienstgewicht).to.eql(pm.variables.get(\"dienstgewicht\"));\r",
									"pm.expect(jsonData.geschwindigkeit).to.eql(pm.variables.get(\"geschwindigkeit\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.ausserdienst).to.eql(pm.variables.get(\"ausserdienst\"));\r",
									"pm.expect(jsonData.dmTreibrad).to.eql(pm.variables.get(\"dmTreibrad\"));\r",
									"pm.expect(jsonData.zylinder).to.eql(pm.variables.get(\"zylinder\"));\r",
									"pm.expect(jsonData.dmZylinder).to.eql(pm.variables.get(\"dmZylinder\"));\r",
									"pm.expect(jsonData.kolbenhub).to.eql(pm.variables.get(\"kolbenhub\"));\r",
									"pm.expect(jsonData.kesseluberdruck).to.eql(pm.variables.get(\"kesseluberdruck\"));\r",
									"pm.expect(jsonData.rostflache).to.eql(pm.variables.get(\"rostflache\"));\r",
									"pm.expect(jsonData.uberhitzerflache).to.eql(pm.variables.get(\"uberhitzerflache\"));\r",
									"pm.expect(jsonData.wasservorrat).to.eql(pm.variables.get(\"wasservorrat\"));\r",
									"pm.expect(jsonData.verdampfung).to.eql(pm.variables.get(\"verdampfung\"));\r",
									"pm.expect(jsonData.fahrmotoren).to.eql(pm.variables.get(\"fahrmotoren\"));\r",
									"pm.expect(jsonData.motorbauart).to.eql(pm.variables.get(\"motorbauart\"));\r",
									"pm.expect(jsonData.leistungsUbertragung).to.eql(pm.variables.get(\"leistungsUbertragung\"));\r",
									"pm.expect(jsonData.reichweite).to.eql(pm.variables.get(\"reichweite\"));\r",
									"pm.expect(jsonData.kapazitat).to.eql(pm.variables.get(\"kapazitat\"));\r",
									"pm.expect(jsonData.klasse).to.eql(pm.variables.get(\"klasse\"));\r",
									"pm.expect(jsonData.sitzplatzeKL1).to.eql(pm.variables.get(\"sitzplatzeKL1\"));\r",
									"pm.expect(jsonData.sitzplatzeKL2).to.eql(pm.variables.get(\"sitzplatzeKL2\"));\r",
									"pm.expect(jsonData.sitzplatzeKL3).to.eql(pm.variables.get(\"sitzplatzeKL3\"));\r",
									"pm.expect(jsonData.sitzplatzeKL4).to.eql(pm.variables.get(\"sitzplatzeKL4\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.triebkopf).to.eql(pm.variables.get(\"triebkopf\"));\r",
									"pm.expect(jsonData.mittelwagen).to.eql(pm.variables.get(\"mittelwagen\"));\r",
									"pm.expect(jsonData.drehgestellBauart).to.eql(pm.variables.get(\"drehgestellBauart\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/vorbild/{{gattung}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{gattung}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "49ed0e81-2765-4b48-acde-76247aa6bcde",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/vorbild/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/vorbild/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.antrieb).to.eql(pm.variables.get(\"antrieb\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.leistung).to.eql(pm.variables.get(\"leistung\"));\r",
									"pm.expect(jsonData.dienstgewicht).to.eql(pm.variables.get(\"dienstgewicht\"));\r",
									"pm.expect(jsonData.geschwindigkeit).to.eql(pm.variables.get(\"geschwindigkeit\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.ausserdienst).to.eql(pm.variables.get(\"ausserdienst\"));\r",
									"pm.expect(jsonData.dmTreibrad).to.eql(pm.variables.get(\"dmTreibrad\"));\r",
									"pm.expect(jsonData.zylinder).to.eql(pm.variables.get(\"zylinder\"));\r",
									"pm.expect(jsonData.dmZylinder).to.eql(pm.variables.get(\"dmZylinder\"));\r",
									"pm.expect(jsonData.kolbenhub).to.eql(pm.variables.get(\"kolbenhub\"));\r",
									"pm.expect(jsonData.kesseluberdruck).to.eql(pm.variables.get(\"kesseluberdruck\"));\r",
									"pm.expect(jsonData.rostflache).to.eql(pm.variables.get(\"rostflache\"));\r",
									"pm.expect(jsonData.uberhitzerflache).to.eql(pm.variables.get(\"uberhitzerflache\"));\r",
									"pm.expect(jsonData.wasservorrat).to.eql(pm.variables.get(\"wasservorrat\"));\r",
									"pm.expect(jsonData.verdampfung).to.eql(pm.variables.get(\"verdampfung\"));\r",
									"pm.expect(jsonData.fahrmotoren).to.eql(pm.variables.get(\"fahrmotoren\"));\r",
									"pm.expect(jsonData.motorbauart).to.eql(pm.variables.get(\"motorbauart\"));\r",
									"pm.expect(jsonData.leistungsUbertragung).to.eql(pm.variables.get(\"leistungsUbertragung\"));\r",
									"pm.expect(jsonData.reichweite).to.eql(pm.variables.get(\"reichweite\"));\r",
									"pm.expect(jsonData.kapazitat).to.eql(pm.variables.get(\"kapazitat\"));\r",
									"pm.expect(jsonData.klasse).to.eql(pm.variables.get(\"klasse\"));\r",
									"pm.expect(jsonData.sitzplatzeKL1).to.eql(pm.variables.get(\"sitzplatzeKL1\"));\r",
									"pm.expect(jsonData.sitzplatzeKL2).to.eql(pm.variables.get(\"sitzplatzeKL2\"));\r",
									"pm.expect(jsonData.sitzplatzeKL3).to.eql(pm.variables.get(\"sitzplatzeKL3\"));\r",
									"pm.expect(jsonData.sitzplatzeKL4).to.eql(pm.variables.get(\"sitzplatzeKL4\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.triebkopf).to.eql(pm.variables.get(\"triebkopf\"));\r",
									"pm.expect(jsonData.mittelwagen).to.eql(pm.variables.get(\"mittelwagen\"));\r",
									"pm.expect(jsonData.drehgestellBauart).to.eql(pm.variables.get(\"drehgestellBauart\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4b4e9084-5cb8-4e72-bd9e-419aeb45fdd4",
								"exec": [
									"pm.collectionVariables.set(\"gattung\", \"BR103\");\r",
									"pm.collectionVariables.set(\"gattung\", pm.variables.replaceIn(\"{{gattungUpdate}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"kategorie\", pm.variables.replaceIn(\"{{kategorieUpdate}}\"));\r",
									"pm.collectionVariables.set(\"unterKategorie\", pm.variables.replaceIn(\"{{unterKategorieUpdate}}\"));\r",
									"pm.collectionVariables.set(\"bahnverwaltung\", pm.variables.replaceIn(\"{{bahnverwaltungUpdate}}\"));\r",
									"pm.collectionVariables.set(\"hersteller\", pm.variables.replaceIn(\"{{$randomCompanyName}}\"));\r",
									"pm.collectionVariables.set(\"bauzeit\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.collectionVariables.set(\"anzahl\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.collectionVariables.set(\"antrieb\", pm.variables.replaceIn(\"{{antriebUpdate}}\"));\r",
									"pm.collectionVariables.set(\"achsfolg\", pm.variables.replaceIn(\"{{achsfolgUpdate}}\"));\r",
									"pm.collectionVariables.set(\"anfahrzugkraft\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"leistung\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"dienstgewicht\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"geschwindigkeit\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"ausserdienst\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.collectionVariables.set(\"dmTreibrad\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"dmLaufradVorn\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"dmLaufradHinten\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"zylinder\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"dmZylinder\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"kolbenhub\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"kesseluberdruck\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"rostflache\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"uberhitzerflache\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"wasservorrat\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"verdampfung\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"fahrmotoren\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"motorbauart\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"leistungsUbertragung\", pm.variables.replaceIn(\"{{leistungsUbertragungUpdate}}\"));\r",
									"pm.collectionVariables.set(\"reichweite\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"kapazitat\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"klasse\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"sitzplatzeKL1\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"sitzplatzeKL2\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"sitzplatzeKL3\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"sitzplatzeKL4\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"aufbau\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"triebkopf\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"mittelwagen\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"drehgestellBauart\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{name}}\",\n    \"gattung\": \"{{gattung}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"hersteller\": \"{{hersteller}}\",\n    \"bauzeit\": \"{{bauzeit}}\",\n    \"anzahl\": {{anzahl}},\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"antrieb\":\"{{antrieb}}\",\n    \"achsfolg\":\"{{achsfolg}}\",\n    \"leistung\": {{leistung}},\n    \"dienstgewicht\": {{dienstgewicht}},\n    \"geschwindigkeit\": {{geschwindigkeit}},\n    \"lange\": {{lange}},\n    \"ausserdienst\": \"{{ausserdienst}}\",\n    \"dmTreibrad\": {{dmTreibrad}},\n    \"zylinder\": {{zylinder}},\n    \"dmZylinder\": {{dmZylinder}},\n    \"kolbenhub\": {{kolbenhub}},\n    \"kesseluberdruck\": {{kesseluberdruck}},\n    \"rostflache\": {{rostflache}},\n    \"uberhitzerflache\": {{uberhitzerflache}},\n    \"wasservorrat\": {{wasservorrat}},\n    \"verdampfung\": {{verdampfung}},\n    \"fahrmotoren\": {{fahrmotoren}},\n    \"motorbauart\": \"{{motorbauart}}\",\n    \"leistungsUbertragung\": \"{{leistungsUbertragung}}\",\n    \"reichweite\": {{reichweite}},\n    \"kapazitat\": {{kapazitat}},\n    \"klasse\": {{klasse}},\n    \"sitzplatzeKL1\": {{sitzplatzeKL1}},\n    \"sitzplatzeKL2\": {{sitzplatzeKL2}},\n    \"sitzplatzeKL3\": {{sitzplatzeKL3}},\n    \"sitzplatzeKL4\": {{sitzplatzeKL4}},\n    \"aufbau\": \"{{aufbau}}\",\n    \"triebkopf\": {{triebkopf}},\n    \"mittelwagen\": {{mittelwagen}},\n    \"drehgestellBauart\": \"{{drehgestellBauart}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/vorbild/{{gattung}",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{gattung}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "85e01a52-1ef8-46f8-aa7c-25e68a70a001",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var gattung = pm.variables.get(\"gattung\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/vorbild/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/vorbild/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.antrieb).to.eql(pm.variables.get(\"antrieb\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.leistung).to.eql(pm.variables.get(\"leistung\"));\r",
									"pm.expect(jsonData.dienstgewicht).to.eql(pm.variables.get(\"dienstgewicht\"));\r",
									"pm.expect(jsonData.geschwindigkeit).to.eql(pm.variables.get(\"geschwindigkeit\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.ausserdienst).to.eql(pm.variables.get(\"ausserdienst\"));\r",
									"pm.expect(jsonData.dmTreibrad).to.eql(pm.variables.get(\"dmTreibrad\"));\r",
									"pm.expect(jsonData.zylinder).to.eql(pm.variables.get(\"zylinder\"));\r",
									"pm.expect(jsonData.dmZylinder).to.eql(pm.variables.get(\"dmZylinder\"));\r",
									"pm.expect(jsonData.kolbenhub).to.eql(pm.variables.get(\"kolbenhub\"));\r",
									"pm.expect(jsonData.kesseluberdruck).to.eql(pm.variables.get(\"kesseluberdruck\"));\r",
									"pm.expect(jsonData.rostflache).to.eql(pm.variables.get(\"rostflache\"));\r",
									"pm.expect(jsonData.uberhitzerflache).to.eql(pm.variables.get(\"uberhitzerflache\"));\r",
									"pm.expect(jsonData.wasservorrat).to.eql(pm.variables.get(\"wasservorrat\"));\r",
									"pm.expect(jsonData.verdampfung).to.eql(pm.variables.get(\"verdampfung\"));\r",
									"pm.expect(jsonData.fahrmotoren).to.eql(pm.variables.get(\"fahrmotoren\"));\r",
									"pm.expect(jsonData.motorbauart).to.eql(pm.variables.get(\"motorbauart\"));\r",
									"pm.expect(jsonData.leistungsUbertragung).to.eql(pm.variables.get(\"leistungsUbertragung\"));\r",
									"pm.expect(jsonData.reichweite).to.eql(pm.variables.get(\"reichweite\"));\r",
									"pm.expect(jsonData.kapazitat).to.eql(pm.variables.get(\"kapazitat\"));\r",
									"pm.expect(jsonData.klasse).to.eql(pm.variables.get(\"klasse\"));\r",
									"pm.expect(jsonData.sitzplatzeKL1).to.eql(pm.variables.get(\"sitzplatzeKL1\"));\r",
									"pm.expect(jsonData.sitzplatzeKL2).to.eql(pm.variables.get(\"sitzplatzeKL2\"));\r",
									"pm.expect(jsonData.sitzplatzeKL3).to.eql(pm.variables.get(\"sitzplatzeKL3\"));\r",
									"pm.expect(jsonData.sitzplatzeKL4).to.eql(pm.variables.get(\"sitzplatzeKL4\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.triebkopf).to.eql(pm.variables.get(\"triebkopf\"));\r",
									"pm.expect(jsonData.mittelwagen).to.eql(pm.variables.get(\"mittelwagen\"));\r",
									"pm.expect(jsonData.drehgestellBauart).to.eql(pm.variables.get(\"drehgestellBauart\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/vorbild/{{gattung}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{gattung}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "848f6e2c-64ff-401e-bb58-ad600ae8633d",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/vorbild/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.antrieb).to.eql(pm.variables.get(\"antrieb\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.leistung).to.eql(pm.variables.get(\"leistung\"));\r",
									"pm.expect(jsonData.dienstgewicht).to.eql(pm.variables.get(\"dienstgewicht\"));\r",
									"pm.expect(jsonData.geschwindigkeit).to.eql(pm.variables.get(\"geschwindigkeit\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.ausserdienst).to.eql(pm.variables.get(\"ausserdienst\"));\r",
									"pm.expect(jsonData.dmTreibrad).to.eql(pm.variables.get(\"dmTreibrad\"));\r",
									"pm.expect(jsonData.zylinder).to.eql(pm.variables.get(\"zylinder\"));\r",
									"pm.expect(jsonData.dmZylinder).to.eql(pm.variables.get(\"dmZylinder\"));\r",
									"pm.expect(jsonData.kolbenhub).to.eql(pm.variables.get(\"kolbenhub\"));\r",
									"pm.expect(jsonData.kesseluberdruck).to.eql(pm.variables.get(\"kesseluberdruck\"));\r",
									"pm.expect(jsonData.rostflache).to.eql(pm.variables.get(\"rostflache\"));\r",
									"pm.expect(jsonData.uberhitzerflache).to.eql(pm.variables.get(\"uberhitzerflache\"));\r",
									"pm.expect(jsonData.wasservorrat).to.eql(pm.variables.get(\"wasservorrat\"));\r",
									"pm.expect(jsonData.verdampfung).to.eql(pm.variables.get(\"verdampfung\"));\r",
									"pm.expect(jsonData.fahrmotoren).to.eql(pm.variables.get(\"fahrmotoren\"));\r",
									"pm.expect(jsonData.motorbauart).to.eql(pm.variables.get(\"motorbauart\"));\r",
									"pm.expect(jsonData.leistungsUbertragung).to.eql(pm.variables.get(\"leistungsUbertragung\"));\r",
									"pm.expect(jsonData.reichweite).to.eql(pm.variables.get(\"reichweite\"));\r",
									"pm.expect(jsonData.kapazitat).to.eql(pm.variables.get(\"kapazitat\"));\r",
									"pm.expect(jsonData.klasse).to.eql(pm.variables.get(\"klasse\"));\r",
									"pm.expect(jsonData.sitzplatzeKL1).to.eql(pm.variables.get(\"sitzplatzeKL1\"));\r",
									"pm.expect(jsonData.sitzplatzeKL2).to.eql(pm.variables.get(\"sitzplatzeKL2\"));\r",
									"pm.expect(jsonData.sitzplatzeKL3).to.eql(pm.variables.get(\"sitzplatzeKL3\"));\r",
									"pm.expect(jsonData.sitzplatzeKL4).to.eql(pm.variables.get(\"sitzplatzeKL4\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.triebkopf).to.eql(pm.variables.get(\"triebkopf\"));\r",
									"pm.expect(jsonData.mittelwagen).to.eql(pm.variables.get(\"mittelwagen\"));\r",
									"pm.expect(jsonData.drehgestellBauart).to.eql(pm.variables.get(\"drehgestellBauart\"));\r",
									"pm.expect(jsonData.abbildung).to.be(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/vorbild/{{gattung}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{gattung}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3d44f66f-d6f1-4603-9d7e-a5259269fb29",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/vorbild/{{gattung}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{gattung}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Decoder Typ",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e46b5a3-0adb-46f8-95a9-a7b7770fb298",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.decoderTyp.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.decoderTyp.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.decoderTyp.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c0865e2c-e05e-46c4-9067-cf566c77edd3",
								"exec": [
									"pm.collectionVariables.set(\"hersteller\", pm.variables.get(\"decoderHerstellerAdd\"));\r",
									"pm.collectionVariables.set(\"bestellNr\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"iMax\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"protokoll\", pm.variables.get(\"protokollAdd\"));\r",
									"pm.collectionVariables.set(\"fahrstufe\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"gerausch\", new Boolean(true));\r",
									"pm.collectionVariables.set(\"konfiguration\", pm.variables.get(\"konfigurationAdd\"));\r",
									"pm.collectionVariables.set(\"stecker\", pm.variables.get(\"steckerAdd\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f9e7520e-8f5c-4af0-9e91-7886b9db166a",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.iMax).to.eql(pm.variables.get(\"iMax\"));\r",
									"pm.expect(jsonData.protokoll).to.eql(pm.variables.get(\"protokoll\"));\r",
									"pm.expect(jsonData.fahrstufe).to.eql(pm.variables.get(\"fahrstufe\"));\r",
									"pm.expect(jsonData.gerausch).to.eql(pm.variables.get(\"gerausch\"));\r",
									"pm.expect(jsonData.konfiguration).to.eql(pm.variables.get(\"konfiguration\"));\r",
									"pm.expect(jsonData.stecker).to.eql(pm.variables.get(\"stecker\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(undefined);\r",
									"pm.expect(jsonData.adressen).to.eql(undefined);\r",
									"pm.expect(jsonData.cvs).to.eql(undefined);\r",
									"pm.expect(jsonData.funktionen).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"iMax\": {{iMax}},\n    \"protokoll\": \"{{protokoll}}\",\n    \"fahrstufe\": {{fahrstufe}},\n    \"gerausch\": false,\n    \"konfiguration\": \"{{konfiguration}}\",\n    \"stecker\": \"{{stecker}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Anleitungen",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1b1ce677-611b-40c7-a0c4-9459b03b6f29",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.iMax).to.eql(pm.variables.get(\"iMax\"));\r",
									"pm.expect(jsonData.protokoll).to.eql(pm.variables.get(\"protokoll\"));\r",
									"pm.expect(jsonData.fahrstufe).to.eql(pm.variables.get(\"fahrstufe\"));\r",
									"pm.expect(jsonData.gerausch).to.eql(pm.variables.get(\"gerausch\"));\r",
									"pm.expect(jsonData.konfiguration).to.eql(pm.variables.get(\"konfiguration\"));\r",
									"pm.expect(jsonData.stecker).to.eql(pm.variables.get(\"stecker\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.adressen).to.eql(undefined);\r",
									"pm.expect(jsonData.cvs).to.eql(undefined);\r",
									"pm.expect(jsonData.funktionen).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "anleitungen",
									"type": "file",
									"src": "{{pdfFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/anleitungen",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"anleitungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Adress",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9193f5df-9cd6-4993-9387-e1737f461ed5",
								"exec": [
									"pm.collectionVariables.set(\"index\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"adressAdd\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"adressTyp\", \"MFX\");\r",
									"pm.collectionVariables.set(\"span\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"adress\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ca29246c-21f2-496a-9844-ffa059d23c32",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{index}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.index).to.eql(pm.variables.get(\"index\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"adressAdd\"));\r",
									"pm.expect(jsonData.adressTyp).to.eql(pm.variables.get(\"adressTyp\"));\r",
									"pm.expect(jsonData.span).to.eql(pm.variables.get(\"span\"));\r",
									"pm.expect(jsonData.werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{bestellNr}}\",\n    \"index\": {{index}},\n\t\"bezeichnung\": \"{{adressAdd}}\",\n    \"adressTyp\": \"{{adressTyp}}\",\n    \"span\": {{span}},\n    \"werkseinstellung\": {{adress}},\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/adress",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"adress"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Adress",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "16a94cc0-8065-4371-a5f4-8ab78e714a70",
								"exec": [
									"pm.collectionVariables.set(\"index\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"adressAdd\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"adressTyp\", \"DELTA\");\r",
									"pm.collectionVariables.set(\"span\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"adress\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1df50aa3-f8a8-404f-91f1-7cc6bc1a1f79",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{index}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.index).to.eql(pm.variables.get(\"index\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"adressAdd\"));\r",
									"pm.expect(jsonData.adressTyp).to.eql(pm.variables.get(\"adressTyp\"));\r",
									"pm.expect(jsonData.span).to.eql(pm.variables.get(\"span\"));\r",
									"pm.expect(jsonData.werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{decoderBestellNr}}\",\n    \"index\": 1,\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"adressTyp\": \"{{adressTyp}}\",\n    \"span\": 1,\n    \"werkseinstellung\": 1,\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/adress/{{index}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"adress",
								"{{index}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add CV",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "705a0f73-704e-4bbe-9195-e6e1b10e46e3",
								"exec": [
									"pm.collectionVariables.set(\"cv\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"cvAdd\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"minimal\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"maximal\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"cvValue\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b8d997e3-33a8-4c86-94b0-8997a516b04c",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{index}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.index).to.eql(pm.variables.get(\"index\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"adressAdd\"));\r",
									"pm.expect(jsonData.adressTyp).to.eql(pm.variables.get(\"adressTyp\"));\r",
									"pm.expect(jsonData.span).to.eql(pm.variables.get(\"span\"));\r",
									"pm.expect(jsonData.werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{bestellNr}}\",\n    \"cv\": {{cv}},\n\t\"bezeichnung\": \"{{cvAdd}}\",\n    \"minimal\": {{minimal}},\n    \"maximal\": {{maximal}},\n    \"werkseinstellung\": {{cvValue}},\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/cv",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"cv"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update CV",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d936a8cb-c846-4bef-8b69-180d14a757ce",
								"exec": [
									"pm.collectionVariables.set(\"index\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"adressAdd\", pm.variables.replaceIn(\"{{$randomProductName}}\")));\r",
									"pm.collectionVariables.set(\"adressTyp\", \"adressTyp\");\r",
									"pm.collectionVariables.set(\"span\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"adress\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d92c81df-2922-4c7e-9d21-e28337c7882b",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{index}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.index).to.eql(pm.variables.get(\"index\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"adressAdd\"));\r",
									"pm.expect(jsonData.adressTyp).to.eql(pm.variables.get(\"adressTyp\"));\r",
									"pm.expect(jsonData.span).to.eql(pm.variables.get(\"span\"));\r",
									"pm.expect(jsonData.werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{bestellNr}}\",\n    \"cv\": {{cv}},\n\t\"bezeichnung\": \"{{cvAdd}}\",\n    \"minimal\": {{minimal}},\n    \"maximal\": {{maximal}},\n    \"werkseinstellung\": {{cvValue}},\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/cv/{{cv}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"cv",
								"{{cv}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Funktion",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a49345b5-ac41-43c0-b064-02b6011550ee",
								"exec": [
									"pm.collectionVariables.set(\"index\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"adressAdd\", pm.variables.replaceIn(\"{{$randomProductName}}\")));\r",
									"pm.collectionVariables.set(\"adressTyp\", \"adressTyp\");\r",
									"pm.collectionVariables.set(\"span\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"adress\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7bb27b7b-211d-462e-ae84-716a93400a53",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{index}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.index).to.eql(pm.variables.get(\"index\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"adressAdd\"));\r",
									"pm.expect(jsonData.adressTyp).to.eql(pm.variables.get(\"adressTyp\"));\r",
									"pm.expect(jsonData.span).to.eql(pm.variables.get(\"span\"));\r",
									"pm.expect(jsonData.werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{bestellNr}}\",\n    \"reihe\": {{reihe}},\n    \"funktion\": \"{{funktion}}\",\n\t\"bezeichnung\": \"{{funktionAdd}}\",\n\t\"programmable\": {{programmable}},\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/funktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"funktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Funktion",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b87021ea-28a0-4bfd-a3c1-ed6d31150d13",
								"exec": [
									"pm.collectionVariables.set(\"index\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"adressAdd\", pm.variables.replaceIn(\"{{$randomProductName}}\")));\r",
									"pm.collectionVariables.set(\"adressTyp\", \"adressTyp\");\r",
									"pm.collectionVariables.set(\"span\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"adress\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7662562c-f424-49b8-ab41-14acd1b9ef0e",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{index}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.index).to.eql(pm.variables.get(\"index\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"adressAdd\"));\r",
									"pm.expect(jsonData.adressTyp).to.eql(pm.variables.get(\"adressTyp\"));\r",
									"pm.expect(jsonData.span).to.eql(pm.variables.get(\"span\"));\r",
									"pm.expect(jsonData.werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{bestellNr}}\",\n    \"reihe\": {{reihe}},\n    \"funktion\": \"{{funktion}}\",\n\t\"bezeichnung\": \"{{funktionAdd}}\",\n\t\"programmable\": {{programmable}},\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/funktion/{{funktion}}/{{reihe}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"funktion",
								"{{funktion}}",
								"{{reihe}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9a6f4812-edfd-44f9-9c87-a36480759fe5",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"iMax\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"protokoll\", pm.variables.get(\"protokollUpdate\"));\r",
									"pm.collectionVariables.set(\"fahrstufe\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"gerausch\", new Boolean(false));\r",
									"pm.collectionVariables.set(\"konfiguration\", pm.variables.get(\"konfigurationUpdate\"));\r",
									"pm.collectionVariables.set(\"stecker\", pm.variables.get(\"steckerUpdate\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c3b42cd1-660c-445f-a390-459da8e67c5e",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.iMax).to.eql(pm.variables.get(\"iMax\"));\r",
									"pm.expect(jsonData.protokoll).to.eql(pm.variables.get(\"protokoll\"));\r",
									"pm.expect(jsonData.fahrstufe).to.eql(pm.variables.get(\"fahrstufe\"));\r",
									"pm.expect(jsonData.gerausch).to.eql(pm.variables.get(\"gerausch\"));\r",
									"pm.expect(jsonData.konfiguration).to.eql(pm.variables.get(\"konfiguration\"));\r",
									"pm.expect(jsonData.stecker).to.eql(pm.variables.get(\"stecker\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.adressen).to.eql(undefined);\r",
									"pm.expect(jsonData.cvs).to.eql(undefined);\r",
									"pm.expect(jsonData.funktionen).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"iMax\": {{iMax}},\n    \"protokoll\": \"{{protokoll}}\",\n    \"fahrstufe\": {{fahrstufe}},\n    \"gerausch\": false,\n    \"konfiguration\": \"{{konfiguration}}\",\n    \"stecker\": \"{{stecker}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df383d52-5b39-4de3-b103-29253a54b922",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.iMax).to.eql(pm.variables.get(\"iMax\"));\r",
									"pm.expect(jsonData.protokoll).to.eql(pm.variables.get(\"protokoll\"));\r",
									"pm.expect(jsonData.fahrstufe).to.eql(pm.variables.get(\"fahrstufe\"));\r",
									"pm.expect(jsonData.gerausch).to.eql(pm.variables.get(\"gerausch\"));\r",
									"pm.expect(jsonData.konfiguration).to.eql(pm.variables.get(\"konfiguration\"));\r",
									"pm.expect(jsonData.stecker).to.eql(pm.variables.get(\"stecker\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.adressen).to.eql(undefined);\r",
									"pm.expect(jsonData.cvs).to.eql(undefined);\r",
									"pm.expect(jsonData.funktionen).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Anleitungen",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73a5cb1e-0cbc-49f2-93dd-1043077b27c9",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/anleitungen",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"anleitungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Adress",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5559baa9-6b37-469e-a678-c04f171d8f2f",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/adress/{{index}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"adress",
								"{{index}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete CV",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9930364-3fec-4240-bb72-b023701e6a30",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/cv/{{cv}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"cv",
								"{{cv}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Funktion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "160e6b91-fcfa-4929-854d-62593869acf7",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/funktion/{{funktion}}/{{reihe}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"funktion",
								"{{funktion}}",
								"{{reihe}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2724c71-43a3-4cc8-b826-8c1a198bc5c4",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Produkt",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a684ba3-aa00-4358-82b0-e5cfe3e32992",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.produkt.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.produkt.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.produkt.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/produkt",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0f602a06-5cc8-42ef-8782-ddab25d71b3a",
								"exec": [
									"pm.collectionVariables.set(\"hersteller\", pm.variables.get(\"herstellerAdd\"));\r",
									"pm.collectionVariables.set(\"bestellNr\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"kategorie\", pm.variables.get(\"kategorieAdd\"));\r",
									"pm.collectionVariables.set(\"unterKategorie\", pm.variables.get(\"unterKategorieAdd\"));\r",
									"pm.collectionVariables.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"massstab\", pm.variables.get(\"massstabAdd\"));\r",
									"pm.collectionVariables.set(\"spurweite\", pm.variables.get(\"spurweiteAdd\"));\r",
									"pm.collectionVariables.set(\"epoch\", pm.variables.get(\"epochAdd\"));\r",
									"pm.collectionVariables.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungAdd\"));\r",
									"pm.collectionVariables.set(\"gattung\", pm.variables.get(\"gattung\"));\r",
									"pm.collectionVariables.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.collectionVariables.set(\"bauzeit\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.collectionVariables.set(\"achsfolg\", pm.variables.get(\"achsfolgAdd\"));\r",
									"pm.collectionVariables.set(\"sondermodell\", pm.variables.get(\"sondermodellAdd\"));\r",
									"pm.collectionVariables.set(\"aufbau\", pm.variables.get(\"aufbauAdd\"));\r",
									"pm.collectionVariables.set(\"licht\", pm.variables.get(\"lichtAdd\"));\r",
									"pm.collectionVariables.set(\"kupplung\", pm.variables.get(\"kupplungAdd\"));\r",
									"pm.collectionVariables.set(\"steuerung\", pm.variables.get(\"steuerungAdd\"));\r",
									"pm.collectionVariables.set(\"decoderHersteller\", pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.collectionVariables.set(\"decoderBestellNr\", pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.collectionVariables.set(\"motorTyp\", pm.variables.get(\"motorTypAdd\"));\r",
									"pm.collectionVariables.set(\"anmerkung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "55d660f6-ff71-4786-a22f-8f7646556f1e",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderpHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(undefined);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(undefined);\r",
									"pm.expect(jsonData.teilen).to.eql(undefined);\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n    \"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"lange\": \"{{lange}}\",\n    \"massstab\": \"{{massstab}}\",\n    \"spurweite\": \"{{spurweite}}\",\n    \"epoch\": \"{{epoch}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"gattung\": \"{{gattung}}\",\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"bauzeit\": \"{{bauzeit}}\",\n    \"achsfolg\": \"{{achsfolg}}\",\n    \"sondermodell\": \"{{sondermodell}}\",\n    \"aufbau\": \"{{aufbau}}\",\n    \"licht\": \"{{licht}}\",\n    \"kupplung\": \"{{kupplung}}\",\n    \"steuerung\": \"{{steuerung}}\",\n    \"decoderTypHersteller\": \"{{decoderHersteller}}\",\n    \"decoderTypBestellNr\": \"{{decoderBestellNr}}\",\n    \"motorTyp\": \"{{motorTyp}}\",\n    \"anmerkung\": \"{{anmerkung}}\",\n    \"anleitungen\": \"{{anleitungen}}\",\n    \"explosionszeichnung\": \"{{explosionszeichnung}}\",\n    \"teilen\": \"{{teilen}}\",\n    \"abbildung\": \"{{abbildung}}\",\n    \"deleted\": \"{{deleted}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/produkt",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0de7671a-0a1c-43c5-a129-f4f647e43998",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(undefined);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(undefined);\r",
									"pm.expect(jsonData.teilen).to.eql(undefined);\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Anleitungen",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b8cdf7e-3378-4060-b264-c3f45d77369f",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung.jpg\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(undefined);\r",
									"pm.expect(jsonData.teilen).to.eql(undefined);\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "anleitungen",
									"type": "file",
									"src": "{{pdfFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"anleitungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Explosionszeichnung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "285ef929-0870-4710-8a23-4205c7778414",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung.jpg\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"var explosionszeichnung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(explosionszeichnung);\r",
									"pm.expect(jsonData.teilen).to.eql(undefined);\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "explosionszeichnung",
									"type": "file",
									"src": "{{pdfFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"explosionszeichnung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Teil",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c0e8bf4d-4bc8-4da4-a828-b6417361fada",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"kategorie\", pm.variables.get(\"kategorieAdd\"));\r",
									"pm.collectionVariables.set(\"unterKategorie\", pm.variables.get(\"unterKategorieAdd\"));\r",
									"pm.collectionVariables.set(\"anzahl\", pm.variables.replaceIn(\"{{$randomInt}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9a120f4b-7c3b-4c9b-ae8e-11f09d6c379a",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen/{{hersteller}}/{{bestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.teilHersteller).to.eql(pm.variables.get(\"teilHersteller\"));\r",
									"pm.expect(jsonData.teilBestellNr).to.eql(pm.variables.get(\"teilBestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n    \"teilHersteller\": \"{{teilHersteller}}\",\n    \"teilBestellNr\": \"{{teilBestellNr}}\",\n    \"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"anzahl\": {{anzahl}},\n    \"deleted\": \"{{deleted}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"teilen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Teil",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cd95b2ac-3938-4c6f-9d78-52a3559d0c36",
								"exec": [
									"pm.collectionVariables.set(\"anzahl\", pm.variables.replaceIn(\"{{$randomInt}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "98893b39-f431-42d2-b245-5bfe30eb31e2",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen/{{hersteller}}/{{bestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.teilHersteller).to.eql(pm.variables.get(\"teilHersteller\"));\r",
									"pm.expect(jsonData.teilBestellNr).to.eql(pm.variables.get(\"teilBestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen/{{teilHersteller}}/{{teilBestellNr}}?anzahl={{anzahl}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"teilen",
								"{{teilHersteller}}",
								"{{teilBestellNr}}"
							],
							"query": [
								{
									"key": "anzahl",
									"value": "{{anzahl}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5b065fc6-64f1-4dbb-85b1-0036bf92c5a9",
								"exec": [
									"pm.collectionVariables.set(\"hersteller\", pm.variables.get(\"herstellerAdd\"));\r",
									"pm.collectionVariables.set(\"bestellNr\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"kategorie\", pm.variables.get(\"kategorieAdd\"));\r",
									"pm.collectionVariables.set(\"unterKategorie\", pm.variables.get(\"unterKategorieAdd\"));\r",
									"pm.collectionVariables.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"massstab\", pm.variables.get(\"massstabAdd\"));\r",
									"pm.collectionVariables.set(\"spurweite\", pm.variables.get(\"spurweiteAdd\"));\r",
									"pm.collectionVariables.set(\"epoch\", pm.variables.get(\"epochAdd\"));\r",
									"pm.collectionVariables.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungAdd\"));\r",
									"pm.collectionVariables.set(\"gattung\", pm.variables.get(\"gattung\"));\r",
									"pm.collectionVariables.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.collectionVariables.set(\"bauzeit\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.collectionVariables.set(\"achsfolg\", pm.variables.get(\"achsfolgAdd\"));\r",
									"pm.collectionVariables.set(\"sondermodell\", pm.variables.get(\"sondermodellAdd\"));\r",
									"pm.collectionVariables.set(\"aufbau\", pm.variables.get(\"aufbauAdd\"));\r",
									"pm.collectionVariables.set(\"licht\", pm.variables.get(\"lichtAdd\"));\r",
									"pm.collectionVariables.set(\"kupplung\", pm.variables.get(\"kupplungAdd\"));\r",
									"pm.collectionVariables.set(\"steuerung\", pm.variables.get(\"steuerungAdd\"));\r",
									"pm.collectionVariables.set(\"decoderTypHersteller\", pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.collectionVariables.set(\"decoderTypBestellNr\", pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.collectionVariables.set(\"motorTyp\", pm.variables.get(\"motorTypAdd\"));\r",
									"pm.collectionVariables.set(\"anmerkung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "87a414f7-b1bf-42a7-908b-482bf5e860e5",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(pm.variables.get(\"anleitungen\"));\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(pm.variables.get(\"explosionszeichnung\"));\r",
									"pm.expect(jsonData.teilen).to.eql(pm.variables.get(\"teilen\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n    \"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"lange\": \"{{lange}}\",\n    \"massstab\": \"{{massstab}}\",\n    \"spurweite\": \"{{spurweite}}\",\n    \"epoch\": \"{{epoch}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"gattung\": \"{{gattung}}\",\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"bauzeit\": \"{{bauzeit}}\",\n    \"achsfolg\": \"{{achsfolg}}\",\n    \"sondermodell\": \"{{sondermodell}}\",\n    \"aufbau\": \"{{aufbau}}\",\n    \"licht\": \"{{licht}}\",\n    \"kupplung\": \"{{kupplung}}\",\n    \"steuerung\": \"{{steuerung}}\",\n    \"decoderTypHersteller\": \"{{decoderHersteller}}\",\n    \"decoderTypBestellNr\": \"{{decoderBestellNr}}\",\n    \"motorTyp\": \"{{motorTyp}}\",\n    \"anmerkung\": \"{{anmerkung}}\",\n    \"anleitungen\": \"{{anleitungen}}\",\n    \"explosionszeichnung\": \"{{explosionszeichnung}}\",\n    \"teilen\": \"{{teilen}}\",\n    \"abbildung\": \"{{abbildung}}\",\n    \"deleted\": \"{{deleted}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd18e232-7fcc-4c51-841e-0e661cc41e1a",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung.jpg\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"var explosionszeichnung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(explosionszeichnung);\r",
									"pm.expect(jsonData.teilen).to.eql(undefined);\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5495eb8-ee02-4811-8ada-c0f0ba46d779",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"var explosionszeichnung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(explosionszeichnung);\r",
									"pm.expect(jsonData.teilen).to.eql(undefined);\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Anleitungen",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0e2ba1d-fe72-4a5a-bfec-054c74b11b1b",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var explosionszeichnung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(undefined);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(explosionszeichnung);\r",
									"pm.expect(jsonData.teilen).to.eql(undefined);\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"anleitungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Explosionszeichnung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5821ffe3-14c8-4d3f-a900-758d3e579494",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(undefined);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(undefined);\r",
									"pm.expect(jsonData.teilen).to.eql(undefined);\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"explosionszeichnung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Teil",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "44b40b0b-4bc3-497b-90e5-3745b817fce3",
								"exec": [
									"pm.response.to.have.status(204);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen/{{teilHersteller}}/{{teilBestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"teilen",
								"{{teilHersteller}}",
								"{{teilBestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84c34d34-0ee3-4db1-9213-01d2240fbd1b",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Decoder",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4e778097-2688-45e3-aa94-44a753f57327",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoder\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.decoder.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.decoderId).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.decoder.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.decoder.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/decoder",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2f759b03-dc88-4025-86eb-315cc5a0fd80",
								"exec": [
									"pm.collectionVariables.set(\"decoderId\", pm.variables.get(\"decoderId\"));\r",
									"pm.collectionVariables.set(\"hersteller\", pm.variables.get(\"hersteller\"));\r",
									"pm.collectionVariables.set(\"bestellNr\", pm.variables.get(\"bestellNr\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.get(\"bezeichnung\"));\r",
									"pm.collectionVariables.set(\"iMax\", pm.variables.get(\"iMax\"));\r",
									"pm.collectionVariables.set(\"protokoll\", pm.variables.get(\"protokoll\"));\r",
									"pm.collectionVariables.set(\"fahrstufe\", pm.variables.get(\"fahrstufe\"));\r",
									"pm.collectionVariables.set(\"sound\", pm.variables.get(\"sound\"));\r",
									"pm.collectionVariables.set(\"konfiguration\", pm.variables.get(\"konfiguration\"));\r",
									"pm.collectionVariables.set(\"stecker\", pm.variables.get(\"stecker\"));\r",
									"pm.collectionVariables.set(\"status\", pm.variables.get(\"status\"));\r",
									"pm.collectionVariables.set(\"anleitungen\", pm.variables.get(\"anleitungen\"));\r",
									"pm.collectionVariables.set(\"adressen\", pm.variables.get(\"adressen\"));\r",
									"pm.collectionVariables.set(\"cvs\", pm.variables.get(\"cvs\"));\r",
									"pm.collectionVariables.set(\"funktionen\", pm.variables.get(\"funktionen\"));\r",
									"pm.collectionVariables.set(\"deleted\", pm.variables.get(\"deleted\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7da17bdf-2056-4c79-b5e1-effe9e960991",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoder\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoder/{{decoderId}}\"));\r",
									"pm.expect(jsonData.decoderId).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.iMax).to.eql(pm.variables.get(\"iMax\"));\r",
									"pm.expect(jsonData.protokoll).to.eql(pm.variables.get(\"protokoll\"));\r",
									"pm.expect(jsonData.fahrstufe).to.eql(pm.variables.get(\"fahrstufe\"));\r",
									"pm.expect(jsonData.sound).to.eql(pm.variables.get(\"sound\"));\r",
									"pm.expect(jsonData.konfiguration).to.eql(pm.variables.get(\"konfiguration\"));\r",
									"pm.expect(jsonData.stecker).to.eql(pm.variables.get(\"stecker\"));\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(pm.variables.get(\"anleitungen\"));\r",
									"pm.expect(jsonData.adressen).to.eql(pm.variables.get(\"adressen\"));\r",
									"pm.expect(jsonData.cvs).to.eql(pm.variables.get(\"cvs\"));\r",
									"pm.expect(jsonData.funktionen).to.eql(pm.variables.get(\"funktionen\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Adress",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}/adress/{{index}}?adress={{adress}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}",
								"adress",
								"{{index}}"
							],
							"query": [
								{
									"key": "adress",
									"value": "{{adress}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update CV",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}/cv/{{cv}}?wert={{wert}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}",
								"cv",
								"{{cv}}"
							],
							"query": [
								{
									"key": "wert",
									"value": "{{wert}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Funktion",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}/funktion/{{funktion}}/{{reihe}}?bezeichnung={{bezeichnung}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}",
								"funktion",
								"{{funktion}}",
								"{{reihe}}"
							],
							"query": [
								{
									"key": "bezeichnung",
									"value": "{{bezeichnung}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3b307358-b7f1-4819-a6a1-108e656d48c4",
								"exec": [
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d46b5ff7-06ae-4545-874d-6462f6c0ca7a",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoder\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoder/{{decoderId}}\");\r",
									"pm.expect(jsonData.decoderId).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"decoderId\": \"{{decoderId}}\",\n    \"hersteller\": \"{{decoderHersteller}}\",\n    \"bestellNr\": \"{{decoderBestellNr}}\",\n    \"protokoll\": \"MFX\",\n    \"status\": \"INSTALIERT\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d3fc61c-7455-4e58-a2bd-a26f7c969f5a",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.get(\"name\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoder\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoder/{{decoderId}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec135d2f-0559-41ce-85b8-82dfa44b58f8",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Artikel",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f3ecf3c6-50c1-4ea4-8f2f-bb3337049899",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.artikel.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.artikelId;\r",
									"    pm.expect(a.artikelId).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.artikel.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.artikel.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/artikel",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "27df081d-1663-43fd-9e7e-10ce23bb71a9",
								"exec": [
									"pm.collectionVariables.set(\"hersteller\", pm.variables.get(\"herstellerAdd\"));\r",
									"pm.collectionVariables.set(\"bestellNr\", pm.variables.get(\"bestellNr\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"kategorie\", pm.variables.get(\"kategorieAdd\"));\r",
									"pm.collectionVariables.set(\"unterKategorie\", pm.variables.get(\"unterKategorieAdd\"));\r",
									"pm.collectionVariables.set(\"lange\", Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"massstab\", pm.variables.get(\"massstabAdd\"));\r",
									"pm.collectionVariables.set(\"spurweite\", pm.variables.get(\"spurweiteAdd\"));\r",
									"pm.collectionVariables.set(\"epoch\", pm.variables.get(\"epochAdd\"));\r",
									"pm.collectionVariables.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungAdd\"));\r",
									"pm.collectionVariables.set(\"gattung\", pm.variables.get(\"gattungAdd\"));\r",
									"pm.collectionVariables.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.collectionVariables.set(\"achsfolg\", pm.variables.get(\"achsfolgAdd\"));\r",
									"pm.collectionVariables.set(\"sondermodell\", pm.variables.get(\"sondermodellAdd\"));\r",
									"pm.collectionVariables.set(\"aufbau\", pm.variables.get(\"aufbauAdd\"));\r",
									"pm.collectionVariables.set(\"licht\", pm.variables.get(\"lichtAdd\"));\r",
									"pm.collectionVariables.set(\"kupplung\", pm.variables.get(\"kupplungAdd\"));\r",
									"pm.collectionVariables.set(\"steuerung\", pm.variables.get(\"steuerungAdd\"));\r",
									"pm.collectionVariables.set(\"decoder\", pm.variables.get(\"decoderAdd\"));\r",
									"pm.collectionVariables.set(\"motorTyp\", pm.variables.get(\"motorTypAdd\"));\r",
									"pm.collectionVariables.set(\"kaufdatum\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.collectionVariables.set(\"wahrung\", pm.variables.replaceIn(\"{{$randomCurrencyCode}}\"));\r",
									"pm.collectionVariables.set(\"preis\", Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"stuck\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"verbleibende\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"anmerkung\", pm.variables.replaceIn(\"{{$randomCatchPhrase}}\"));\r",
									"pm.collectionVariables.set(\"beladung\", pm.variables.replaceIn(\"{{$randomProductMaterial}}\"));\r",
									"pm.collectionVariables.set(\"status\", \"GEKAUFT\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5fb3d59f-163c-4b3b-8b33-5d69259546b5",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var artikelId = jsonData.artikelId;\r",
									"pm.collectionVariables.set(\"artikelId\", artikelId);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoder\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung).to.eql(undefined);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"lange\": {{lange}},\n    \"massstab\": \"{{massstab}}\",\n    \"spurweite\": \"{{spurweite}}\",\n    \"epoch\": \"{{epoch}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"gattung\": \"{{gattung}}\",\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"achsfolg\": \"{{achsfolg}}\",\n    \"sondermodell\": \"{{sondermodell}}\",\n    \"aufbau\": \"{{aufbau}}\",\n    \"licht\": \"{{licht}}\",\n    \"kupplung\": \"{{kupplung}}\",\n    \"steuerung\": \"{{steuerung}}\",\n    \"decoder\": \"{{decoder}}\",\n    \"motorTyp\": \"{{motorTyp}}\",\n    \"kaufdatum\": \"{{kaufdatum}}\",\n    \"wahrung\": \"{{wahrung}}\",\n    \"preis\": {{preis}},\n    \"stuck\": {{stuck}},\n    \"verbleibende\": {{verbleibende}},\n    \"anmerkung\": \"{{anmerkung}}\",\n    \"beladung\": \"{{beladung}}\",\n    \"status\": \"{{status}}\",\n    \"deleted\": false\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/artikel",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b0a1a36-810d-427d-8734-aeb670e970a7",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var artikelId = jsonData.artikelId;\r",
									"pm.collectionVariables.set(\"artikelId\", artikelId);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{root}}/artikel/{{artikelId}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung).to.eql(undefined);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Anderung",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f4174c36-75f4-4d0a-a3c6-1020a6a58db7",
								"exec": [
									"pm.collectionVariables.set(\"anderungId\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"anderungsDatum\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.collectionVariables.set(\"anderungsTyp\", \"UMGEBAUT\");\r",
									"pm.collectionVariables.set(\"anderungStuck\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"anderung\", pm.variables.replaceIn(\"{{$randomLoremParagraph}}\"));\r",
									"pm.collectionVariables.set(\"status\", \"GEKAUFT\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d1494ddc-5b6c-4e05-8bfe-64207617b6a1",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.anderungId).to.eql(pm.variables.get(\"anderungId\"));\r",
									"pm.expect(jsonData.anderungsDatum).to.eql(pm.variables.get(\"anderungsDatum\"));\r",
									"pm.expect(jsonData.anderungsTyp).to.eql(pm.variables.get(\"anderungsTyp\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"anderung\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"anderungStuck\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"artikelId\": \"{{artikelId}}\",\n\t\"anderungId\": \"{{anderungId}}\",\n    \"anderungsDatum\": \"{{anderungsDatum}}\",\n    \"anderungsTyp\": \"{{anderungsTyp}}\",\n    \"bezeichnung\": \"{{anderung}}\",\n    \"stuck\": {{anderungStuck}},\n    \"anmerkung\": \"{{anmerkung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/anderung",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"anderung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Anderung",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ead26fc7-806b-48ae-a943-c0d3be86bd28",
								"exec": [
									"pm.collectionVariables.set(\"anderungsDatum\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.collectionVariables.set(\"anderungsTyp\", \"REPARIERT\");\r",
									"pm.collectionVariables.set(\"anderungStuck\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"anderung\", pm.variables.replaceIn(\"{{$randomLoremParagraph}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a16cdce8-2a9a-43fa-a923-9a51d5f758f8",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.anderungId).to.eql(pm.variables.get(\"anderungId\"));\r",
									"pm.expect(jsonData.anderungsDatum).to.eql(pm.variables.get(\"anderungsDatum\"));\r",
									"pm.expect(jsonData.anderungsTyp).to.eql(pm.variables.get(\"anderungsTyp\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"anderung\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"anderungStuck\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"artikelId\": \"{{artikelId}}\",\n\t\"anderungId\": \"{{anderungId}}\",\n    \"anderungsDatum\": \"{{anderungsDatum}}\",\n    \"anderungsTyp\": \"{{anderungsTyp}}\",\n    \"bezeichnung\": \"{{anderung}}\",\n    \"stuck\": {{anderungStuck}},\n    \"anmerkung\": \"{{anmerkung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/anderung/{{anderungId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"anderung",
								"{{anderungId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f8270e33-ef91-4526-860d-d34cc07a3f53",
								"exec": [
									"pm.collectionVariables.set(\"hersteller\", pm.variables.get(\"herstellerUpdate\"));\r",
									"pm.collectionVariables.set(\"bestellNr\", pm.variables.get(\"bestellNr\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"kategorie\", pm.variables.get(\"kategorieUpdate\"));\r",
									"pm.collectionVariables.set(\"unterKategorie\", pm.variables.get(\"unterKategorieUpdate\"));\r",
									"pm.collectionVariables.set(\"lange\", Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"massstab\", pm.variables.get(\"massstabUpdate\"));\r",
									"pm.collectionVariables.set(\"spurweite\", pm.variables.get(\"spurweiteUpdate\"));\r",
									"pm.collectionVariables.set(\"epoch\", pm.variables.get(\"epochUpdate\"));\r",
									"pm.collectionVariables.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungUpdate\"));\r",
									"pm.collectionVariables.set(\"gattung\", pm.variables.get(\"gattungUpdate\"));\r",
									"pm.collectionVariables.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.collectionVariables.set(\"achsfolg\", pm.variables.get(\"achsfolgUpdate\"));\r",
									"pm.collectionVariables.set(\"sondermodell\", pm.variables.get(\"sondermodellUpdate\"));\r",
									"pm.collectionVariables.set(\"aufbau\", pm.variables.get(\"aufbauUpdate\"));\r",
									"pm.collectionVariables.set(\"licht\", pm.variables.get(\"lichtUpdate\"));\r",
									"pm.collectionVariables.set(\"kupplung\", pm.variables.get(\"kupplungUpdate\"));\r",
									"pm.collectionVariables.set(\"steuerung\", pm.variables.get(\"steuerungUpdate\"));\r",
									"pm.collectionVariables.set(\"decoder\", pm.variables.get(\"decoderUpdate\"));\r",
									"pm.collectionVariables.set(\"motorTyp\", pm.variables.get(\"motorTypUpdate\"));\r",
									"pm.collectionVariables.set(\"kaufdatum\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.collectionVariables.set(\"wahrung\", pm.variables.replaceIn(\"{{$randomCurrencyCode}}\"));\r",
									"pm.collectionVariables.set(\"preis\", Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"stuck\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"verbleibende\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.collectionVariables.set(\"anmerkung\", pm.variables.replaceIn(\"{{$randomCatchPhrase}}\"));\r",
									"pm.collectionVariables.set(\"beladung\", pm.variables.replaceIn(\"{{$randomProductMaterial}}\"));\r",
									"pm.collectionVariables.set(\"status\", \"BASTLER\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6c927ca5-50cd-4a31-ad48-3a3aa05ec01e",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{root}}/artikel/{{artikelId}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung.size).to.eql(1);\r",
									"pm.expect(jsonData.anderung[0].artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungId).to.eql(pm.variables.get(\"anderungId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsDatum).to.eql(pm.variables.get(\"anderungsDatum\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsTyp).to.eql(pm.variables.get(\"anderungsTyp\"));\r",
									"pm.expect(jsonData.anderung[0].bezeichnung).to.eql(pm.variables.get(\"anderung\"));\r",
									"pm.expect(jsonData.anderung[0].stuck).to.eql(pm.variables.get(\"anderungStuck\"));\r",
									"pm.expect(jsonData.anderung[0].anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anderung[0].deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"artikelId\": \"{{artikelId}}\",\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"lange\": {{lange}},\n    \"massstab\": \"{{massstab}}\",\n    \"spurweite\": \"{{spurweite}}\",\n    \"epoch\": \"{{epoch}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"gattung\": \"{{gattung}}\",\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"achsfolg\": \"{{achsfolg}}\",\n    \"sondermodell\": \"{{sondermodell}}\",\n    \"aufbau\": \"{{aufbau}}\",\n    \"licht\": \"{{licht}}\",\n    \"kupplung\": \"{{kupplung}}\",\n    \"steuerung\": \"{{steuerung}}\",\n    \"decoder\": \"{{decoder}}\",\n    \"motorTyp\": \"{{motorTyp}}\",\n    \"kaufdatum\": \"{{kaufdatum}}\",\n    \"wahrung\": \"{{wahrung}}\",\n    \"preis\": {{preis}},\n    \"stuck\": {{stuck}},\n    \"verbleibende\": {{verbleibende}},\n    \"anmerkung\": \"{{anmerkung}}\",\n    \"beladung\": \"{{beladung}}\",\n    \"status\": \"{{status}}\",\n    \"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b952f52b-d617-49ac-b17d-5c992e47eb27",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/artikel/{{artikelId}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung[0].artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungId).to.eql(pm.variables.get(\"anderungId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsDatum).to.eql(pm.variables.get(\"anderungsDatum\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsTyp).to.eql(pm.variables.get(\"anderungsTyp\"));\r",
									"pm.expect(jsonData.anderung[0].bezeichnung).to.eql(pm.variables.get(\"anderung\"));\r",
									"pm.expect(jsonData.anderung[0].stuck).to.eql(pm.variables.get(\"anderungStuck\"));\r",
									"pm.expect(jsonData.anderung[0].anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anderung[0].deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "01db733f-13cb-45cc-80ed-4774963510eb",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung[0].artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungId).to.eql(pm.variables.get(\"anderungId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsDatum).to.eql(pm.variables.get(\"anderungsDatum\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsTyp).to.eql(pm.variables.get(\"anderungsTyp\"));\r",
									"pm.expect(jsonData.anderung[0].bezeichnung).to.eql(pm.variables.get(\"anderung\"));\r",
									"pm.expect(jsonData.anderung[0].stuck).to.eql(pm.variables.get(\"anderungStuck\"));\r",
									"pm.expect(jsonData.anderung[0].anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anderung[0].deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Anderung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31ebfe10-3339-4829-8368-a020cc4c0882",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung).to.eql(undefined);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/anderung/{{anderungId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"anderung",
								"{{anderungId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c07407d2-e1a8-48ec-b2c8-22f3fff51f98",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Zug",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3d3d7e6e-3555-4aee-be56-65589f7d332b",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.zug.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.zug.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.zug.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/zug",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d7a8891d-4b15-48f9-9b7b-97501e7ec7db",
								"exec": [
									"pm.collectionVariables.set(\"zug\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.collectionVariables.set(\"zugTyp\", pm.variables.get(\"zugTypAdd\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bc4e258b-5c72-472a-8366-226989f2a1d2",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var zug = pm.variables.get(\"zug\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zug/{{zug}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"zug\"));\r",
									"pm.expect(jsonData.zugTyp).to.eql(pm.variables.get(\"zugTyp\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{zug}}\",\n    \"zugTyp\": \"{{zugTyp}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zug",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Consist",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e460f2ff-a7f2-42f8-bab3-1d1a52c9efe9",
								"exec": [
									"pm.collectionVariables.set(\"position\", pm.variables.replaceIn(\"{{$randomInt}}\"));\r",
									"pm.collectionVariables.set(\"artikelId\", pm.variables.get(\"artikelAdd\"));\r",
									"pm.collectionVariables.set(\"hersteller\", pm.variables.get(\"herstellerAdd\"));\r",
									"pm.collectionVariables.set(\"bestellNr\", pm.variables.get(\"bestellNr\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungAdd\"));\r",
									"pm.collectionVariables.set(\"gattung\", pm.variables.get(\"gattungAdd\"));\r",
									"pm.collectionVariables.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "976e61c4-e2c8-42dc-ba59-7078cab2bd23",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var zug = pm.variables.get(\"zug\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zug/{{zug}}\");\r",
									"pm.expect(jsonData.zug).to.eql(pm.variables.get(\"zug\"));\r",
									"pm.expect(jsonData.position).to.eql(pm.variables.get(\"position\"));\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(pm.variables.get(undefined));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"zug\": \"{{zug}}\",\n    \"position\": \"{{position}}\",\n    \"artikelId\": \"{{artikelId}}\",\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n    \"bezeichnung\": \"{{bezeichnung}}\",\n    \"lange\": \"{{lange}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"gattung\": \"{{gattung}}\",\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"abbildung\": \"{{abbildung}}\",\n    \"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zug/{{zug}}/consist/{{position}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}",
								"consist",
								"{{position}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Consist",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7be232be-c974-42a8-b5ba-2f9423e0ba2b",
								"exec": [
									"pm.collectionVariables.set(\"position\", pm.variables.replaceIn(\"{{$randomInt}}\"));\r",
									"pm.collectionVariables.set(\"artikelId\", pm.variables.get(\"artikelAdd\"));\r",
									"pm.collectionVariables.set(\"hersteller\", pm.variables.get(\"herstellerAdd\"));\r",
									"pm.collectionVariables.set(\"bestellNr\", pm.variables.get(\"bestellNr\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.collectionVariables.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.collectionVariables.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungAdd\"));\r",
									"pm.collectionVariables.set(\"gattung\", pm.variables.get(\"gattungAdd\"));\r",
									"pm.collectionVariables.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b15d7828-8357-4ead-b530-261f1f91a4f2",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var zug = pm.variables.get(\"zug\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zug/{{zug}}\");\r",
									"pm.expect(jsonData.zug).to.eql(pm.variables.get(\"zug\"));\r",
									"pm.expect(jsonData.position).to.eql(pm.variables.get(\"position\"));\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(pm.variables.get(undefined));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"zug\": \"{{zug}}\",\r\n    \"position\": \"{{position}}\",\r\n    \"artikelId\": \"{{artikelId}}\",\r\n    \"hersteller\": \"{{hersteller}}\",\r\n    \"bestellNr\": \"{{bestellNr}}\",\r\n\t\"bezeichnung\": \"{{bezeichnung}}\",\r\n    \"lange\": \"{{lange}}\",\r\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\r\n    \"gattung\": \"{{gattung}}\",\r\n    \"betreibsnummer\": \"\",\r\n    \"abbildung\": \"\",\r\n\t\"deleted\": true\r\n}"
						},
						"url": {
							"raw": "{{api}}/zug/{{zug}}/consist/{{position}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}",
								"consist",
								"{{position}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "559ae598-e8b6-420c-abe9-f40c05a79a38",
								"exec": [
									"pm.collectionVariables.set(\"zugTyp\", pm.variables.get(\"zugTypUpdate\"));\r",
									"pm.collectionVariables.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1cc26f80-83d7-4259-a65c-5170535522a0",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var zug = pm.variables.get(\"zug\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zug/{{zug}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"zug\"));\r",
									"pm.expect(jsonData.zugTyp).to.eql(pm.variables.get(\"zugTyp\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{zug}}\",\n    \"zugTyp\": \"{{zugTyp}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zug/{{zug}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57573cc1-c2c9-46d7-96eb-7cac4599b410",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var zug = pm.variables.get(\"zug\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zug/{{zug}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"zug\"));\r",
									"pm.expect(jsonData.zugTyp).to.eql(pm.variables.get(\"zugTyp\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/zug/{{zug}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Consist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9033685e-92ce-4ccb-b7d2-94f606b7b324",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/zug/{{zug}}/consist/{{position}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}",
								"consist",
								"{{position}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da4194c4-651c-4786-8ca2-dc18df8f5e0b",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/zug/{{zug}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Open Api",
			"item": [
				{
					"name": "Get Docs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{root}}/v3/api-docs.json",
							"host": [
								"{{root}}"
							],
							"path": [
								"v3",
								"api-docs.json"
							]
						},
						"description": "http://LINEPRO2.home:8086/ModellBahn/api/swagger/swagger."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Export",
			"item": [
				{
					"name": "Achsfolg",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/achsfolg",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"achsfolg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anderung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/anderung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"anderung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Antrieb",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/antrieb",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"antrieb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Artikel",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/artikel",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"artikel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Aufbau",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/aufbau",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"aufbau"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bahnverwaltung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/bahnverwaltung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"bahnverwaltung"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderAdress",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderAdress",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderAdress"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderCv",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderCv",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderCv"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderFunktion",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderFunktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderFunktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Decoder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoder",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoder"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypAdress",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderTypAdress",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypAdress"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypCv",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderTypCv",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypCv"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypFunktion",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderTypFunktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypFunktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTyp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Epoch",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/epoch",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"epoch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gattung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/gattung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"gattung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hersteller",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/hersteller",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"hersteller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kategorie",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/kategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"kategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kupplung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/kupplung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"kupplung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Licht",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/licht",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"licht"
							]
						}
					},
					"response": []
				},
				{
					"name": "Massstab",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/massstab",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"massstab"
							]
						}
					},
					"response": []
				},
				{
					"name": "MotorTyp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/motorTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"motorTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Produkt",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/produkt",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"produkt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Produkt Teil",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/produktTeil",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"produktTeil"
							]
						}
					},
					"response": []
				},
				{
					"name": "Protokoll",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/protokoll",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"protokoll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sondermodell",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/sondermodell",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"sondermodell"
							]
						}
					},
					"response": []
				},
				{
					"name": "Spurweite",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/spurweite",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"spurweite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Steuerung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/steuerung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"steuerung"
							]
						}
					},
					"response": []
				},
				{
					"name": "UnterKategorie",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/unterKategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"unterKategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vorbild",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/vorbild",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"vorbild"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zug Consist",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/zugConsist",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zugConsist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zug",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/zug",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zug"
							]
						}
					},
					"response": []
				},
				{
					"name": "ZugTyp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/zugTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zugTyp"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Import",
			"item": [
				{
					"name": "Achsfolg",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/achsfolg",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"achsfolg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anderung",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/anderung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"anderung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Antrieb",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/antrieb",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"antrieb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Artikel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/artikel",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"artikel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Aufbau",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/aufbau",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"aufbau"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bahnverwaltung",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/bahnverwaltung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"bahnverwaltung"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderAdress",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderAdress",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderAdress"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderCv",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderCv",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderCv"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderFunktion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderFunktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderFunktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Decoder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoder",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoder"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypAdress",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderTypAdress",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypAdress"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypCv",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderTypCv",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypCv"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypFunktion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderTypFunktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypFunktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTyp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Epoch",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/epoch",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"epoch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gattung",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/gattung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"gattung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hersteller",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/hersteller",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"hersteller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kategorie",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/kategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"kategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kupplung",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/kupplung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"kupplung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Licht",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/licht",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"licht"
							]
						}
					},
					"response": []
				},
				{
					"name": "Massstab",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/massstab",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"massstab"
							]
						}
					},
					"response": []
				},
				{
					"name": "MotorTyp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/motorTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"motorTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Produkt",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/produkt",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"produkt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Produkt Teil",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/produktTeil",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"produktTeil"
							]
						}
					},
					"response": []
				},
				{
					"name": "Protokoll",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/protokoll",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"protokoll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sondermodell",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/sondermodell",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"sondermodell"
							]
						}
					},
					"response": []
				},
				{
					"name": "Spurweite",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/spurweite",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"spurweite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Steuerung",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/steuerung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"steuerung"
							]
						}
					},
					"response": []
				},
				{
					"name": "UnterKategorie",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/unterKategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"unterKategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vorbild",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/vorbild",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"vorbild"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zug Consist",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/zugConsist",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zugConsist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zug",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/zug",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zug"
							]
						}
					},
					"response": []
				},
				{
					"name": "ZugTyp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/zugTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zugTyp"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "password",
				"type": "string"
			},
			{
				"key": "username",
				"value": "username",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "fb3af6e0-b53d-45b1-8d9a-0b70908a95dd",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7c4eb1e5-a9f5-4284-83c7-10be48eaa91b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "36ec238f-4699-4564-99e6-ced9106378f0",
			"key": "host",
			"value": "127.0.0.1"
		},
		{
			"id": "0489f91a-3273-4b0c-9dca-b21edf9c459c",
			"key": "port",
			"value": ":8086"
		},
		{
			"id": "b297cc76-fdbe-4338-8865-f6f0793cc929",
			"key": "server",
			"value": "http://{{host}}{{port}}"
		},
		{
			"id": "1f1d12f8-2ffa-497e-9ac9-29ae7de88889",
			"key": "root",
			"value": "{{server}}/ModellBahn"
		},
		{
			"id": "15824af4-eb38-4089-a9e7-5fd254fb8da9",
			"key": "api",
			"value": "{{root}}/api"
		},
		{
			"id": "3a29103e-9ace-4cb0-b1b0-0a2f014ffe20",
			"key": "language",
			"value": "de"
		},
		{
			"id": "7b489155-d4c4-4d40-b983-9d74750b8377",
			"key": "achsfolgAdd",
			"value": "1C1H2T"
		},
		{
			"id": "3c4fbedb-e1b1-4ef5-b7c6-9afc5d3af9f8",
			"key": "achsfolgUpdate",
			"value": "COCO"
		},
		{
			"id": "1b5d4ee7-07e9-47df-9d65-335ad81ecdb7",
			"key": "adressTypAdd",
			"value": "MFX"
		},
		{
			"id": "ba8bfb41-0e1f-4630-a683-1870218b6255",
			"key": "adressTypUpdate",
			"value": "DELTA"
		},
		{
			"id": "0cc279ac-ed0b-4fa3-975b-cb0d5f83cb34",
			"key": "anderungAdd",
			"value": "1"
		},
		{
			"id": "2cea76c3-56d5-4f97-a3b6-b2dd26f9389c",
			"key": "anderungUpdate",
			"value": "1"
		},
		{
			"id": "c1a83d58-3a32-4591-9e00-2ee23e48cb53",
			"key": "antriebAdd",
			"value": "DAMPF"
		},
		{
			"id": "22ef947c-e782-43ee-95ab-90d7a0d1f3fe",
			"key": "antriebUpdate",
			"value": "ELEKTRO"
		},
		{
			"id": "6f45ce09-5afc-496b-b78d-5242cb03196e",
			"key": "artikelAdd",
			"value": "00001"
		},
		{
			"id": "dc083871-0eeb-4080-99e9-3f235f8a3a04",
			"key": "artikelUpdate",
			"value": "00001"
		},
		{
			"id": "9ae478c9-a033-4dde-8eb4-955cce7bfeaa",
			"key": "aufbauAdd",
			"value": "LK"
		},
		{
			"id": "2c510583-b949-49cc-8c64-13564349e97b",
			"key": "aufbauUpdate",
			"value": "LK"
		},
		{
			"id": "51cc4d29-8739-4eb2-9197-7895f4b79943",
			"key": "bestellNrAdd",
			"value": "3000"
		},
		{
			"id": "46e9c1e4-5988-44c8-9e5e-1fffeaccdb68",
			"key": "bestellNrUpdate",
			"value": "3003"
		},
		{
			"id": "63162595-db84-4fa7-9089-e4aef61a6785",
			"key": "bahnverwaltungAdd",
			"value": "DB"
		},
		{
			"id": "069318e5-6816-444b-8e12-0307e68bfd7e",
			"key": "bahnverwaltungUpdate",
			"value": "DBAG"
		},
		{
			"id": "a01626b2-2c60-40dc-b6fe-d9414bfa2723",
			"key": "decoderAdd",
			"value": "00001"
		},
		{
			"id": "20d4e3bf-6041-4497-81e4-834c835c1251",
			"key": "decoderUpdate",
			"value": "00001"
		},
		{
			"id": "f5ab6505-4be0-4460-86e4-eeb6629b6e1c",
			"key": "decoderHerstellerAdd",
			"value": "ESU"
		},
		{
			"id": "e87e2788-d918-4005-b568-922eeee8d215",
			"key": "decoderHerstellerUpdate",
			"value": "ESU"
		},
		{
			"id": "6f5f46ea-523c-4b6c-9a3e-daaf4a7b139a",
			"key": "decoderBestellAdd",
			"value": "62400"
		},
		{
			"id": "8364c043-d7b2-4018-a282-acb6ebadafdb",
			"key": "decoderBestellUpdate",
			"value": "62400"
		},
		{
			"id": "bfd09bb7-e8c4-4867-a3ab-b38760b90d92",
			"key": "epochAdd",
			"value": "IV"
		},
		{
			"id": "36d3c137-28f1-45ae-86f0-f8874f21d9db",
			"key": "epochUpdate",
			"value": "IV"
		},
		{
			"id": "e61becc4-b02e-4637-96fb-5df1bb8910c8",
			"key": "gattungAdd",
			"value": "BR89.0"
		},
		{
			"id": "54cc902d-3913-4ed4-8cf7-a9332f952ba3",
			"key": "gattungUpdate",
			"value": "BR89.0"
		},
		{
			"id": "265e4527-f2ac-493d-86b6-80506507c5f3",
			"key": "herstellerAdd",
			"value": "MARKLIN"
		},
		{
			"id": "aef2cc26-c6f6-473f-a887-b098f81c2ca3",
			"key": "herstellerUpdate",
			"value": "MARKLIN"
		},
		{
			"id": "e8f93859-7b0b-4f1e-9b89-66c45973f3f1",
			"key": "kategorieAdd",
			"value": "LOKOMTIV"
		},
		{
			"id": "1ffafdb2-6fb7-4115-9a60-065f9f43f1d9",
			"key": "kategorieUpdate",
			"value": "AUSGESTALTUNG"
		},
		{
			"id": "4f9aed6d-dc08-460e-a1d8-84d34d3badc2",
			"key": "kupplungAdd",
			"value": "RELEX"
		},
		{
			"id": "8865c984-b735-441f-a013-2ab353d69ac7",
			"key": "kupplungUpdate",
			"value": "RELEX"
		},
		{
			"id": "8f1bc041-76c3-4ffe-ac97-19ebf09494f3",
			"key": "konfigurationAdd",
			"value": "CV"
		},
		{
			"id": "e154becd-9d41-415b-9216-44a8cc0de18a",
			"key": "konfigurationUpdate",
			"value": "STECKER"
		},
		{
			"id": "468ec533-8322-4bea-b458-43d35dc7caed",
			"key": "leistungsUbertragungAdd",
			"value": "MECHANISH"
		},
		{
			"id": "2d3e5376-fe5e-4c99-8709-c8b4bdb1e68d",
			"key": "leistungsUbertragungUpdate",
			"value": "ELEKTRISH"
		},
		{
			"id": "98762af3-9c4a-46ac-8567-eac701cabf3f",
			"key": "lichtAdd",
			"value": "L1V"
		},
		{
			"id": "405b929c-f0b5-4774-bc97-e78fe3849eaa",
			"key": "lichtUpdate",
			"value": "L1V"
		},
		{
			"id": "72c8276e-9428-4e11-be3d-3378519e74f8",
			"key": "massstabAdd",
			"value": "H0"
		},
		{
			"id": "2165211d-1d80-41b2-8f6e-bfef2c210e71",
			"key": "massstabUpdate",
			"value": "H0"
		},
		{
			"id": "628b25e4-a615-4ce6-acc5-83d01ed5a38a",
			"key": "motorTypAdd",
			"value": "CSINUS"
		},
		{
			"id": "58f011cd-72df-4a88-bd6d-16ecf1ffac15",
			"key": "motorTypUpdate",
			"value": "CSINUS"
		},
		{
			"id": "014ac67d-57ed-4b21-8128-ca670c543ca4",
			"key": "protokollAdd",
			"value": "MFX"
		},
		{
			"id": "ef300e32-691c-45a3-b0e2-e2e56902035f",
			"key": "protokollUpdate",
			"value": "DELTA"
		},
		{
			"id": "6a65dd21-b96a-4bc3-b37b-e09a8b69f7e7",
			"key": "sondermodellAdd",
			"value": "MM"
		},
		{
			"id": "34787059-6b0c-4531-b701-8c9a89660a3c",
			"key": "sondermodellUpdate",
			"value": "MM"
		},
		{
			"id": "bef72932-3221-493e-b8a3-b90f41883a81",
			"key": "spurweiteAdd",
			"value": "H0"
		},
		{
			"id": "2ecf549a-09fc-4940-9a01-55c06f28c389",
			"key": "spurweiteUpdate",
			"value": "H0"
		},
		{
			"id": "7e4ca967-a77e-4649-adaf-f4a8eac33e9f",
			"key": "steckerAdd",
			"value": "NEM651"
		},
		{
			"id": "207899c0-80c5-4e7c-a078-d16163e0ba4a",
			"key": "steckerUpdate",
			"value": "NEM652"
		},
		{
			"id": "b4c13380-8337-4d84-8da6-19c4ddffebbc",
			"key": "steuerungAdd",
			"value": "DIGITAL"
		},
		{
			"id": "9369f562-2d3f-477b-a1bd-9195806ab573",
			"key": "steuerungUpdate",
			"value": "DIGITAL"
		},
		{
			"id": "74898764-3907-4d97-828d-b47da66ed4e2",
			"key": "unterKategorieAdd",
			"value": "DAMPF"
		},
		{
			"id": "b7ddbe61-f981-4b9d-baef-5e5c017abe47",
			"key": "unterKategorieUpdate",
			"value": "HECKEN"
		},
		{
			"id": "d97ca964-f0e0-4824-9e85-057e58829d0d",
			"key": "vorbildAdd",
			"value": "HECKEN"
		},
		{
			"id": "4c9882e6-6861-4032-bfb4-864f51e82fe8",
			"key": "vorbildUpdate",
			"value": "HECKEN"
		},
		{
			"id": "ffb8b04b-1e1e-49df-93e1-d01f4a18dacb",
			"key": "zugAdd",
			"value": "BAVARIA"
		},
		{
			"id": "a8cb581d-63ac-4336-adf3-93740a22c335",
			"key": "zugUpdate",
			"value": "BAVARIA"
		},
		{
			"id": "458beb21-7803-4e9b-a25e-c8898219e51a",
			"key": "zugTypAdd",
			"value": "TEE"
		},
		{
			"id": "e13c5c73-bece-446d-a7f0-311e489c1d8b",
			"key": "zugTypUpdate",
			"value": "TEE"
		},
		{
			"id": "78f93059-7273-4c47-8e71-28cbdb994e42",
			"key": "imageFile",
			"value": "3000.jpg"
		},
		{
			"id": "758c1d1d-6ddc-4a48-8fae-27b04de8d2be",
			"key": "anleitungFile",
			"value": "3000_betrieb.pdf"
		},
		{
			"id": "42369fac-64e8-4bc8-a1af-6085e6b49797",
			"key": "explosionszeichnungFile",
			"value": "3000_explo.pdf"
		}
	],
	"protocolProfileBehavior": {}
}