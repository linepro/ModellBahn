{
	"info": {
		"_postman_id": "1bb32682-7430-4c6e-8107-c1c377ddb578",
		"name": "ModellBahn",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Enums",
			"item": [
				{
					"name": "Adress Typ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4ec04fc-49fa-43e2-a5d1-d5dc068e05ec",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/adressTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"adressTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anderungs Typ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8767488e-b8aa-47d9-b2ba-0433b23caa7e",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/anderungsTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"anderungsTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Decoder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c36286c5-5301-4555-b378-68d064db0718",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/decoder",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"decoder"
							]
						}
					},
					"response": []
				},
				{
					"name": "Konfiguration",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c176f318-db9a-424e-8aef-9a6d7270c492",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/konfiguration",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"konfiguration"
							]
						}
					},
					"response": []
				},
				{
					"name": "leistungsubertragung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56a07ba1-9f52-43be-afcf-34e8b6c26206",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/leistungsubertragung",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"leistungsubertragung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ddba2d9-d64c-4bd9-8783-4dce6a907c70",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/status",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stecker",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7521a9b-ccd2-4766-bd6d-7601af56e63d",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/stecker",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"stecker"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Achsfolg",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "71407bd7-84c0-4c85-8508-d60cd7f73431",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/achsfolg\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/achsfolg",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e638206f-07a4-41f3-8c97-25e56a892883",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ec5896bd-76b8-4678-a5e6-be0b175621d8",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/achsfolg\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/achsfolg/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/achsfolg",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e17be1e7-2234-462c-b2a9-55047f5ec990",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "65236daf-c077-49d1-ae46-7ccbc049f984",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/achsfolg\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/achsfolg/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{api}}/achsfolg/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a22115cf-9d6c-486c-9817-c7ef9294e6ae",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/achsfolg\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/achsfolg/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/achsfolg/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6bcea229-3146-4dea-a077-7c9648723663",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/achsfolg/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Antrieb",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ae45516-4d47-499c-be35-a7323ba1dae3",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/antrieb\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.antrieb.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.antrieb.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.antrieb.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/antrieb",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2a721b83-633b-469d-8d10-3ae5d8990c41",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a4739df6-552e-4b04-b832-886f0c06a6b2",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/antrieb\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/antrieb/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/antrieb",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5e196032-329e-47ba-a6c4-5168364af280",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "84e3f626-e2c9-442e-862b-e973bd0af7ea",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/antrieb\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/antrieb/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/antrieb/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "473824c8-4298-4044-abc2-fb1f363baf9e",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/antrieb\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/antrieb/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/antrieb/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3cd3c810-7fe4-4516-9de4-9fddd0e76445",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/antrieb/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Aufbau",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4e7098da-c280-42a6-9168-df196b7c4b32",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.aufbau.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.aufbau.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.aufbau.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/aufbau",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8409fd51-c0e9-4efa-9fde-88e39b90f09c",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "29b52908-0ee7-4f09-9e24-147a4b50b22a",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/aufbau/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/aufbau",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68c5e112-ed88-4a49-92b7-a065dce8058b",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/aufbau/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/aufbau/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/aufbau/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "db14fc12-a768-4f58-8a3d-b8bb235a74af",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8caece6e-4330-4368-8f26-a694b52f67f7",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/aufbau/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/aufbau/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/aufbau/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e59c12c4-d580-412b-b391-3fbce93700a9",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/aufbau/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/aufbau/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/aufbau/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "17ceb269-8f1c-43eb-84a9-234412aedc74",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/aufbau\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/aufbau/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/aufbau/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46197986-e035-4e79-9036-1e51becdbe6e",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/aufbau/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Bahnverwaltung",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "673f6465-4996-4370-b7bb-aaac9ceb1c54",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/bahnverwaltung\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.bahnverwaltung.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.bahnverwaltung.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.bahnverwaltung.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/bahnverwaltung",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1382a1b8-7509-41dd-a435-75fa7faa2d16",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"land\", pm.variables.replaceIn(\"{{$randomCountryCode}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bcee0296-670d-46c9-83cf-8bbceb0107d8",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/bahnverwaltung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/bahnverwaltung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"land\": \"{{land}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/bahnverwaltung",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b7a1e675-b5c7-46cf-81d5-803b0af456cf",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"land\", pm.variables.replaceIn(\"{{$randomCountryCode}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e92992a2-246f-4a63-bbdc-130fb6be2f03",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/bahnverwaltung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/bahnverwaltung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"land\": \"{{land}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/bahnverwaltung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b113c13-8a1a-447a-a9a7-89c657c56ff7",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/bahnverwaltung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/bahnverwaltung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/bahnverwaltung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2fd319ce-8262-48fd-8543-dd57a1c0fd11",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/bahnverwaltung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Epoch",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47a8c309-ff70-4b0d-a245-631b5fd2cb5e",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/epoch\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.epoch.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.epoch.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.epoch.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/epoch",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2341855a-93b8-4d32-abd6-e0d2516c2e3a",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f26884aa-1fcc-4f94-afbe-8fb00a69449f",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/epoch\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/epoch/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/epoch",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3fd796c9-af23-40b2-b36b-00dbb3fc4267",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "95e7ac72-7ca5-4e37-8713-185bdc57a924",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/epoch\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/epoch/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/epoch/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b06aa5cf-ed6a-4ccc-9b99-fad6a7ff247e",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/epoch\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/epoch/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/epoch/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3984c1b4-7d78-4850-87ce-ae414696d2db",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/epoch/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Gattung",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c7232a5-7803-42fa-b234-bf44c82af290",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/gattung\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.gattung.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.gattung.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.gattung.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/gattung",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "87f84249-c503-4177-96e9-4a78d06b451c",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0e1b6f12-6c41-4922-9678-5152c8f536b1",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/gattung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/gattung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/gattung",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "91b5cea1-7499-4ae5-8e9b-cd094cfbac94",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4248ddbb-cabd-439e-a3f0-f5bd25f42b2d",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/gattung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/gattung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/gattung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "267de160-04fd-42da-8e01-a27ac68fcc5a",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/gattung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/gattung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/gattung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5105ba72-c131-4337-96a8-787decbc7c69",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/gattung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Hersteller",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "49932535-3e89-4a12-82d7-a6c3deb7ae72",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/hersteller\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.hersteller.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.hersteller.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.hersteller.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/hersteller",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "895f61b7-6d0b-4ff7-9cb1-26225f58d85a",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"url\", pm.variables.replaceIn(\"{{$randomUrl}}\"));\r",
									"pm.environment.set(\"telefon\", pm.variables.replaceIn(\"+1{{$$randomPhoneNumber}}\").replaceAll(/-/,\"\"));\r",
									"pm.environment.set(\"land\", pm.variables.replaceIn(\"{{$randomCountryCode}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "46ee2b48-aa34-471e-ba9f-ac5646194d16",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/hersteller\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/hersteller/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.url).to.eql(pm.variables.get(\"url\"));\r",
									"pm.expect(jsonData.telefon).to.eql(pm.variables.get(\"telefon\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"url\": \"{{url}}\",\n\t\"telefon\": \"{{telefon}}\",\n\t\"land\": \"{{land}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/hersteller",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "40eadf13-2393-41c2-b0ce-d49739d2f11c",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"url\", pm.variables.replaceIn(\"{{$randomUrl}}\"));\r",
									"pm.environment.set(\"telefon\", pm.variables.replaceIn(\"+1{{$$randomPhoneNumber}}\").replaceAll(/-/,\"\"));\r",
									"pm.environment.set(\"land\", pm.variables.replaceIn(\"{{$randomCountryCode}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "97385684-a021-4c06-a5b6-1ed7aeba8d65",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/hersteller\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/hersteller/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.url).to.eql(pm.variables.get(\"url\"));\r",
									"pm.expect(jsonData.telefon).to.eql(pm.variables.get(\"telefon\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"url\": \"{{url}}\",\n\t\"telefon\": \"{{telefon}}\",\n\t\"land\": \"{{land}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/hersteller/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e6745212-ded5-4708-9300-65e60386e74d",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/hersteller\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/hersteller/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.url).to.eql(pm.variables.get(\"url\"));\r",
									"pm.expect(jsonData.telefon).to.eql(pm.variables.get(\"telefon\"));\r",
									"pm.expect(jsonData.land).to.eql(pm.variables.get(\"land\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/hersteller/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4f34d0f-0bb7-42ce-b5e6-1cce065ebfe0",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/hersteller/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Kupplung",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "afcc0dcc-9891-4790-89a5-8f88b5ab9f8f",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.kupplung.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.kupplung.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.kupplung.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kupplung",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "86083557-c390-4b52-8016-95c38e72758b",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "67c7039a-5744-42a0-bb3c-6d87cb8345ca",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kupplung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kupplung",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a032a42a-3c16-4771-96e4-3855f1de5de2",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kupplung/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/kupplung/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/kupplung/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6a7c2b0f-f5ac-481d-88af-a2da3d254b11",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f26f7e6f-d28c-46e8-a99d-c521d0b4e0cc",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kupplung/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/kupplung/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kupplung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b3496f8f-ccdb-4ba3-9ead-a8e3358871c8",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kupplung/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/kupplung/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kupplung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "62e4d1a9-2c39-4843-aaef-027efee29526",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kupplung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kupplung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/kupplung/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "237c3801-4e2c-4093-8ff9-8f3a88cd6c33",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/kupplung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Licht",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48a83025-15d1-4007-9146-268ab64b1bb4",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.licht.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.licht.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.licht.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/licht",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2e4ac0e6-a84f-41f6-92e2-6621e184fd82",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a3b5f1d8-00a9-481e-994a-0bbb90b619a1",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/licht/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/licht",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "740ab9e5-bcf7-465a-8957-e6294d17f663",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/licht/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/licht/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/licht/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e89f86b1-c7cc-43c9-98f3-4ee801e7ca75",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "18bc73a6-dfcd-4d28-85f9-1be99190b7ff",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/licht/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/licht/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/licht/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "995e69bb-5405-4bd5-99f9-a18e1932cae1",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/licht/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/licht/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/licht/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25d5ffe8-49fc-4d99-9f4a-e612a91a0aa5",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/licht\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/licht/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/licht/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f79aec9-b917-4a34-85c0-8109c0fd4798",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/licht/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Massstab",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6b99254-1960-4cac-abe7-035ed0d73432",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/massstab\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.massstab.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.massstab.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.massstab.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/massstab",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b6ab687a-1588-4337-882c-1622b7ae76e1",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "76e328d0-4dad-46ed-885c-8ce500a563bd",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/massstab\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/massstab/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/massstab",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b0a9f5b4-6745-4a3f-aa1d-153829b6793f",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1290a7e9-4b97-4263-9c90-a856621c6c2d",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/massstab\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/massstab/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/massstab/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d6d3fb6-a320-45b0-9153-848a9ed17444",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/massstab\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/massstab/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/massstab/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1b1634d-89dc-42ac-b6ff-0637f24af8d6",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/massstab/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Motor Typ",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf95e1e2-7c0f-42ce-9a1b-d3ed9d5912bd",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/motorTyp\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.motorTyp.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.motorTyp.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.motorTyp.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/motorTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bdf78a7f-4533-49ac-93b6-a420752ea47e",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "04bec834-94be-4446-ad21-b97d570c0c41",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/motorTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/motorTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/motorTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1394e19e-b283-45f5-b8a7-65f4d53b5225",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b5c0a2a8-623d-463b-83b4-43300a2ada53",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/motorTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/motorTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/motorTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3376dfcf-9240-4bbf-8c5a-f91e532461e5",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/motorTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/motorTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/motorTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0f7a76d-90bf-484a-8952-85febf7c360b",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/motorTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Protokoll",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "36d08571-382f-4c5c-913d-7f48690b1074",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/protokoll\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.protokoll.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.protokoll.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.protokoll.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/protokoll",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "db605b9c-ce89-400f-b339-c2a3e4d3e6e3",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "911d8d90-1007-4879-988f-4db1373b1afa",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/protokoll\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/protokoll/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/protokoll",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "dcbe73c0-fe2b-456f-a466-b6e168231c94",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0021e144-fc66-4919-9f1d-29016c2eab73",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/protokoll\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/protokoll/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/protokoll/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7113657-06fa-4d46-8025-e6d440fff794",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/protokoll\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/protokoll/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/protokoll/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dbd71e17-b0d5-4511-8f3f-8ce6b5cbcea9",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/protokoll/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Sondermodell",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25ece562-d714-4f9c-88f9-9e5b213403a1",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/sondermodell\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.sondermodell.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.sondermodell.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.sondermodell.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/sondermodell",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "74593159-5a44-4e9b-a5d4-d7aa9af015d3",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e2619e19-a253-4293-84cf-453667f3ae5e",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/sondermodell\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/sondermodell/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/sondermodell",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fedb2122-69a1-4edb-8132-f43a93d50a10",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "012326aa-3b05-40d2-9753-25165aef48de",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/sondermodell\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/sondermodell/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/sondermodell/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9c053ac-180e-47be-9188-33427ab5e17e",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/sondermodell\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/sondermodell/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/sondermodell/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d567248-f662-4531-98e3-099ffec98bdf",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/sondermodell/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Spurweite",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f297a77-1ac1-4d74-8103-c8229d6def9a",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/spurweite\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.spurweite.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.spurweite.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.spurweite.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/spurweite",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "095cbf7d-1366-4aeb-bb4a-77da2430e100",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c2a1abd8-f15d-439d-9678-246a1b2ee8ed",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/spurweite\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/spurweite/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/spurweite",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3a5ac109-5b10-4403-a7e0-cec34309e7ad",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "48abf657-1c01-4634-90b2-4340cfce534f",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/spurweite\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/spurweite/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/spurweite/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81174bae-c9cb-4da9-b118-d79f949e2466",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/spurweite\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/spurweite/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/spurweite/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "270a9ef1-ff09-4f22-9691-dd56c4eb14c4",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/spurweite/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Steuerung",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "970ffb76-9878-4abc-bad3-9bcca155532b",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/steuerung\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.steuerung.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.steuerung.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.steuerung.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/steuerung",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3c2fe340-653c-4a14-9ddb-82d2ce356e2d",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bdfcc9f8-561d-45b8-bf3b-5ec07abf6aee",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/steuerung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/steuerung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/steuerung",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bae442fd-cbc4-4491-907f-ed11f9d169ac",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2fb6728f-d232-425f-808b-4ea9130c576c",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/steuerung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/steuerung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/steuerung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d96b1c6f-b6a2-4546-a733-591807587084",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/steuerung\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/steuerung/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/steuerung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dcb1749f-9712-40fa-9f61-ec5f345aef80",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/steuerung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Zug Typ",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e29b4f00-d198-4b0f-86f5-29cd79529f09",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zugTyp\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.zugTyp.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.zugTyp.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.zugTyp.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/zugTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0dc00d07-5d08-4392-bdeb-dc452df68c08",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f3133708-a2cb-4a89-8dce-6fb8113f0848",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zugTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zugTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zugTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9a5f5986-ff9c-4d18-a424-a7903ab85669",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "096c5bac-803c-4041-bac0-a3ad35940778",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zugTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zugTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zugTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7b4cfe61-a037-4466-966e-1cfc3b49da94",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zugTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zugTyp/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/zugTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c3f122e-5a1e-4a73-9733-85d5d474ca69",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/zugTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Kategorie",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5985733f-5861-4056-b24d-62df8310253e",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.kategorie.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.kategorie.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.kategorie.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Unter Kategorie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7cb9952c-7c0f-4c4d-b375-189d9ed5643b",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.kategorie.forEach(function(k) { \r",
									"    var self = root + \"/\" + k.name;\r",
									"    pm.expect(k.name).to.be.oneOf([\"AUSGESTALTUNG\",\"BELEUCHTUNG\"]);\r",
									"    pm.expect(k.bezeichnung).to.exist;\r",
									"    k.unterKategorien.forEach(function(u){\r",
									"        pm.expect(u.kategorie).to.eql(k.name);\r",
									"        pm.expect(u.name).to.exist;\r",
									"        pm.expect(u.bezeichnung).to.exist;\r",
									"        pm.expect(u.deleted).to.be.false;\r",
									"    });\r",
									"    pm.expect(k.deleted).to.be.false;\r",
									"    pm.expect(k._links.add[0].href).to.eql(root);\r",
									"    pm.expect(k._links.self[0].href).to.eql(self);\r",
									"    pm.expect(k._links.update[0].href).to.eql(self);\r",
									"    pm.expect(k._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(k._links.search[0].href).to.eql(root);\r",
									"});\r",
									"root = pm.variables.replaceIn(\"{{api}}/unterKategorien?kategorien=AUSGESTALTUNG,BELEUCHTUNG\");\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.kategorie.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.kategorie.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/unterKategorien?kategorien=AUSGESTALTUNG,BELEUCHTUNG",
							"host": [
								"{{api}}"
							],
							"path": [
								"unterKategorien"
							],
							"query": [
								{
									"key": "kategorien",
									"value": "AUSGESTALTUNG,BELEUCHTUNG"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2521785c-ef76-4ca8-a2ce-a0720f3afd8f",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3b8f7aec-a553-4dc8-a561-89ed7041492e",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.unterKategorie).to.eql(undefined);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Unter Kategorie",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "731e20a0-5d8b-4ac5-99ea-7835d6ee850d",
								"exec": [
									"pm.environment.set(\"unterAdd\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"unterBezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b760ade0-2f1d-469d-b9d4-d4d6cf94fc7e",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}\");\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"unterAdd\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"unterBezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"kategorie\": \"{{name}}\",\n\t\"name\": \"{{unterAdd}}\",\n\t\"bezeichnung\": \"{{unterBezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kategorie/{{name}}/unterKategorien",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}",
								"unterKategorien"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Unter Kategorie",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "54e2f16b-a35a-468b-927f-b5273ab74e5a",
								"exec": [
									"pm.environment.set(\"unterBezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "df1d3196-3f11-4555-b3e3-7ccef815dccf",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}\");\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"unterAdd\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"unterBezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"kategorie\": \"{{name}}\",\n\t\"name\": \"{{unterAdd}}\",\n\t\"bezeichnung\": \"{{unterBezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}",
								"unterKategorien",
								"{{unterAdd}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "499b29f7-aaf3-4189-9405-9721a479d995",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9c99c87e-7447-4f59-b7be-cf0e4ebd8bcd",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}\");\r",
									"var child = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.unterKategorien.length).to.eql(1);\r",
									"pm.expect(jsonData.unterKategorien[0].kategorie).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.unterKategorien[0].name).to.eql(pm.variables.get(\"unterAdd\"));\r",
									"pm.expect(jsonData.unterKategorien[0].bezeichnung).to.eql(pm.variables.get(\"unterBezeichnung\"));\r",
									"pm.expect(jsonData.unterKategorien[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.unterKategorien[0]._links.add[0].href).to.eql(self);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.update[0].href).to.eql(child);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.delete[0].href).to.eql(child);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kategorie/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf4de237-9f0c-444e-aa9f-bd690a245ab0",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/kategorie\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}\");\r",
									"var child = pm.variables.replaceIn(\"{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.unterKategorien.length).to.eql(1);\r",
									"pm.expect(jsonData.unterKategorien[0].kategorie).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.unterKategorien[0].name).to.eql(pm.variables.get(\"unterAdd\"));\r",
									"pm.expect(jsonData.unterKategorien[0].bezeichnung).to.eql(pm.variables.get(\"unterBezeichnung\"));\r",
									"pm.expect(jsonData.unterKategorien[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.unterKategorien[0]._links.add[0].href).to.eql(self);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.update[0].href).to.eql(child);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.delete[0].href).to.eql(child);\r",
									"pm.expect(jsonData.unterKategorien[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kategorie/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Unter Kategorie",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10c1c1c9-ac77-456f-a9f7-a9e43d6b57c3",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/kategorie/{{name}}/unterKategorien/{{unterAdd}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}",
								"unterKategorien",
								"{{unterAdd}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3878a140-59e4-40f7-96ab-a22f59951dd4",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/kategorie/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Vorbild",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "515cd841-282a-4bf9-8c2a-592f432474bf",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.vorbild.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.gattung).to.exist;\r",
									"    pm.expect(a.kategorie).to.exist;\r",
									"    pm.expect(a.unterKategorie).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.vorbild.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.vorbild.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/vorbild",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "96266b55-46e8-433c-b54e-966d152527c1",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}{{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.environment.set(\"gattung\", pm.variables.replaceIn(\"{{gattungAdd}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"kategorie\", pm.variables.replaceIn(\"{{kategorieAdd}}\"));\r",
									"pm.environment.set(\"unterKategorie\", pm.variables.replaceIn(\"{{unterKategorieAdd}}\"));\r",
									"pm.environment.set(\"bahnverwaltung\", pm.variables.replaceIn(\"{{bahnverwaltungAdd}}\"));\r",
									"pm.environment.set(\"hersteller\", pm.variables.replaceIn(\"{{$randomCompanyName}}\"));\r",
									"pm.environment.set(\"bauzeit\", new Date(pm.variables.replaceIn(\"{{$randomDatePast}}\")).toISOString().substring(0, 10));\r",
									"pm.environment.set(\"anzahl\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.environment.set(\"antrieb\", pm.variables.replaceIn(\"{{antriebAdd}}\"));\r",
									"pm.environment.set(\"achsfolg\", pm.variables.replaceIn(\"{{achsfolgAdd}}\"));\r",
									"pm.environment.set(\"anfahrzugkraft\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"leistung\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"dienstgewicht\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"geschwindigkeit\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"ausserdienst\", new Date(pm.variables.replaceIn(\"{{$randomDatePast}}\")).toISOString().substring(0, 10));\r",
									"pm.environment.set(\"dmTreibrad\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"dmLaufradVorn\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"dmLaufradHinten\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"zylinder\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"dmZylinder\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"kolbenhub\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"kesseluberdruck\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"rostflache\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"uberhitzerflache\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"wasservorrat\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"verdampfung\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"fahrmotoren\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"motorbauart\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"leistungsubertragung\", pm.variables.replaceIn(\"{{leistungsubertragungAdd}}\"));\r",
									"pm.environment.set(\"reichweite\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"kapazitat\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"klasse\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"sitzplatzeKL1\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"sitzplatzeKL2\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"sitzplatzeKL3\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"sitzplatzeKL4\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"aufbau\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"triebkopf\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"mittelwagen\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"drehgestellBauart\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6ab6e976-b300-4ca5-a0f7-de03f08439a8",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/vorbild/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.antrieb).to.eql(pm.variables.get(\"antrieb\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.leistung).to.eql(pm.variables.get(\"leistung\"));\r",
									"pm.expect(jsonData.dienstgewicht).to.eql(pm.variables.get(\"dienstgewicht\"));\r",
									"pm.expect(jsonData.geschwindigkeit).to.eql(pm.variables.get(\"geschwindigkeit\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.ausserdienst).to.eql(pm.variables.get(\"ausserdienst\"));\r",
									"pm.expect(jsonData.dmTreibrad).to.eql(pm.variables.get(\"dmTreibrad\"));\r",
									"pm.expect(jsonData.zylinder).to.eql(pm.variables.get(\"zylinder\"));\r",
									"pm.expect(jsonData.dmZylinder).to.eql(pm.variables.get(\"dmZylinder\"));\r",
									"pm.expect(jsonData.kolbenhub).to.eql(pm.variables.get(\"kolbenhub\"));\r",
									"pm.expect(jsonData.kesseluberdruck).to.eql(pm.variables.get(\"kesseluberdruck\"));\r",
									"pm.expect(jsonData.rostflache).to.eql(pm.variables.get(\"rostflache\"));\r",
									"pm.expect(jsonData.uberhitzerflache).to.eql(pm.variables.get(\"uberhitzerflache\"));\r",
									"pm.expect(jsonData.wasservorrat).to.eql(pm.variables.get(\"wasservorrat\"));\r",
									"pm.expect(jsonData.verdampfung).to.eql(pm.variables.get(\"verdampfung\"));\r",
									"pm.expect(jsonData.fahrmotoren).to.eql(pm.variables.get(\"fahrmotoren\"));\r",
									"pm.expect(jsonData.motorbauart).to.eql(pm.variables.get(\"motorbauart\"));\r",
									"pm.expect(jsonData.leistungsubertragung).to.eql(pm.variables.get(\"leistungsubertragung\"));\r",
									"pm.expect(jsonData.reichweite).to.eql(pm.variables.get(\"reichweite\"));\r",
									"pm.expect(jsonData.kapazitat).to.eql(pm.variables.get(\"kapazitat\"));\r",
									"pm.expect(jsonData.klasse).to.eql(pm.variables.get(\"klasse\"));\r",
									"pm.expect(jsonData.sitzplatzeKL1).to.eql(pm.variables.get(\"sitzplatzeKL1\"));\r",
									"pm.expect(jsonData.sitzplatzeKL2).to.eql(pm.variables.get(\"sitzplatzeKL2\"));\r",
									"pm.expect(jsonData.sitzplatzeKL3).to.eql(pm.variables.get(\"sitzplatzeKL3\"));\r",
									"pm.expect(jsonData.sitzplatzeKL4).to.eql(pm.variables.get(\"sitzplatzeKL4\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.triebkopf).to.eql(pm.variables.get(\"triebkopf\"));\r",
									"pm.expect(jsonData.mittelwagen).to.eql(pm.variables.get(\"mittelwagen\"));\r",
									"pm.expect(jsonData.drehgestellBauart).to.eql(pm.variables.get(\"drehgestellBauart\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{name}}\",\n    \"gattung\": \"{{gattung}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"hersteller\": \"{{hersteller}}\",\n    \"bauzeit\": \"{{bauzeit}}\",\n    \"anzahl\": {{anzahl}},\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"antrieb\":\"{{antrieb}}\",\n    \"achsfolg\":\"{{achsfolg}}\",\n    \"leistung\": {{leistung}},\n    \"dienstgewicht\": {{dienstgewicht}},\n    \"geschwindigkeit\": {{geschwindigkeit}},\n    \"lange\": {{lange}},\n    \"ausserdienst\": \"{{ausserdienst}}\",\n    \"dmTreibrad\": {{dmTreibrad}},\n    \"zylinder\": {{zylinder}},\n    \"dmZylinder\": {{dmZylinder}},\n    \"kolbenhub\": {{kolbenhub}},\n    \"kesseluberdruck\": {{kesseluberdruck}},\n    \"rostflache\": {{rostflache}},\n    \"uberhitzerflache\": {{uberhitzerflache}},\n    \"wasservorrat\": {{wasservorrat}},\n    \"verdampfung\": {{verdampfung}},\n    \"fahrmotoren\": {{fahrmotoren}},\n    \"motorbauart\": \"{{motorbauart}}\",\n    \"leistungsubertragung\": \"{{leistungsubertragung}}\",\n    \"reichweite\": {{reichweite}},\n    \"kapazitat\": {{kapazitat}},\n    \"klasse\": {{klasse}},\n    \"sitzplatzeKL1\": {{sitzplatzeKL1}},\n    \"sitzplatzeKL2\": {{sitzplatzeKL2}},\n    \"sitzplatzeKL3\": {{sitzplatzeKL3}},\n    \"sitzplatzeKL4\": {{sitzplatzeKL4}},\n    \"aufbau\": \"{{aufbau}}\",\n    \"triebkopf\": {{triebkopf}},\n    \"mittelwagen\": {{mittelwagen}},\n    \"drehgestellBauart\": \"{{drehgestellBauart}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/vorbild",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fbc8ac25-80de-4cc3-baf1-e3732e4bd930",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/vorbild/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/vorbild/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.antrieb).to.eql(pm.variables.get(\"antrieb\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.leistung).to.eql(pm.variables.get(\"leistung\"));\r",
									"pm.expect(jsonData.dienstgewicht).to.eql(pm.variables.get(\"dienstgewicht\"));\r",
									"pm.expect(jsonData.geschwindigkeit).to.eql(pm.variables.get(\"geschwindigkeit\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.ausserdienst).to.eql(pm.variables.get(\"ausserdienst\"));\r",
									"pm.expect(jsonData.dmTreibrad).to.eql(pm.variables.get(\"dmTreibrad\"));\r",
									"pm.expect(jsonData.zylinder).to.eql(pm.variables.get(\"zylinder\"));\r",
									"pm.expect(jsonData.dmZylinder).to.eql(pm.variables.get(\"dmZylinder\"));\r",
									"pm.expect(jsonData.kolbenhub).to.eql(pm.variables.get(\"kolbenhub\"));\r",
									"pm.expect(jsonData.kesseluberdruck).to.eql(pm.variables.get(\"kesseluberdruck\"));\r",
									"pm.expect(jsonData.rostflache).to.eql(pm.variables.get(\"rostflache\"));\r",
									"pm.expect(jsonData.uberhitzerflache).to.eql(pm.variables.get(\"uberhitzerflache\"));\r",
									"pm.expect(jsonData.wasservorrat).to.eql(pm.variables.get(\"wasservorrat\"));\r",
									"pm.expect(jsonData.verdampfung).to.eql(pm.variables.get(\"verdampfung\"));\r",
									"pm.expect(jsonData.fahrmotoren).to.eql(pm.variables.get(\"fahrmotoren\"));\r",
									"pm.expect(jsonData.motorbauart).to.eql(pm.variables.get(\"motorbauart\"));\r",
									"pm.expect(jsonData.leistungsubertragung).to.eql(pm.variables.get(\"leistungsubertragung\"));\r",
									"pm.expect(jsonData.reichweite).to.eql(pm.variables.get(\"reichweite\"));\r",
									"pm.expect(jsonData.kapazitat).to.eql(pm.variables.get(\"kapazitat\"));\r",
									"pm.expect(jsonData.klasse).to.eql(pm.variables.get(\"klasse\"));\r",
									"pm.expect(jsonData.sitzplatzeKL1).to.eql(pm.variables.get(\"sitzplatzeKL1\"));\r",
									"pm.expect(jsonData.sitzplatzeKL2).to.eql(pm.variables.get(\"sitzplatzeKL2\"));\r",
									"pm.expect(jsonData.sitzplatzeKL3).to.eql(pm.variables.get(\"sitzplatzeKL3\"));\r",
									"pm.expect(jsonData.sitzplatzeKL4).to.eql(pm.variables.get(\"sitzplatzeKL4\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.triebkopf).to.eql(pm.variables.get(\"triebkopf\"));\r",
									"pm.expect(jsonData.mittelwagen).to.eql(pm.variables.get(\"mittelwagen\"));\r",
									"pm.expect(jsonData.drehgestellBauart).to.eql(pm.variables.get(\"drehgestellBauart\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/vorbild/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0aa3484-57d5-4aa3-9a7c-f9652102c371",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/vorbild/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/vorbild/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.antrieb).to.eql(pm.variables.get(\"antrieb\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.leistung).to.eql(pm.variables.get(\"leistung\"));\r",
									"pm.expect(jsonData.dienstgewicht).to.eql(pm.variables.get(\"dienstgewicht\"));\r",
									"pm.expect(jsonData.geschwindigkeit).to.eql(pm.variables.get(\"geschwindigkeit\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.ausserdienst).to.eql(pm.variables.get(\"ausserdienst\"));\r",
									"pm.expect(jsonData.dmTreibrad).to.eql(pm.variables.get(\"dmTreibrad\"));\r",
									"pm.expect(jsonData.zylinder).to.eql(pm.variables.get(\"zylinder\"));\r",
									"pm.expect(jsonData.dmZylinder).to.eql(pm.variables.get(\"dmZylinder\"));\r",
									"pm.expect(jsonData.kolbenhub).to.eql(pm.variables.get(\"kolbenhub\"));\r",
									"pm.expect(jsonData.kesseluberdruck).to.eql(pm.variables.get(\"kesseluberdruck\"));\r",
									"pm.expect(jsonData.rostflache).to.eql(pm.variables.get(\"rostflache\"));\r",
									"pm.expect(jsonData.uberhitzerflache).to.eql(pm.variables.get(\"uberhitzerflache\"));\r",
									"pm.expect(jsonData.wasservorrat).to.eql(pm.variables.get(\"wasservorrat\"));\r",
									"pm.expect(jsonData.verdampfung).to.eql(pm.variables.get(\"verdampfung\"));\r",
									"pm.expect(jsonData.fahrmotoren).to.eql(pm.variables.get(\"fahrmotoren\"));\r",
									"pm.expect(jsonData.motorbauart).to.eql(pm.variables.get(\"motorbauart\"));\r",
									"pm.expect(jsonData.leistungsubertragung).to.eql(pm.variables.get(\"leistungsubertragung\"));\r",
									"pm.expect(jsonData.reichweite).to.eql(pm.variables.get(\"reichweite\"));\r",
									"pm.expect(jsonData.kapazitat).to.eql(pm.variables.get(\"kapazitat\"));\r",
									"pm.expect(jsonData.klasse).to.eql(pm.variables.get(\"klasse\"));\r",
									"pm.expect(jsonData.sitzplatzeKL1).to.eql(pm.variables.get(\"sitzplatzeKL1\"));\r",
									"pm.expect(jsonData.sitzplatzeKL2).to.eql(pm.variables.get(\"sitzplatzeKL2\"));\r",
									"pm.expect(jsonData.sitzplatzeKL3).to.eql(pm.variables.get(\"sitzplatzeKL3\"));\r",
									"pm.expect(jsonData.sitzplatzeKL4).to.eql(pm.variables.get(\"sitzplatzeKL4\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.triebkopf).to.eql(pm.variables.get(\"triebkopf\"));\r",
									"pm.expect(jsonData.mittelwagen).to.eql(pm.variables.get(\"mittelwagen\"));\r",
									"pm.expect(jsonData.drehgestellBauart).to.eql(pm.variables.get(\"drehgestellBauart\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f3e4e657-354c-4b7b-b8ed-88ddd7ccfbbd",
								"exec": [
									"pm.environment.set(\"gattung\", pm.variables.replaceIn(\"{{gattungUpdate}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"kategorie\", pm.variables.replaceIn(\"{{kategorieUpdate}}\"));\r",
									"pm.environment.set(\"unterKategorie\", pm.variables.replaceIn(\"{{unterKategorieUpdate}}\"));\r",
									"pm.environment.set(\"bahnverwaltung\", pm.variables.replaceIn(\"{{bahnverwaltungUpdate}}\"));\r",
									"pm.environment.set(\"hersteller\", pm.variables.replaceIn(\"{{$randomCompanyName}}\"));\r",
									"pm.environment.set(\"bauzeit\", new Date(pm.variables.replaceIn(\"{{$randomDatePast}}\")).toISOString().substring(0,10));\r",
									"pm.environment.set(\"anzahl\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.environment.set(\"antrieb\", pm.variables.replaceIn(\"{{antriebUpdate}}\"));\r",
									"pm.environment.set(\"achsfolg\", pm.variables.replaceIn(\"{{achsfolgUpdate}}\"));\r",
									"pm.environment.set(\"anfahrzugkraft\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"leistung\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"dienstgewicht\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"geschwindigkeit\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"ausserdienst\", new Date(pm.variables.replaceIn(\"{{$randomDatePast}}\")).toISOString().substring(0,10));\r",
									"pm.environment.set(\"dmTreibrad\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"dmLaufradVorn\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"dmLaufradHinten\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"zylinder\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"dmZylinder\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"kolbenhub\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"kesseluberdruck\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"rostflache\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"uberhitzerflache\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"wasservorrat\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"verdampfung\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"fahrmotoren\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"motorbauart\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"leistungsubertragung\", pm.variables.replaceIn(\"{{leistungsubertragungUpdate}}\"));\r",
									"pm.environment.set(\"reichweite\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"kapazitat\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"klasse\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"sitzplatzeKL1\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"sitzplatzeKL2\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"sitzplatzeKL3\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"sitzplatzeKL4\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"aufbau\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"triebkopf\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"mittelwagen\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"drehgestellBauart\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{name}}\",\n    \"gattung\": \"{{gattung}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"hersteller\": \"{{hersteller}}\",\n    \"bauzeit\": \"{{bauzeit}}\",\n    \"anzahl\": {{anzahl}},\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"antrieb\":\"{{antrieb}}\",\n    \"achsfolg\":\"{{achsfolg}}\",\n    \"leistung\": {{leistung}},\n    \"dienstgewicht\": {{dienstgewicht}},\n    \"geschwindigkeit\": {{geschwindigkeit}},\n    \"lange\": {{lange}},\n    \"ausserdienst\": \"{{ausserdienst}}\",\n    \"dmTreibrad\": {{dmTreibrad}},\n    \"zylinder\": {{zylinder}},\n    \"dmZylinder\": {{dmZylinder}},\n    \"kolbenhub\": {{kolbenhub}},\n    \"kesseluberdruck\": {{kesseluberdruck}},\n    \"rostflache\": {{rostflache}},\n    \"uberhitzerflache\": {{uberhitzerflache}},\n    \"wasservorrat\": {{wasservorrat}},\n    \"verdampfung\": {{verdampfung}},\n    \"fahrmotoren\": {{fahrmotoren}},\n    \"motorbauart\": \"{{motorbauart}}\",\n    \"leistungsubertragung\": \"{{leistungsubertragung}}\",\n    \"reichweite\": {{reichweite}},\n    \"kapazitat\": {{kapazitat}},\n    \"klasse\": {{klasse}},\n    \"sitzplatzeKL1\": {{sitzplatzeKL1}},\n    \"sitzplatzeKL2\": {{sitzplatzeKL2}},\n    \"sitzplatzeKL3\": {{sitzplatzeKL3}},\n    \"sitzplatzeKL4\": {{sitzplatzeKL4}},\n    \"aufbau\": \"{{aufbau}}\",\n    \"triebkopf\": {{triebkopf}},\n    \"mittelwagen\": {{mittelwagen}},\n    \"drehgestellBauart\": \"{{drehgestellBauart}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/vorbild/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f3718e3-037c-4979-96ca-dd540741683e",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/vorbild/{{name}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/vorbild/{{name}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.antrieb).to.eql(pm.variables.get(\"antrieb\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.leistung).to.eql(pm.variables.get(\"leistung\"));\r",
									"pm.expect(jsonData.dienstgewicht).to.eql(pm.variables.get(\"dienstgewicht\"));\r",
									"pm.expect(jsonData.geschwindigkeit).to.eql(pm.variables.get(\"geschwindigkeit\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.ausserdienst).to.eql(pm.variables.get(\"ausserdienst\"));\r",
									"pm.expect(jsonData.dmTreibrad).to.eql(pm.variables.get(\"dmTreibrad\"));\r",
									"pm.expect(jsonData.zylinder).to.eql(pm.variables.get(\"zylinder\"));\r",
									"pm.expect(jsonData.dmZylinder).to.eql(pm.variables.get(\"dmZylinder\"));\r",
									"pm.expect(jsonData.kolbenhub).to.eql(pm.variables.get(\"kolbenhub\"));\r",
									"pm.expect(jsonData.kesseluberdruck).to.eql(pm.variables.get(\"kesseluberdruck\"));\r",
									"pm.expect(jsonData.rostflache).to.eql(pm.variables.get(\"rostflache\"));\r",
									"pm.expect(jsonData.uberhitzerflache).to.eql(pm.variables.get(\"uberhitzerflache\"));\r",
									"pm.expect(jsonData.wasservorrat).to.eql(pm.variables.get(\"wasservorrat\"));\r",
									"pm.expect(jsonData.verdampfung).to.eql(pm.variables.get(\"verdampfung\"));\r",
									"pm.expect(jsonData.fahrmotoren).to.eql(pm.variables.get(\"fahrmotoren\"));\r",
									"pm.expect(jsonData.motorbauart).to.eql(pm.variables.get(\"motorbauart\"));\r",
									"pm.expect(jsonData.leistungsubertragung).to.eql(pm.variables.get(\"leistungsubertragung\"));\r",
									"pm.expect(jsonData.reichweite).to.eql(pm.variables.get(\"reichweite\"));\r",
									"pm.expect(jsonData.kapazitat).to.eql(pm.variables.get(\"kapazitat\"));\r",
									"pm.expect(jsonData.klasse).to.eql(pm.variables.get(\"klasse\"));\r",
									"pm.expect(jsonData.sitzplatzeKL1).to.eql(pm.variables.get(\"sitzplatzeKL1\"));\r",
									"pm.expect(jsonData.sitzplatzeKL2).to.eql(pm.variables.get(\"sitzplatzeKL2\"));\r",
									"pm.expect(jsonData.sitzplatzeKL3).to.eql(pm.variables.get(\"sitzplatzeKL3\"));\r",
									"pm.expect(jsonData.sitzplatzeKL4).to.eql(pm.variables.get(\"sitzplatzeKL4\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.triebkopf).to.eql(pm.variables.get(\"triebkopf\"));\r",
									"pm.expect(jsonData.mittelwagen).to.eql(pm.variables.get(\"mittelwagen\"));\r",
									"pm.expect(jsonData.drehgestellBauart).to.eql(pm.variables.get(\"drehgestellBauart\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/vorbild/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96aa4789-139c-40a2-8cee-32cb4cca6550",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/vorbild\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/vorbild/{{name}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"anzahl\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.antrieb).to.eql(pm.variables.get(\"antrieb\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.leistung).to.eql(pm.variables.get(\"leistung\"));\r",
									"pm.expect(jsonData.dienstgewicht).to.eql(pm.variables.get(\"dienstgewicht\"));\r",
									"pm.expect(jsonData.geschwindigkeit).to.eql(pm.variables.get(\"geschwindigkeit\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.ausserdienst).to.eql(pm.variables.get(\"ausserdienst\"));\r",
									"pm.expect(jsonData.dmTreibrad).to.eql(pm.variables.get(\"dmTreibrad\"));\r",
									"pm.expect(jsonData.zylinder).to.eql(pm.variables.get(\"zylinder\"));\r",
									"pm.expect(jsonData.dmZylinder).to.eql(pm.variables.get(\"dmZylinder\"));\r",
									"pm.expect(jsonData.kolbenhub).to.eql(pm.variables.get(\"kolbenhub\"));\r",
									"pm.expect(jsonData.kesseluberdruck).to.eql(pm.variables.get(\"kesseluberdruck\"));\r",
									"pm.expect(jsonData.rostflache).to.eql(pm.variables.get(\"rostflache\"));\r",
									"pm.expect(jsonData.uberhitzerflache).to.eql(pm.variables.get(\"uberhitzerflache\"));\r",
									"pm.expect(jsonData.wasservorrat).to.eql(pm.variables.get(\"wasservorrat\"));\r",
									"pm.expect(jsonData.verdampfung).to.eql(pm.variables.get(\"verdampfung\"));\r",
									"pm.expect(jsonData.fahrmotoren).to.eql(pm.variables.get(\"fahrmotoren\"));\r",
									"pm.expect(jsonData.motorbauart).to.eql(pm.variables.get(\"motorbauart\"));\r",
									"pm.expect(jsonData.leistungsubertragung).to.eql(pm.variables.get(\"leistungsubertragung\"));\r",
									"pm.expect(jsonData.reichweite).to.eql(pm.variables.get(\"reichweite\"));\r",
									"pm.expect(jsonData.kapazitat).to.eql(pm.variables.get(\"kapazitat\"));\r",
									"pm.expect(jsonData.klasse).to.eql(pm.variables.get(\"klasse\"));\r",
									"pm.expect(jsonData.sitzplatzeKL1).to.eql(pm.variables.get(\"sitzplatzeKL1\"));\r",
									"pm.expect(jsonData.sitzplatzeKL2).to.eql(pm.variables.get(\"sitzplatzeKL2\"));\r",
									"pm.expect(jsonData.sitzplatzeKL3).to.eql(pm.variables.get(\"sitzplatzeKL3\"));\r",
									"pm.expect(jsonData.sitzplatzeKL4).to.eql(pm.variables.get(\"sitzplatzeKL4\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.triebkopf).to.eql(pm.variables.get(\"triebkopf\"));\r",
									"pm.expect(jsonData.mittelwagen).to.eql(pm.variables.get(\"mittelwagen\"));\r",
									"pm.expect(jsonData.drehgestellBauart).to.eql(pm.variables.get(\"drehgestellBauart\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/vorbild/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c008636-982e-4fe1-a2c0-fe367eca4703",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/vorbild/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Decoder Typ",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0dd85d1a-28be-401c-9099-d34ba76b4c17",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.decoderTyp.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.hersteller + \"/\" + a.bestellNr;\r",
									"    pm.expect(a.hersteller).to.exist;\r",
									"    pm.expect(a.bestellNr).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.protokoll).to.exist;\r",
									"    pm.expect(a.gerausch).to.exist;\r",
									"    pm.expect(a.konfiguration).to.exist;\r",
									"    pm.expect(a.stecker).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.decoderTyp.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.decoderTyp.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "04bf8ef5-e3e2-4a84-8449-5302aba7d242",
								"exec": [
									"pm.environment.set(\"hersteller\", pm.variables.get(\"decoderHerstellerAdd\"));\r",
									"pm.environment.set(\"bestellNr\", pm.variables.get(\"decoderBestellAdd\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"iMax\", new Number(pm.variables.get(\"iMaxAdd\")));\r",
									"pm.environment.set(\"protokoll\", pm.variables.get(\"protokollAdd\"));\r",
									"pm.environment.set(\"fahrstufe\", new Number(pm.variables.get(\"fahrstufeAdd\")));\r",
									"pm.environment.set(\"gerausch\", new Boolean(true));\r",
									"pm.environment.set(\"konfiguration\", pm.variables.get(\"konfigurationAdd\"));\r",
									"pm.environment.set(\"stecker\", pm.variables.get(\"steckerAdd\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "046ce113-d851-4717-bab6-44c87b78010b",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.iMax).to.eql(pm.variables.get(\"iMax\"));\r",
									"pm.expect(jsonData.protokoll).to.eql(pm.variables.get(\"protokoll\"));\r",
									"pm.expect(jsonData.fahrstufe).to.eql(pm.variables.get(\"fahrstufe\"));\r",
									"pm.expect(jsonData.gerausch).to.eql(pm.variables.get(\"gerausch\"));\r",
									"pm.expect(jsonData.konfiguration).to.eql(pm.variables.get(\"konfiguration\"));\r",
									"pm.expect(jsonData.stecker).to.eql(pm.variables.get(\"stecker\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(undefined);\r",
									"pm.expect(jsonData.adressen).to.be.empty;\r",
									"pm.expect(jsonData.cvs).to.be.empty;\r",
									"pm.expect(jsonData.funktionen).to.be.empty;\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"iMax\": {{iMax}},\n    \"protokoll\": \"{{protokoll}}\",\n    \"fahrstufe\": {{fahrstufe}},\n    \"gerausch\": {{gerausch}},\n    \"konfiguration\": \"{{konfiguration}}\",\n    \"stecker\": \"{{stecker}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Anleitungen",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "caf810ce-d4d2-499e-81f5-49b96ace23eb",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/decoderTyp/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.iMax).to.eql(pm.variables.get(\"iMax\"));\r",
									"pm.expect(jsonData.protokoll).to.eql(pm.variables.get(\"protokoll\"));\r",
									"pm.expect(jsonData.fahrstufe).to.eql(pm.variables.get(\"fahrstufe\"));\r",
									"pm.expect(jsonData.gerausch).to.eql(pm.variables.get(\"gerausch\"));\r",
									"pm.expect(jsonData.konfiguration).to.eql(pm.variables.get(\"konfiguration\"));\r",
									"pm.expect(jsonData.stecker).to.eql(pm.variables.get(\"stecker\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.adressen).to.be.empty;\r",
									"pm.expect(jsonData.cvs).to.be.empty;\r",
									"pm.expect(jsonData.funktionen).to.be.empty;\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "anleitungen",
									"type": "file",
									"src": "{{anleitungFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/anleitungen",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{hersteller}}",
								"{{bestellNr}}",
								"anleitungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Adress",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c851550b-b985-4eaf-b5fe-7ef2b2fcc424",
								"exec": [
									"pm.environment.set(\"adIndex\", new Number(pm.variables.get(\"adIndexAdd\")));\r",
									"pm.environment.set(\"adBezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"adTyp\", pm.variables.get(\"adTypAdd\"));\r",
									"pm.environment.set(\"adSpan\", new Number(pm.variables.get(\"adSpanAdd\")));\r",
									"pm.environment.set(\"adress\", new Number(pm.variables.get(\"adAdd\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a69914bb-c062-40f9-860c-3d1c643144d7",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var parent = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{adIndex}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.index).to.eql(pm.variables.get(\"adIndex\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"adBezeichnung\"));\r",
									"pm.expect(jsonData.adressTyp).to.eql(pm.variables.get(\"adTyp\"));\r",
									"pm.expect(jsonData.span).to.eql(pm.variables.get(\"adSpan\"));\r",
									"pm.expect(jsonData.werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(parent);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{hersteller}}\",\n\t\"bestellNr\": \"{{bestellNr}}\",\n    \"index\": {{adIndex}},\n\t\"bezeichnung\": \"{{adBezeichnung}}\",\n    \"adressTyp\": \"{{adTyp}}\",\n    \"span\": {{adSpan}},\n    \"werkseinstellung\": {{adress}},\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{hersteller}}",
								"{{bestellNr}}",
								"adress"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Adress",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5e028752-28fc-4384-9d13-41f22b237ad9",
								"exec": [
									"pm.environment.set(\"adBezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"adTyp\", pm.variables.get(\"adTypUpdate\"));\r",
									"pm.environment.set(\"adSpan\", new Number(pm.variables.get(\"adSpanUpdate\")));\r",
									"pm.environment.set(\"adress\", new Number(pm.variables.get(\"adUpdate\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ea3f1a46-14bd-4d81-991e-a817e5960b73",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var parent = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{adIndex}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.index).to.eql(pm.variables.get(\"adIndex\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"adBezeichnung\"));\r",
									"pm.expect(jsonData.adressTyp).to.eql(pm.variables.get(\"adTyp\"));\r",
									"pm.expect(jsonData.span).to.eql(pm.variables.get(\"adSpan\"));\r",
									"pm.expect(jsonData.werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(parent);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{hersteller}}\",\n\t\"bestellNr\": \"{{bestellNr}}\",\n    \"index\": {{adIndex}},\n\t\"bezeichnung\": \"{{adBezeichnung}}\",\n    \"adressTyp\": \"{{adTyp}}\",\n    \"span\": {{adSpan}},\n    \"werkseinstellung\": {{adress}},\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{adIndex}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{hersteller}}",
								"{{bestellNr}}",
								"adress",
								"{{adIndex}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add CV",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "81407570-e2f3-41b7-8299-e099f73ba502",
								"exec": [
									"pm.environment.set(\"cv\", new Number(pm.variables.get(\"cvAdd\")));\r",
									"pm.environment.set(\"cvBezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"cvMinimal\", new Number(pm.variables.get(\"cvMinAdd\")));\r",
									"pm.environment.set(\"cvMaximal\", new Number(pm.variables.get(\"cvMaxAdd\")));\r",
									"pm.environment.set(\"cvValue\", new Number(pm.variables.get(\"cvValueAdd\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2ab48333-ff5d-48c9-b4ab-96dba99e9956",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var parent = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/cv\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/cv/{{cv}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.cv).to.eql(pm.variables.get(\"cv\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"cvBezeichnung\"));\r",
									"pm.expect(jsonData.minimal).to.eql(pm.variables.get(\"cvMinimal\"));\r",
									"pm.expect(jsonData.maximal).to.eql(pm.variables.get(\"cvMaximal\"));\r",
									"pm.expect(jsonData.werkseinstellung).to.eql(pm.variables.get(\"cvValue\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(parent);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{hersteller}}\",\n\t\"bestellNr\": \"{{bestellNr}}\",\n    \"cv\": {{cv}},\n\t\"bezeichnung\": \"{{cvBezeichnung}}\",\n    \"minimal\": {{cvMinimal}},\n    \"maximal\": {{cvMaximal}},\n    \"werkseinstellung\": {{cvValue}},\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/cv",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{hersteller}}",
								"{{bestellNr}}",
								"cv"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update CV",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e993df42-b13f-4fac-8ade-e413e6592e6d",
								"exec": [
									"pm.environment.set(\"cvBezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"cvMinimal\", new Number(pm.variables.get(\"cvMinUpdate\")));\r",
									"pm.environment.set(\"cvMaximal\", new Number(pm.variables.get(\"cvMaxUpdate\")));\r",
									"pm.environment.set(\"cvValue\", new Number(pm.variables.get(\"cvValueUpdate\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8e7e4ab7-1ad4-4968-a6ff-0050b18e8da0",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var parent = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/cv\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/cv/{{cv}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.cv).to.eql(pm.variables.get(\"cv\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"cvBezeichnung\"));\r",
									"pm.expect(jsonData.minimal).to.eql(pm.variables.get(\"cvMinimal\"));\r",
									"pm.expect(jsonData.maximal).to.eql(pm.variables.get(\"cvMaximal\"));\r",
									"pm.expect(jsonData.werkseinstellung).to.eql(pm.variables.get(\"cvValue\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(parent);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{hersteller}}\",\n\t\"bestellNr\": \"{{bestellNr}}\",\n    \"cv\": {{cv}},\n\t\"bezeichnung\": \"{{cvBezeichnung}}\",\n    \"minimal\": {{cvMinimal}},\n    \"maximal\": {{cvMaximal}},\n    \"werkseinstellung\": {{cvValue}},\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/cv/{{cv}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{hersteller}}",
								"{{bestellNr}}",
								"cv",
								"{{cv}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Funktion",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "27533d99-53c2-42ec-975a-c89e45598442",
								"exec": [
									"pm.environment.set(\"fnReihe\", new Number(pm.variables.get(\"fnReiheAdd\")));\r",
									"pm.environment.set(\"fnFunktion\", pm.variables.get(\"fnFuntionAdd\"));\r",
									"pm.environment.set(\"fnBezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"fnProgrammable\", new Boolean(true));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9ee9f6dd-e5ee-403d-998d-01bb0b5569fb",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var parent = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/funktion\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/funktion/{{fnReihe}}/{{fnFunktion}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.reihe).to.eql(pm.variables.get(\"fnReihe\"));\r",
									"pm.expect(jsonData.funktion).to.eql(pm.variables.get(\"fnFunktion\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"fnBezeichnung\"));\r",
									"pm.expect(jsonData.programmable).to.eql(pm.variables.get(\"fnProgrammable\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(parent);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{hersteller}}\",\n\t\"bestellNr\": \"{{bestellNr}}\",\n    \"reihe\": {{fnReihe}},\n    \"funktion\": \"{{fnFunktion}}\",\n\t\"bezeichnung\": \"{{fnBezeichnung}}\",\n\t\"programmable\": {{fnProgrammable}},\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/funktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{hersteller}}",
								"{{bestellNr}}",
								"funktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Funktion",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cb660c4a-2a08-4402-81a5-062d250c2851",
								"exec": [
									"pm.environment.set(\"fnReihe\", new Number(pm.variables.get(\"fnReiheUpdate\")));\r",
									"pm.environment.set(\"fnFunktion\", pm.variables.get(\"fnFuntionUpdate\"));\r",
									"pm.environment.set(\"fnBezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"fnProgrammable\", new Boolean(false));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0003726b-c22b-46e2-8879-5d5b1e7890c4",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var parent = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/funktion\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/funktion/{{fnReihe}}/{{fnFunktion}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.reihe).to.eql(pm.variables.get(\"fnReihe\"));\r",
									"pm.expect(jsonData.funktion).to.eql(pm.variables.get(\"fnFunktion\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"fnBezeichnung\"));\r",
									"pm.expect(jsonData.programmable).to.eql(pm.variables.get(\"fnProgrammable\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(parent);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{hersteller}}\",\n\t\"bestellNr\": \"{{bestellNr}}\",\n    \"reihe\": {{fnReihe}},\n    \"funktion\": \"{{fnFunktion}}\",\n\t\"bezeichnung\": \"{{fnBezeichnung}}\",\n\t\"programmable\": {{fnProgrammable}},\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/funktion/{{fnReihe}}/{{fnFunktion}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{hersteller}}",
								"{{bestellNr}}",
								"funktion",
								"{{fnReihe}}",
								"{{fnFunktion}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "58c4c727-5782-4615-9373-5089b1696761",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"iMax\", new Number(pm.variables.get(\"iMaxUpdate\")));\r",
									"pm.environment.set(\"protokoll\", pm.variables.get(\"protokollUpdate\"));\r",
									"pm.environment.set(\"fahrstufe\", new Number(pm.variables.get(\"fahrstufeUpdate\")));\r",
									"pm.environment.set(\"gerausch\", new Boolean(false));\r",
									"pm.environment.set(\"konfiguration\", pm.variables.get(\"konfigurationUpdate\"));\r",
									"pm.environment.set(\"stecker\", pm.variables.get(\"steckerUpdate\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "afea9481-bfc5-4b17-80fc-41c3375b853a",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/decoderTyp/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"var adressRoot = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress\");\r",
									"var adressUrl = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{adIndex}}\");\r",
									"var cvRoot = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/cv\");\r",
									"var cvUrl = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/cv/{{cv}}\");\r",
									"var funktionRoot = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/funktion\");\r",
									"var funktionUrl = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/funktion/{{fnReihe}}/{{fnFunktion}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.iMax).to.eql(pm.variables.get(\"iMax\"));\r",
									"pm.expect(jsonData.protokoll).to.eql(pm.variables.get(\"protokoll\"));\r",
									"pm.expect(jsonData.fahrstufe).to.eql(pm.variables.get(\"fahrstufe\"));\r",
									"pm.expect(jsonData.gerausch).to.eql(pm.variables.get(\"gerausch\"));\r",
									"pm.expect(jsonData.konfiguration).to.eql(pm.variables.get(\"konfiguration\"));\r",
									"pm.expect(jsonData.stecker).to.eql(pm.variables.get(\"stecker\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.adressen.length).to.eql(1);\r",
									"pm.expect(jsonData.adressen[0].hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.adressen[0].bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.adressen[0].index).to.eql(pm.variables.get(\"adIndex\"));\r",
									"pm.expect(jsonData.adressen[0].bezeichnung).to.eql(pm.variables.get(\"adBezeichnung\"));\r",
									"pm.expect(jsonData.adressen[0].adressTyp).to.eql(pm.variables.get(\"adTyp\"));\r",
									"pm.expect(jsonData.adressen[0].span).to.eql(pm.variables.get(\"adSpan\"));\r",
									"pm.expect(jsonData.adressen[0].werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.adressen[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.adressen[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData.adressen[0]._links.add[0].href).to.eql(adressRoot);\r",
									"pm.expect(jsonData.adressen[0]._links.update[0].href).to.eql(adressUrl);\r",
									"pm.expect(jsonData.adressen[0]._links.delete[0].href).to.eql(adressUrl);\r",
									"pm.expect(jsonData.cvs.length).to.eql(1);\r",
									"pm.expect(jsonData.cvs[0].hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.cvs[0].bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.cvs[0].cv).to.eql(pm.variables.get(\"cv\"));\r",
									"pm.expect(jsonData.cvs[0].bezeichnung).to.eql(pm.variables.get(\"cvBezeichnung\"));\r",
									"pm.expect(jsonData.cvs[0].minimal).to.eql(pm.variables.get(\"cvMinimal\"));\r",
									"pm.expect(jsonData.cvs[0].maximal).to.eql(pm.variables.get(\"cvMaximal\"));\r",
									"pm.expect(jsonData.cvs[0].werkseinstellung).to.eql(pm.variables.get(\"cvValue\"));\r",
									"pm.expect(jsonData.cvs[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.cvs[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData.cvs[0]._links.add[0].href).to.eql(cvRoot);\r",
									"pm.expect(jsonData.cvs[0]._links.update[0].href).to.eql(cvUrl);\r",
									"pm.expect(jsonData.cvs[0]._links.delete[0].href).to.eql(cvUrl);\r",
									"pm.expect(jsonData.funktionen.length).to.eql(1);\r",
									"pm.expect(jsonData.funktionen[0].hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.funktionen[0].bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.funktionen[0].reihe).to.eql(pm.variables.get(\"fnReihe\"));\r",
									"pm.expect(jsonData.funktionen[0].funktion).to.eql(pm.variables.get(\"fnFunktion\"));\r",
									"pm.expect(jsonData.funktionen[0].bezeichnung).to.eql(pm.variables.get(\"fnBezeichnung\"));\r",
									"pm.expect(jsonData.funktionen[0].programmable).to.eql(pm.variables.get(\"fnProgrammable\"));\r",
									"pm.expect(jsonData.funktionen[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.funktionen[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData.funktionen[0]._links.add[0].href).to.eql(funktionRoot);\r",
									"pm.expect(jsonData.funktionen[0]._links.update[0].href).to.eql(funktionUrl);\r",
									"pm.expect(jsonData.funktionen[0]._links.delete[0].href).to.eql(funktionUrl);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"iMax\": {{iMax}},\n    \"protokoll\": \"{{protokoll}}\",\n    \"fahrstufe\": {{fahrstufe}},\n    \"gerausch\": false,\n    \"konfiguration\": \"{{konfiguration}}\",\n    \"stecker\": \"{{stecker}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8afac14-03f4-494f-8881-08d00ceb751c",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/decoderTyp/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"var adressRoot = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress\");\r",
									"var adressUrl = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{adIndex}}\");\r",
									"var cvRoot = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/cv\");\r",
									"var cvUrl = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/cv/{{cv}}\");\r",
									"var funktionRoot = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/funktion\");\r",
									"var funktionUrl = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/funktion/{{fnReihe}}/{{fnFunktion}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.iMax).to.eql(pm.variables.get(\"iMax\"));\r",
									"pm.expect(jsonData.protokoll).to.eql(pm.variables.get(\"protokoll\"));\r",
									"pm.expect(jsonData.fahrstufe).to.eql(pm.variables.get(\"fahrstufe\"));\r",
									"pm.expect(jsonData.gerausch).to.eql(pm.variables.get(\"gerausch\"));\r",
									"pm.expect(jsonData.konfiguration).to.eql(pm.variables.get(\"konfiguration\"));\r",
									"pm.expect(jsonData.stecker).to.eql(pm.variables.get(\"stecker\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.adressen.length).to.eql(1);\r",
									"pm.expect(jsonData.adressen[0].hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.adressen[0].bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.adressen[0].index).to.eql(pm.variables.get(\"adIndex\"));\r",
									"pm.expect(jsonData.adressen[0].bezeichnung).to.eql(pm.variables.get(\"adBezeichnung\"));\r",
									"pm.expect(jsonData.adressen[0].adressTyp).to.eql(pm.variables.get(\"adTyp\"));\r",
									"pm.expect(jsonData.adressen[0].span).to.eql(pm.variables.get(\"adSpan\"));\r",
									"pm.expect(jsonData.adressen[0].werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.adressen[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.adressen[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData.adressen[0]._links.add[0].href).to.eql(adressRoot);\r",
									"pm.expect(jsonData.adressen[0]._links.update[0].href).to.eql(adressUrl);\r",
									"pm.expect(jsonData.adressen[0]._links.delete[0].href).to.eql(adressUrl);\r",
									"pm.expect(jsonData.cvs.length).to.eql(1);\r",
									"pm.expect(jsonData.cvs[0].hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.cvs[0].bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.cvs[0].cv).to.eql(pm.variables.get(\"cv\"));\r",
									"pm.expect(jsonData.cvs[0].bezeichnung).to.eql(pm.variables.get(\"cvBezeichnung\"));\r",
									"pm.expect(jsonData.cvs[0].minimal).to.eql(pm.variables.get(\"cvMinimal\"));\r",
									"pm.expect(jsonData.cvs[0].maximal).to.eql(pm.variables.get(\"cvMaximal\"));\r",
									"pm.expect(jsonData.cvs[0].werkseinstellung).to.eql(pm.variables.get(\"cvValue\"));\r",
									"pm.expect(jsonData.cvs[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.cvs[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData.cvs[0]._links.add[0].href).to.eql(cvRoot);\r",
									"pm.expect(jsonData.cvs[0]._links.update[0].href).to.eql(cvUrl);\r",
									"pm.expect(jsonData.cvs[0]._links.delete[0].href).to.eql(cvUrl);\r",
									"pm.expect(jsonData.funktionen.length).to.eql(1);\r",
									"pm.expect(jsonData.funktionen[0].hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.funktionen[0].bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.funktionen[0].reihe).to.eql(pm.variables.get(\"fnReihe\"));\r",
									"pm.expect(jsonData.funktionen[0].funktion).to.eql(pm.variables.get(\"fnFunktion\"));\r",
									"pm.expect(jsonData.funktionen[0].bezeichnung).to.eql(pm.variables.get(\"fnBezeichnung\"));\r",
									"pm.expect(jsonData.funktionen[0].programmable).to.eql(pm.variables.get(\"fnProgrammable\"));\r",
									"pm.expect(jsonData.funktionen[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.funktionen[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData.funktionen[0]._links.add[0].href).to.eql(funktionRoot);\r",
									"pm.expect(jsonData.funktionen[0]._links.update[0].href).to.eql(funktionUrl);\r",
									"pm.expect(jsonData.funktionen[0]._links.delete[0].href).to.eql(funktionUrl);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Anleitungen",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2300cb97-3bf1-429e-afe1-52eb7a5d81c0",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoderTyp\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/decoderTyp/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"var adressRoot = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress\");\r",
									"var adressUrl = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{adIndex}}\");\r",
									"var cvRoot = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/cv\");\r",
									"var cvUrl = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/cv/{{cv}}\");\r",
									"var funktionRoot = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/funktion\");\r",
									"var funktionUrl = pm.variables.replaceIn(\"{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/funktion/{{fnReihe}}/{{fnFunktion}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.iMax).to.eql(pm.variables.get(\"iMax\"));\r",
									"pm.expect(jsonData.protokoll).to.eql(pm.variables.get(\"protokoll\"));\r",
									"pm.expect(jsonData.fahrstufe).to.eql(pm.variables.get(\"fahrstufe\"));\r",
									"pm.expect(jsonData.gerausch).to.eql(pm.variables.get(\"gerausch\"));\r",
									"pm.expect(jsonData.konfiguration).to.eql(pm.variables.get(\"konfiguration\"));\r",
									"pm.expect(jsonData.stecker).to.eql(pm.variables.get(\"stecker\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(undefined);\r",
									"pm.expect(jsonData.adressen.length).to.eql(1);\r",
									"pm.expect(jsonData.adressen[0].hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.adressen[0].bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.adressen[0].index).to.eql(pm.variables.get(\"adIndex\"));\r",
									"pm.expect(jsonData.adressen[0].bezeichnung).to.eql(pm.variables.get(\"adBezeichnung\"));\r",
									"pm.expect(jsonData.adressen[0].adressTyp).to.eql(pm.variables.get(\"adTyp\"));\r",
									"pm.expect(jsonData.adressen[0].span).to.eql(pm.variables.get(\"adSpan\"));\r",
									"pm.expect(jsonData.adressen[0].werkseinstellung).to.eql(pm.variables.get(\"adress\"));\r",
									"pm.expect(jsonData.adressen[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.adressen[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData.adressen[0]._links.add[0].href).to.eql(adressRoot);\r",
									"pm.expect(jsonData.adressen[0]._links.update[0].href).to.eql(adressUrl);\r",
									"pm.expect(jsonData.adressen[0]._links.delete[0].href).to.eql(adressUrl);\r",
									"pm.expect(jsonData.cvs.length).to.eql(1);\r",
									"pm.expect(jsonData.cvs[0].hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.cvs[0].bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.cvs[0].cv).to.eql(pm.variables.get(\"cv\"));\r",
									"pm.expect(jsonData.cvs[0].bezeichnung).to.eql(pm.variables.get(\"cvBezeichnung\"));\r",
									"pm.expect(jsonData.cvs[0].minimal).to.eql(pm.variables.get(\"cvMinimal\"));\r",
									"pm.expect(jsonData.cvs[0].maximal).to.eql(pm.variables.get(\"cvMaximal\"));\r",
									"pm.expect(jsonData.cvs[0].werkseinstellung).to.eql(pm.variables.get(\"cvValue\"));\r",
									"pm.expect(jsonData.cvs[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.cvs[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData.cvs[0]._links.add[0].href).to.eql(cvRoot);\r",
									"pm.expect(jsonData.cvs[0]._links.update[0].href).to.eql(cvUrl);\r",
									"pm.expect(jsonData.cvs[0]._links.delete[0].href).to.eql(cvUrl);\r",
									"pm.expect(jsonData.funktionen.length).to.eql(1);\r",
									"pm.expect(jsonData.funktionen[0].hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.funktionen[0].bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.funktionen[0].reihe).to.eql(pm.variables.get(\"fnReihe\"));\r",
									"pm.expect(jsonData.funktionen[0].funktion).to.eql(pm.variables.get(\"fnFunktion\"));\r",
									"pm.expect(jsonData.funktionen[0].bezeichnung).to.eql(pm.variables.get(\"fnBezeichnung\"));\r",
									"pm.expect(jsonData.funktionen[0].programmable).to.eql(pm.variables.get(\"fnProgrammable\"));\r",
									"pm.expect(jsonData.funktionen[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.funktionen[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData.funktionen[0]._links.add[0].href).to.eql(funktionRoot);\r",
									"pm.expect(jsonData.funktionen[0]._links.update[0].href).to.eql(funktionUrl);\r",
									"pm.expect(jsonData.funktionen[0]._links.delete[0].href).to.eql(funktionUrl);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/anleitungen",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{hersteller}}",
								"{{bestellNr}}",
								"anleitungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Adress",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40b0d961-7c3a-42aa-aea6-d1d9fbe60685",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/adress/{{adIndex}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{hersteller}}",
								"{{bestellNr}}",
								"adress",
								"{{adIndex}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete CV",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ac25060-a5e5-46e6-8518-1c74c8686e98",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/cv/{{cv}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{hersteller}}",
								"{{bestellNr}}",
								"cv",
								"{{cv}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Funktion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31ec22d3-ac0e-4634-88eb-18b10cd0d657",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}/funktion/{{fnReihe}}/{{fnFunktion}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{hersteller}}",
								"{{bestellNr}}",
								"funktion",
								"{{fnReihe}}",
								"{{fnFunktion}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cf0a14b-a555-4c80-bba3-bad964d2ce1a",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Produkt",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b06453f0-2ee6-49d8-a3c9-24f59e6b9861",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.produkt.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.hersteller + \"/\" + a.bestellNr;\r",
									"    pm.expect(a.hersteller).to.exist;\r",
									"    pm.expect(a.bestellNr).to.exist;\r",
									"    pm.expect(a.kategorie).to.exist;\r",
									"    pm.expect(a.unterKategorie).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.produkt.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.produkt.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/produkt",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f8840ad4-c976-4afd-98de-af6033c92d5e",
								"exec": [
									"pm.environment.set(\"hersteller\", pm.variables.get(\"herstellerAdd\"));\r",
									"pm.environment.set(\"bestellNr\", pm.variables.replaceIn(\"{{$randomAbbreviation}}{{$randomInt}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"kategorie\", pm.variables.get(\"kategorieAdd\"));\r",
									"pm.environment.set(\"unterKategorie\", pm.variables.get(\"unterKategorieAdd\"));\r",
									"pm.environment.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"massstab\", pm.variables.get(\"massstabAdd\"));\r",
									"pm.environment.set(\"spurweite\", pm.variables.get(\"spurweiteAdd\"));\r",
									"pm.environment.set(\"epoch\", pm.variables.get(\"epochAdd\"));\r",
									"pm.environment.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungAdd\"));\r",
									"pm.environment.set(\"gattung\", pm.variables.get(\"gattungAdd\"));\r",
									"pm.environment.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.environment.set(\"bauzeit\", new Date(pm.variables.replaceIn(\"{{$randomDatePast}}\")).toISOString().substring(0,10));\r",
									"pm.environment.set(\"achsfolg\", pm.variables.get(\"achsfolgAdd\"));\r",
									"pm.environment.set(\"sondermodell\", pm.variables.get(\"sondermodellAdd\"));\r",
									"pm.environment.set(\"aufbau\", pm.variables.get(\"aufbauAdd\"));\r",
									"pm.environment.set(\"licht\", pm.variables.get(\"lichtAdd\"));\r",
									"pm.environment.set(\"kupplung\", pm.variables.get(\"kupplungAdd\"));\r",
									"pm.environment.set(\"steuerung\", pm.variables.get(\"steuerungAdd\"));\r",
									"pm.environment.set(\"decoderHersteller\", pm.variables.get(\"decoderHerstellerAdd\"));\r",
									"pm.environment.set(\"decoderBestellNr\", pm.variables.get(\"decoderBestellNrAdd\"));\r",
									"pm.environment.set(\"motorTyp\", pm.variables.get(\"motorTypAdd\"));\r",
									"pm.environment.set(\"anmerkung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "20f8e6f8-50af-40bb-9787-6a319b22ed7c",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderHersteller).to.eql(pm.variables.get(\"decoderHersteller\"));\r",
									"pm.expect(jsonData.decoderBestellNr).to.eql(pm.variables.get(\"decoderBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(undefined);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(undefined);\r",
									"pm.expect(jsonData.teilen.length).to.eql(0);\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n    \"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"lange\": \"{{lange}}\",\n    \"massstab\": \"{{massstab}}\",\n    \"spurweite\": \"{{spurweite}}\",\n    \"epoch\": \"{{epoch}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"gattung\": \"{{gattung}}\",\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"bauzeit\": \"{{bauzeit}}\",\n    \"achsfolg\": \"{{achsfolg}}\",\n    \"sondermodell\": \"{{sondermodell}}\",\n    \"aufbau\": \"{{aufbau}}\",\n    \"licht\": \"{{licht}}\",\n    \"kupplung\": \"{{kupplung}}\",\n    \"steuerung\": \"{{steuerung}}\",\n    \"decoderHersteller\": \"{{decoderHersteller}}\",\n    \"decoderBestellNr\": \"{{decoderBestellNr}}\",\n    \"motorTyp\": \"{{motorTyp}}\",\n    \"anmerkung\": \"{{anmerkung}}\",\n    \"anleitungen\": \"{{anleitungen}}\",\n    \"explosionszeichnung\": \"{{explosionszeichnung}}\",\n    \"teilen\": [],\n    \"abbildung\": \"{{abbildung}}\",\n    \"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/produkt",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69e700a0-c5df-473e-9de9-e34846342032",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderHersteller).to.eql(pm.variables.get(\"decoderHersteller\"));\r",
									"pm.expect(jsonData.decoderBestellNr).to.eql(pm.variables.get(\"decoderBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(undefined);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(undefined);\r",
									"pm.expect(jsonData.teilen.length).to.eql(0);\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Anleitungen",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "220d528c-abfb-47b6-9f04-172e9dff97bd",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung.jpg\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(undefined);\r",
									"pm.expect(jsonData.teilen.length).to.eql(0);\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "anleitungen",
									"type": "file",
									"src": "{{anleitungFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"anleitungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Explosionszeichnung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc0521a6-ee73-45c8-bae2-e1e23da69f89",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung.jpg\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"var explosionszeichnung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(explosionszeichnung);\r",
									"pm.expect(jsonData.teilen.length).to.eql(0);\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "explosionszeichnung",
									"type": "file",
									"src": "{{explosionszeichnungFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"explosionszeichnung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Teil",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ec52a7a9-6ce6-4c72-aae0-fe40f2dcf47a",
								"exec": [
									"pm.environment.set(\"teilHersteller\", pm.variables.get(\"teilHerstellerAdd\"));\r",
									"pm.environment.set(\"teilBestellNr\", pm.variables.get(\"teilBestellNrAdd\"));\r",
									"pm.environment.set(\"teilBezeichnung\", pm.variables.get(\"teilBezeichnungAdd\"));\r",
									"pm.environment.set(\"teilKategorie\", pm.variables.get(\"teilKategorieAdd\"));\r",
									"pm.environment.set(\"teilUnterKategorie\", pm.variables.get(\"teilUnterKategorieAdd\"));\r",
									"pm.environment.set(\"teilAnzahl\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "28014a2c-60f9-4897-a59e-2770c6e98079",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var parent = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen/{{teilHersteller}}/{{teilBestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.teilHersteller).to.eql(pm.variables.get(\"teilHersteller\"));\r",
									"pm.expect(jsonData.teilBestellNr).to.eql(pm.variables.get(\"teilBestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"teilBezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"teilKategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"teilUnterKategorie\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"teilAnzahl\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(parent);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n    \"teilHersteller\": \"{{teilHersteller}}\",\n    \"teilBestellNr\": \"{{teilBestellNr}}\",\n    \"bezeichnung\": \"{{teilBezeichnung}}\",\n    \"kategorie\": \"{{teilKategorie}}\",\n    \"unterKategorie\": \"{{teilUnterKategorie}}\",\n    \"anzahl\": {{teilAnzahl}},\n    \"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"teilen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Teil",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "238a1bec-cd64-4690-94b6-1ffda706db28",
								"exec": [
									"pm.environment.set(\"teilAnzahl\", new Number(pm.variables.replaceIn(\"{{$randomInt}}\")));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a476d3e2-0445-4f2b-9078-dca2c2e329b9",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var parent = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen/{{teilHersteller}}/{{teilBestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.teilHersteller).to.eql(pm.variables.get(\"teilHersteller\"));\r",
									"pm.expect(jsonData.teilBestellNr).to.eql(pm.variables.get(\"teilBestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"teilBezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"teilKategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"teilUnterKategorie\"));\r",
									"pm.expect(jsonData.anzahl).to.eql(pm.variables.get(\"teilAnzahl\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(parent);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen/{{teilHersteller}}/{{teilBestellNr}}?anzahl={{teilAnzahl}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"teilen",
								"{{teilHersteller}}",
								"{{teilBestellNr}}"
							],
							"query": [
								{
									"key": "anzahl",
									"value": "{{teilAnzahl}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "db4b9aed-a85e-4690-a285-b92c0a9666b3",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"kategorie\", pm.variables.get(\"kategorieUpdate\"));\r",
									"pm.environment.set(\"unterKategorie\", pm.variables.get(\"unterKategorieUpdate\"));\r",
									"pm.environment.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"massstab\", pm.variables.get(\"massstabUpdate\"));\r",
									"pm.environment.set(\"spurweite\", pm.variables.get(\"spurweiteUpdate\"));\r",
									"pm.environment.set(\"epoch\", pm.variables.get(\"epochUpdate\"));\r",
									"pm.environment.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungUpdate\"));\r",
									"pm.environment.set(\"gattung\", pm.variables.get(\"gattungUpdate\"));\r",
									"pm.environment.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.environment.set(\"bauzeit\", new Date(pm.variables.replaceIn(\"{{$randomDatePast}}\")).toISOString().substring(0,10));\r",
									"pm.environment.set(\"achsfolg\", pm.variables.get(\"achsfolgUpdate\"));\r",
									"pm.environment.set(\"sondermodell\", pm.variables.get(\"sondermodellUpdate\"));\r",
									"pm.environment.set(\"aufbau\", pm.variables.get(\"aufbauUpdate\"));\r",
									"pm.environment.set(\"licht\", pm.variables.get(\"lichtUpdate\"));\r",
									"pm.environment.set(\"kupplung\", pm.variables.get(\"kupplungUpdate\"));\r",
									"pm.environment.set(\"steuerung\", pm.variables.get(\"steuerungUpdate\"));\r",
									"pm.environment.set(\"decoderHersteller\", pm.variables.get(\"decoderHerstellerUpdate\"));\r",
									"pm.environment.set(\"decoderBestellNr\", pm.variables.get(\"decoderBestellNrUpdate\"));\r",
									"pm.environment.set(\"motorTyp\", pm.variables.get(\"motorTypUpdate\"));\r",
									"pm.environment.set(\"anmerkung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "474e8d1b-b3dc-463e-ad9b-a3bc60cf960f",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung.jpg\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"var explosionszeichnung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung.pdf\");\r",
									"var teilRoot = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen\");\r",
									"var teilUrl = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen/{{teilHersteller}}/{{teilBestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(explosionszeichnung);\r",
									"pm.expect(jsonData.teilen.length).to.eql(1);\r",
									"pm.expect(jsonData.teilen[0].hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.teilen[0].bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.teilen[0].teilHersteller).to.eql(pm.variables.get(\"teilHersteller\"));\r",
									"pm.expect(jsonData.teilen[0].teilBestellNr).to.eql(pm.variables.get(\"teilBestellNr\"));\r",
									"pm.expect(jsonData.teilen[0].bezeichnung).to.eql(pm.variables.get(\"teilBezeichnung\"));\r",
									"pm.expect(jsonData.teilen[0].kategorie).to.eql(pm.variables.get(\"teilKategorie\"));\r",
									"pm.expect(jsonData.teilen[0].unterKategorie).to.eql(pm.variables.get(\"teilUnterKategorie\"));\r",
									"pm.expect(jsonData.teilen[0].anzahl).to.eql(pm.variables.get(\"teilAnzahl\"));\r",
									"pm.expect(jsonData.teilen[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.teilen[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData.teilen[0]._links.add[0].href).to.eql(teilRoot);\r",
									"pm.expect(jsonData.teilen[0]._links.update[0].href).to.eql(teilUrl);\r",
									"pm.expect(jsonData.teilen[0]._links.delete[0].href).to.eql(teilUrl);\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n    \"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"lange\": \"{{lange}}\",\n    \"massstab\": \"{{massstab}}\",\n    \"spurweite\": \"{{spurweite}}\",\n    \"epoch\": \"{{epoch}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"gattung\": \"{{gattung}}\",\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"bauzeit\": \"{{bauzeit}}\",\n    \"achsfolg\": \"{{achsfolg}}\",\n    \"sondermodell\": \"{{sondermodell}}\",\n    \"aufbau\": \"{{aufbau}}\",\n    \"licht\": \"{{licht}}\",\n    \"kupplung\": \"{{kupplung}}\",\n    \"steuerung\": \"{{steuerung}}\",\n    \"decoderTypHersteller\": \"{{decoderHersteller}}\",\n    \"decoderTypBestellNr\": \"{{decoderBestellNr}}\",\n    \"motorTyp\": \"{{motorTyp}}\",\n    \"anmerkung\": \"{{anmerkung}}\",\n    \"anleitungen\": \"{{anleitungen}}\",\n    \"explosionszeichnung\": \"{{explosionszeichnung}}\",\n    \"teilen\": [],\n    \"abbildung\": \"{{abbildung}}\",\n    \"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8729a3b8-585d-4719-9a57-46dd1cf320cc",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung.jpg\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"var explosionszeichnung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung.pdf\");\r",
									"var teilRoot = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen\");\r",
									"var teilUrl = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen/{{teilHersteller}}/{{teilBestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(explosionszeichnung);\r",
									"pm.expect(jsonData.teilen.length).to.eql(1);\r",
									"pm.expect(jsonData.teilen[0].hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.teilen[0].bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.teilen[0].teilHersteller).to.eql(pm.variables.get(\"teilHersteller\"));\r",
									"pm.expect(jsonData.teilen[0].teilBestellNr).to.eql(pm.variables.get(\"teilBestellNr\"));\r",
									"pm.expect(jsonData.teilen[0].bezeichnung).to.eql(pm.variables.get(\"teilBezeichnung\"));\r",
									"pm.expect(jsonData.teilen[0].kategorie).to.eql(pm.variables.get(\"teilKategorie\"));\r",
									"pm.expect(jsonData.teilen[0].unterKategorie).to.eql(pm.variables.get(\"teilUnterKategorie\"));\r",
									"pm.expect(jsonData.teilen[0].anzahl).to.eql(pm.variables.get(\"teilAnzahl\"));\r",
									"pm.expect(jsonData.teilen[0].deleted).to.be.false;\r",
									"pm.expect(jsonData.teilen[0]._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData.teilen[0]._links.add[0].href).to.eql(teilRoot);\r",
									"pm.expect(jsonData.teilen[0]._links.update[0].href).to.eql(teilUrl);\r",
									"pm.expect(jsonData.teilen[0]._links.delete[0].href).to.eql(teilUrl);\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Teil",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99fa9afb-5f22-4b8c-b5ae-7251774b42c7",
								"exec": [
									"pm.response.to.have.status(204);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen/{{teilHersteller}}/{{teilBestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"teilen",
								"{{teilHersteller}}",
								"{{teilBestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1015c1b6-e53d-4464-8402-0d851c518465",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var anleitungen = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen.pdf\");\r",
									"var explosionszeichnung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(anleitungen);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(explosionszeichnung);\r",
									"pm.expect(jsonData.teilen.length).to.eql(0);\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Anleitungen",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2455494a-5bb4-4ef4-a393-a0c38ded6846",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"var explosionszeichnung = pm.variables.replaceIn(\"{{server}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung.pdf\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(undefined);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(explosionszeichnung);\r",
									"pm.expect(jsonData.teilen.length).to.eql(0);\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"anleitungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Explosionszeichnung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e56a81c-92e8-4440-8d00-8d1106629ab0",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/produkt\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/produkt/{{hersteller}}/{{bestellNr}}\");\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.bauzeit).to.eql(pm.variables.get(\"bauzeit\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoderTypHersteller).to.eql(pm.variables.get(\"decoderTypHersteller\"));\r",
									"pm.expect(jsonData.decoderTypBestellNr).to.eql(pm.variables.get(\"decoderTypBestellNr\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(undefined);\r",
									"pm.expect(jsonData.explosionszeichnung).to.eql(undefined);\r",
									"pm.expect(jsonData.teilen.length).to.eql(0);\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"explosionszeichnung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d63dab04-bc1a-4b5e-877c-125ffd97dba7",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Decoder",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "62d5d70b-cb5f-4f90-b607-40c708c93e64",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoder\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.decoder.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.decoderId;\r",
									"    var add = root + \"/\" + a.hersteller + \"/\" + a.bestellNr;\r",
									"    pm.expect(a.decoderId).to.exist;\r",
									"    pm.expect(a.hersteller).to.exist;\r",
									"    pm.expect(a.bestellNr).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.protokoll).to.exist;\r",
									"    pm.expect(a.gerausch).to.exist;\r",
									"    pm.expect(a.konfiguration).to.exist;\r",
									"    pm.expect(a.stecker).to.exist;\r",
									"    pm.expect(a.status).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(add);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.decoder.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.decoder.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/decoder",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fbc8825c-39f7-40a6-861b-b055749fb3e9",
								"exec": [
									"pm.environment.set(\"hersteller\", pm.variables.get(\"decoderHerstellerAdd\"));\r",
									"pm.environment.set(\"bestellNr\", pm.variables.get(\"decoderBestellNrAdd\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.get(\"decoderBezeichnungAdd\"));\r",
									"pm.environment.set(\"iMax\", new Number(pm.variables.get(\"iMaxAdd\")));\r",
									"pm.environment.set(\"protokoll\", pm.variables.get(\"protokollAdd\"));\r",
									"pm.environment.set(\"fahrstufe\", new Number(pm.variables.get(\"fahrstufeAdd\")));\r",
									"pm.environment.set(\"sound\", new Boolean(\"true\"));\r",
									"pm.environment.set(\"konfiguration\", pm.variables.get(\"konfigurationAdd\"));\r",
									"pm.environment.set(\"stecker\", pm.variables.get(\"steckerAdd\"));\r",
									"pm.environment.set(\"status\", pm.variables.get(\"statusAdd\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a0442aab-3412-46da-a4be-540b02da9b8f",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoder\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoder/{{decoderId}}\");\r",
									"pm.expect(jsonData.decoderId).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.iMax).to.eql(pm.variables.get(\"iMax\"));\r",
									"pm.expect(jsonData.protokoll).to.eql(pm.variables.get(\"protokoll\"));\r",
									"pm.expect(jsonData.fahrstufe).to.eql(pm.variables.get(\"fahrstufe\"));\r",
									"pm.expect(jsonData.sound).to.eql(pm.variables.get(\"sound\"));\r",
									"pm.expect(jsonData.konfiguration).to.eql(pm.variables.get(\"konfiguration\"));\r",
									"pm.expect(jsonData.stecker).to.eql(pm.variables.get(\"stecker\"));\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.anleitungen).to.eql(pm.variables.get(\"anleitungen\"));\r",
									"pm.expect(jsonData.adressen).to.eql(pm.variables.get(\"adressen\"));\r",
									"pm.expect(jsonData.cvs).to.eql(pm.variables.get(\"cvs\"));\r",
									"pm.expect(jsonData.funktionen).to.eql(pm.variables.get(\"funktionen\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Adress",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}/adress/{{index}}?adress={{adress}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}",
								"adress",
								"{{index}}"
							],
							"query": [
								{
									"key": "adress",
									"value": "{{adress}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update CV",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}/cv/{{cv}}?wert={{wert}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}",
								"cv",
								"{{cv}}"
							],
							"query": [
								{
									"key": "wert",
									"value": "{{wert}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Funktion",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}/funktion/{{funktion}}/{{reihe}}?bezeichnung={{bezeichnung}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}",
								"funktion",
								"{{funktion}}",
								"{{reihe}}"
							],
							"query": [
								{
									"key": "bezeichnung",
									"value": "{{bezeichnung}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9e5a6784-5f60-468d-8a05-535bcb4e5076",
								"exec": [
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "653d79ba-8c92-416c-bc1d-011a92daeaa8",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoder\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoder/{{decoderId}}\");\r",
									"pm.expect(jsonData.decoderId).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"decoderId\": \"{{decoderId}}\",\n    \"hersteller\": \"{{decoderHersteller}}\",\n    \"bestellNr\": \"{{decoderBestellNr}}\",\n    \"protokoll\": \"MFX\",\n    \"status\": \"INSTALIERT\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a51ceb13-13b7-4f41-8496-41e4f15a59bb",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/decoder\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/decoder/{{decoderId}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ce0996e5-65c5-4ef3-b45d-ef42f209796f",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Artikel",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43f88378-8868-45bf-94ad-69b87f7b5670",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.artikel.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.artikelId;\r",
									"    pm.expect(a.artikelId).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.artikel.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.artikel.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/artikel",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "02fcffc1-8883-4dd6-969b-5938d817cc80",
								"exec": [
									"pm.environment.set(\"hersteller\", pm.variables.get(\"herstellerAdd\"));\r",
									"pm.environment.set(\"bestellNr\", pm.variables.get(\"bestellNr\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"kategorie\", pm.variables.get(\"kategorieAdd\"));\r",
									"pm.environment.set(\"unterKategorie\", pm.variables.get(\"unterKategorieAdd\"));\r",
									"pm.environment.set(\"lange\", Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"massstab\", pm.variables.get(\"massstabAdd\"));\r",
									"pm.environment.set(\"spurweite\", pm.variables.get(\"spurweiteAdd\"));\r",
									"pm.environment.set(\"epoch\", pm.variables.get(\"epochAdd\"));\r",
									"pm.environment.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungAdd\"));\r",
									"pm.environment.set(\"gattung\", pm.variables.get(\"gattungAdd\"));\r",
									"pm.environment.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.environment.set(\"achsfolg\", pm.variables.get(\"achsfolgAdd\"));\r",
									"pm.environment.set(\"sondermodell\", pm.variables.get(\"sondermodellAdd\"));\r",
									"pm.environment.set(\"aufbau\", pm.variables.get(\"aufbauAdd\"));\r",
									"pm.environment.set(\"licht\", pm.variables.get(\"lichtAdd\"));\r",
									"pm.environment.set(\"kupplung\", pm.variables.get(\"kupplungAdd\"));\r",
									"pm.environment.set(\"steuerung\", pm.variables.get(\"steuerungAdd\"));\r",
									"pm.environment.set(\"decoder\", pm.variables.get(\"decoderAdd\"));\r",
									"pm.environment.set(\"motorTyp\", pm.variables.get(\"motorTypAdd\"));\r",
									"pm.environment.set(\"kaufdatum\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.environment.set(\"wahrung\", pm.variables.replaceIn(\"{{$randomCurrencyCode}}\"));\r",
									"pm.environment.set(\"preis\", Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"stuck\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"verbleibende\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"anmerkung\", pm.variables.replaceIn(\"{{$randomCatchPhrase}}\"));\r",
									"pm.environment.set(\"beladung\", pm.variables.replaceIn(\"{{$randomProductMaterial}}\"));\r",
									"pm.environment.set(\"status\", \"GEKAUFT\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2ca36f67-1fda-4fc4-bcf2-5d034db13e49",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var artikelId = jsonData.artikelId;\r",
									"pm.environment.set(\"artikelId\", artikelId);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoder\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung).to.eql(undefined);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"lange\": {{lange}},\n    \"massstab\": \"{{massstab}}\",\n    \"spurweite\": \"{{spurweite}}\",\n    \"epoch\": \"{{epoch}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"gattung\": \"{{gattung}}\",\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"achsfolg\": \"{{achsfolg}}\",\n    \"sondermodell\": \"{{sondermodell}}\",\n    \"aufbau\": \"{{aufbau}}\",\n    \"licht\": \"{{licht}}\",\n    \"kupplung\": \"{{kupplung}}\",\n    \"steuerung\": \"{{steuerung}}\",\n    \"decoder\": \"{{decoder}}\",\n    \"motorTyp\": \"{{motorTyp}}\",\n    \"kaufdatum\": \"{{kaufdatum}}\",\n    \"wahrung\": \"{{wahrung}}\",\n    \"preis\": {{preis}},\n    \"stuck\": {{stuck}},\n    \"verbleibende\": {{verbleibende}},\n    \"anmerkung\": \"{{anmerkung}}\",\n    \"beladung\": \"{{beladung}}\",\n    \"status\": \"{{status}}\",\n    \"deleted\": false\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/artikel",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1549dec4-4974-4532-812c-ab3765d70b1b",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var artikelId = jsonData.artikelId;\r",
									"pm.environment.set(\"artikelId\", artikelId);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{root}}/artikel/{{artikelId}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung).to.eql(undefined);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "abbildung",
									"type": "file",
									"src": "{{imageFile}}"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Anderung",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "40b14215-fa67-4d41-b357-116b3de4ed51",
								"exec": [
									"pm.environment.set(\"anderungId\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"anderungsDatum\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.environment.set(\"anderungsTyp\", \"UMGEBAUT\");\r",
									"pm.environment.set(\"anderungStuck\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"anderung\", pm.variables.replaceIn(\"{{$randomLoremParagraph}}\"));\r",
									"pm.environment.set(\"status\", \"GEKAUFT\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4acab674-f268-49e0-842e-f32db271d8da",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.anderungId).to.eql(pm.variables.get(\"anderungId\"));\r",
									"pm.expect(jsonData.anderungsDatum).to.eql(pm.variables.get(\"anderungsDatum\"));\r",
									"pm.expect(jsonData.anderungsTyp).to.eql(pm.variables.get(\"anderungsTyp\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"anderung\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"anderungStuck\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"artikelId\": \"{{artikelId}}\",\n\t\"anderungId\": \"{{anderungId}}\",\n    \"anderungsDatum\": \"{{anderungsDatum}}\",\n    \"anderungsTyp\": \"{{anderungsTyp}}\",\n    \"bezeichnung\": \"{{anderung}}\",\n    \"stuck\": {{anderungStuck}},\n    \"anmerkung\": \"{{anmerkung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/anderung",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"anderung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Anderung",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8199f5d3-67c4-415d-b404-46545dac9ec7",
								"exec": [
									"pm.environment.set(\"anderungsDatum\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.environment.set(\"anderungsTyp\", \"REPARIERT\");\r",
									"pm.environment.set(\"anderungStuck\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"anderung\", pm.variables.replaceIn(\"{{$randomLoremParagraph}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e10a1417-b2e8-4541-a28d-e63d17d9c1de",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.anderungId).to.eql(pm.variables.get(\"anderungId\"));\r",
									"pm.expect(jsonData.anderungsDatum).to.eql(pm.variables.get(\"anderungsDatum\"));\r",
									"pm.expect(jsonData.anderungsTyp).to.eql(pm.variables.get(\"anderungsTyp\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"anderung\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"anderungStuck\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.parent[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"artikelId\": \"{{artikelId}}\",\n\t\"anderungId\": \"{{anderungId}}\",\n    \"anderungsDatum\": \"{{anderungsDatum}}\",\n    \"anderungsTyp\": \"{{anderungsTyp}}\",\n    \"bezeichnung\": \"{{anderung}}\",\n    \"stuck\": {{anderungStuck}},\n    \"anmerkung\": \"{{anmerkung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/anderung/{{anderungId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"anderung",
								"{{anderungId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e77b5fd2-c225-4fb2-a06b-84455f05fbaf",
								"exec": [
									"pm.environment.set(\"hersteller\", pm.variables.get(\"herstellerUpdate\"));\r",
									"pm.environment.set(\"bestellNr\", pm.variables.get(\"bestellNr\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"kategorie\", pm.variables.get(\"kategorieUpdate\"));\r",
									"pm.environment.set(\"unterKategorie\", pm.variables.get(\"unterKategorieUpdate\"));\r",
									"pm.environment.set(\"lange\", Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"massstab\", pm.variables.get(\"massstabUpdate\"));\r",
									"pm.environment.set(\"spurweite\", pm.variables.get(\"spurweiteUpdate\"));\r",
									"pm.environment.set(\"epoch\", pm.variables.get(\"epochUpdate\"));\r",
									"pm.environment.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungUpdate\"));\r",
									"pm.environment.set(\"gattung\", pm.variables.get(\"gattungUpdate\"));\r",
									"pm.environment.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));\r",
									"pm.environment.set(\"achsfolg\", pm.variables.get(\"achsfolgUpdate\"));\r",
									"pm.environment.set(\"sondermodell\", pm.variables.get(\"sondermodellUpdate\"));\r",
									"pm.environment.set(\"aufbau\", pm.variables.get(\"aufbauUpdate\"));\r",
									"pm.environment.set(\"licht\", pm.variables.get(\"lichtUpdate\"));\r",
									"pm.environment.set(\"kupplung\", pm.variables.get(\"kupplungUpdate\"));\r",
									"pm.environment.set(\"steuerung\", pm.variables.get(\"steuerungUpdate\"));\r",
									"pm.environment.set(\"decoder\", pm.variables.get(\"decoderUpdate\"));\r",
									"pm.environment.set(\"motorTyp\", pm.variables.get(\"motorTypUpdate\"));\r",
									"pm.environment.set(\"kaufdatum\", new Date(pm.variables.replaceIn(\"{{$randomDateRecent}}\")).toISOString().substring(0,10));\r",
									"pm.environment.set(\"wahrung\", pm.variables.replaceIn(\"{{$randomCurrencyCode}}\"));\r",
									"pm.environment.set(\"preis\", Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"stuck\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"verbleibende\", Number(pm.variables.replaceIn(\"{{$randomInt}}\")));\r",
									"pm.environment.set(\"anmerkung\", pm.variables.replaceIn(\"{{$randomCatchPhrase}}\"));\r",
									"pm.environment.set(\"beladung\", pm.variables.replaceIn(\"{{$randomProductMaterial}}\"));\r",
									"pm.environment.set(\"status\", \"BASTLER\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d92b8f17-ef5b-4009-a654-cb0fcd4e141a",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{root}}/artikel/{{artikelId}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung.size).to.eql(1);\r",
									"pm.expect(jsonData.anderung[0].artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungId).to.eql(pm.variables.get(\"anderungId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsDatum).to.eql(pm.variables.get(\"anderungsDatum\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsTyp).to.eql(pm.variables.get(\"anderungsTyp\"));\r",
									"pm.expect(jsonData.anderung[0].bezeichnung).to.eql(pm.variables.get(\"anderung\"));\r",
									"pm.expect(jsonData.anderung[0].stuck).to.eql(pm.variables.get(\"anderungStuck\"));\r",
									"pm.expect(jsonData.anderung[0].anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anderung[0].deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"artikelId\": \"{{artikelId}}\",\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"{{kategorie}}\",\n    \"unterKategorie\": \"{{unterKategorie}}\",\n    \"lange\": {{lange}},\n    \"massstab\": \"{{massstab}}\",\n    \"spurweite\": \"{{spurweite}}\",\n    \"epoch\": \"{{epoch}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"gattung\": \"{{gattung}}\",\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"achsfolg\": \"{{achsfolg}}\",\n    \"sondermodell\": \"{{sondermodell}}\",\n    \"aufbau\": \"{{aufbau}}\",\n    \"licht\": \"{{licht}}\",\n    \"kupplung\": \"{{kupplung}}\",\n    \"steuerung\": \"{{steuerung}}\",\n    \"decoder\": \"{{decoder}}\",\n    \"motorTyp\": \"{{motorTyp}}\",\n    \"kaufdatum\": \"{{kaufdatum}}\",\n    \"wahrung\": \"{{wahrung}}\",\n    \"preis\": {{preis}},\n    \"stuck\": {{stuck}},\n    \"verbleibende\": {{verbleibende}},\n    \"anmerkung\": \"{{anmerkung}}\",\n    \"beladung\": \"{{beladung}}\",\n    \"status\": \"{{status}}\",\n    \"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "545eb3d7-4259-44f1-8a00-908ae6f927fc",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"var abbildung = pm.variables.replaceIn(\"{{server}}/artikel/{{artikelId}}/abbildung.jpg\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(abbildung);\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung[0].artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungId).to.eql(pm.variables.get(\"anderungId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsDatum).to.eql(pm.variables.get(\"anderungsDatum\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsTyp).to.eql(pm.variables.get(\"anderungsTyp\"));\r",
									"pm.expect(jsonData.anderung[0].bezeichnung).to.eql(pm.variables.get(\"anderung\"));\r",
									"pm.expect(jsonData.anderung[0].stuck).to.eql(pm.variables.get(\"anderungStuck\"));\r",
									"pm.expect(jsonData.anderung[0].anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anderung[0].deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b71f478-d75f-4a65-8b46-440d8076f43f",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung[0].artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungId).to.eql(pm.variables.get(\"anderungId\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsDatum).to.eql(pm.variables.get(\"anderungsDatum\"));\r",
									"pm.expect(jsonData.anderung[0].anderungsTyp).to.eql(pm.variables.get(\"anderungsTyp\"));\r",
									"pm.expect(jsonData.anderung[0].bezeichnung).to.eql(pm.variables.get(\"anderung\"));\r",
									"pm.expect(jsonData.anderung[0].stuck).to.eql(pm.variables.get(\"anderungStuck\"));\r",
									"pm.expect(jsonData.anderung[0].anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.anderung[0].deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Anderung",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f87ae85-409d-4f1d-bd3e-cabc2e880501",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var root = pm.variables.replaceIn(\"{{api}}/artikel\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/artikel/{{artikelId}}\");\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.kategorie).to.eql(pm.variables.get(\"kategorie\"));\r",
									"pm.expect(jsonData.unterKategorie).to.eql(pm.variables.get(\"unterKategorie\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.massstab).to.eql(pm.variables.get(\"massstab\"));\r",
									"pm.expect(jsonData.spurweite).to.eql(pm.variables.get(\"spurweite\"));\r",
									"pm.expect(jsonData.epoch).to.eql(pm.variables.get(\"epoch\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.achsfolg).to.eql(pm.variables.get(\"achsfolg\"));\r",
									"pm.expect(jsonData.sondermodell).to.eql(pm.variables.get(\"sondermodell\"));\r",
									"pm.expect(jsonData.aufbau).to.eql(pm.variables.get(\"aufbau\"));\r",
									"pm.expect(jsonData.licht).to.eql(pm.variables.get(\"licht\"));\r",
									"pm.expect(jsonData.kupplung).to.eql(pm.variables.get(\"kupplung\"));\r",
									"pm.expect(jsonData.steuerung).to.eql(pm.variables.get(\"steuerung\"));\r",
									"pm.expect(jsonData.decoder).to.eql(pm.variables.get(\"decoderId\"));\r",
									"pm.expect(jsonData.motorTyp).to.eql(pm.variables.get(\"motorTyp\"));\r",
									"pm.expect(jsonData.kaufdatum).to.eql(pm.variables.get(\"kaufdatum\"));\r",
									"pm.expect(jsonData.wahrung).to.eql(pm.variables.get(\"wahrung\"));\r",
									"pm.expect(jsonData.preis).to.eql(pm.variables.get(\"preis\"));\r",
									"pm.expect(jsonData.stuck).to.eql(pm.variables.get(\"stuck\"));\r",
									"pm.expect(jsonData.verbleibende).to.eql(pm.variables.get(\"verbleibende\"));\r",
									"pm.expect(jsonData.anmerkung).to.eql(pm.variables.get(\"anmerkung\"));\r",
									"pm.expect(jsonData.beladung).to.eql(pm.variables.get(\"beladung\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(undefined);\r",
									"pm.expect(jsonData.status).to.eql(pm.variables.get(\"status\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData.anderung).to.eql(undefined);\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/anderung/{{anderungId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"anderung",
								"{{anderungId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0984f2f6-c71c-4e84-8f12-ac0bc699a71f",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Zug",
			"item": [
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a98b6b09-75c7-4eec-b7e2-5e2c409d8cab",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.zug.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(root);\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.zug.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.zug.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/zug",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a1fb5816-a528-40bc-8fc4-f713e202660f",
								"exec": [
									"pm.environment.set(\"zug\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"zugTyp\", pm.variables.get(\"zugTypAdd\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7eae9c02-1704-47f4-ba82-42194a64616b",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var zug = pm.variables.get(\"zug\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zug/{{zug}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"zug\"));\r",
									"pm.expect(jsonData.zugTyp).to.eql(pm.variables.get(\"zugTyp\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{zug}}\",\n    \"zugTyp\": \"{{zugTyp}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zug",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Consist",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3411eacc-7103-4c1e-b265-d60191a278e7",
								"exec": [
									"pm.environment.set(\"position\", pm.variables.replaceIn(\"{{$randomInt}}\"));\r",
									"pm.environment.set(\"artikelId\", pm.variables.get(\"artikelAdd\"));\r",
									"pm.environment.set(\"hersteller\", pm.variables.get(\"herstellerAdd\"));\r",
									"pm.environment.set(\"bestellNr\", pm.variables.get(\"bestellNr\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungAdd\"));\r",
									"pm.environment.set(\"gattung\", pm.variables.get(\"gattungAdd\"));\r",
									"pm.environment.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "14cee2c1-ec85-437d-9a07-c92bcb0b5832",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var zug = pm.variables.get(\"zug\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zug/{{zug}}\");\r",
									"pm.expect(jsonData.zug).to.eql(pm.variables.get(\"zug\"));\r",
									"pm.expect(jsonData.position).to.eql(pm.variables.get(\"position\"));\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(pm.variables.get(undefined));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"zug\": \"{{zug}}\",\n    \"position\": \"{{position}}\",\n    \"artikelId\": \"{{artikelId}}\",\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n    \"bezeichnung\": \"{{bezeichnung}}\",\n    \"lange\": \"{{lange}}\",\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\n    \"gattung\": \"{{gattung}}\",\n    \"betreibsnummer\": \"{{betreibsnummer}}\",\n    \"abbildung\": \"{{abbildung}}\",\n    \"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zug/{{zug}}/consist/{{position}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}",
								"consist",
								"{{position}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Consist",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e72bb0a0-1fc2-400e-90bc-2a62c11aa56a",
								"exec": [
									"pm.environment.set(\"position\", pm.variables.replaceIn(\"{{$randomInt}}\"));\r",
									"pm.environment.set(\"artikelId\", pm.variables.get(\"artikelAdd\"));\r",
									"pm.environment.set(\"hersteller\", pm.variables.get(\"herstellerAdd\"));\r",
									"pm.environment.set(\"bestellNr\", pm.variables.get(\"bestellNr\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));\r",
									"pm.environment.set(\"lange\", new Number(pm.variables.replaceIn(\"{{$randomPrice}}\")));\r",
									"pm.environment.set(\"bahnverwaltung\", pm.variables.get(\"bahnverwaltungAdd\"));\r",
									"pm.environment.set(\"gattung\", pm.variables.get(\"gattungAdd\"));\r",
									"pm.environment.set(\"betreibsnummer\", pm.variables.replaceIn(\"{{$randomAbbreviation}} {{$randomInt}}.{{$randomInt}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "79d9892f-c4a9-4f84-9e0b-1e354254e377",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var zug = pm.variables.get(\"zug\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zug/{{zug}}\");\r",
									"pm.expect(jsonData.zug).to.eql(pm.variables.get(\"zug\"));\r",
									"pm.expect(jsonData.position).to.eql(pm.variables.get(\"position\"));\r",
									"pm.expect(jsonData.artikelId).to.eql(pm.variables.get(\"artikelId\"));\r",
									"pm.expect(jsonData.hersteller).to.eql(pm.variables.get(\"hersteller\"));\r",
									"pm.expect(jsonData.bestellNr).to.eql(pm.variables.get(\"bestellNr\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.lange).to.eql(pm.variables.get(\"lange\"));\r",
									"pm.expect(jsonData.bahnverwaltung).to.eql(pm.variables.get(\"bahnverwaltung\"));\r",
									"pm.expect(jsonData.gattung).to.eql(pm.variables.get(\"gattung\"));\r",
									"pm.expect(jsonData.betreibsnummer).to.eql(pm.variables.get(\"betreibsnummer\"));\r",
									"pm.expect(jsonData.abbildung).to.eql(pm.variables.get(undefined));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"zug\": \"{{zug}}\",\r\n    \"position\": \"{{position}}\",\r\n    \"artikelId\": \"{{artikelId}}\",\r\n    \"hersteller\": \"{{hersteller}}\",\r\n    \"bestellNr\": \"{{bestellNr}}\",\r\n\t\"bezeichnung\": \"{{bezeichnung}}\",\r\n    \"lange\": \"{{lange}}\",\r\n    \"bahnverwaltung\": \"{{bahnverwaltung}}\",\r\n    \"gattung\": \"{{gattung}}\",\r\n    \"betreibsnummer\": \"\",\r\n    \"abbildung\": \"\",\r\n\t\"deleted\": true\r\n}"
						},
						"url": {
							"raw": "{{api}}/zug/{{zug}}/consist/{{position}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}",
								"consist",
								"{{position}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2d5b1361-36cc-420e-9372-3c7fa0da3a1d",
								"exec": [
									"pm.environment.set(\"zugTyp\", pm.variables.get(\"zugTypUpdate\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3ceb5a99-e5ed-4998-9020-11ff53abe9e5",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var zug = pm.variables.get(\"zug\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zug/{{zug}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"zug\"));\r",
									"pm.expect(jsonData.zugTyp).to.eql(pm.variables.get(\"zugTyp\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{zug}}\",\n    \"zugTyp\": \"{{zugTyp}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zug/{{zug}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc80318b-3790-497f-9558-ffb875054004",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var zug = pm.variables.get(\"zug\");\r",
									"var root = pm.variables.replaceIn(\"{{api}}/zug\");\r",
									"var self = pm.variables.replaceIn(\"{{api}}/zug/{{zug}}\");\r",
									"pm.expect(jsonData.name).to.eql(pm.variables.get(\"zug\"));\r",
									"pm.expect(jsonData.zugTyp).to.eql(pm.variables.get(\"zugTyp\"));\r",
									"pm.expect(jsonData.bezeichnung).to.eql(pm.variables.get(\"bezeichnung\"));\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/zug/{{zug}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Consist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "872dc5b2-2391-46b2-8429-282d7950f72a",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/zug/{{zug}}/consist/{{position}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}",
								"consist",
								"{{position}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cecf5b6-70a7-4578-8fe7-2e263b9640b3",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api}}/zug/{{zug}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{zug}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Open Api",
			"item": [
				{
					"name": "Get Docs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{root}}/v3/api-docs.json",
							"host": [
								"{{root}}"
							],
							"path": [
								"v3",
								"api-docs.json"
							]
						},
						"description": "http://LINEPRO2.home:8086/ModellBahn/api/swagger/swagger."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Export",
			"item": [
				{
					"name": "Achsfolg",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/achsfolg",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"achsfolg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anderung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/anderung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"anderung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Antrieb",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/antrieb",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"antrieb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Artikel",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/artikel",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"artikel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Aufbau",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/aufbau",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"aufbau"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bahnverwaltung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/bahnverwaltung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"bahnverwaltung"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderAdress",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderAdress",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderAdress"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderCv",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderCv",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderCv"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderFunktion",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderFunktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderFunktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Decoder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoder",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoder"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypAdress",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderTypAdress",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypAdress"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypCv",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderTypCv",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypCv"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypFunktion",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderTypFunktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypFunktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTyp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Epoch",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/epoch",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"epoch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gattung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/gattung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"gattung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hersteller",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/hersteller",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"hersteller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kategorie",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/kategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"kategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kupplung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/kupplung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"kupplung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Licht",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/licht",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"licht"
							]
						}
					},
					"response": []
				},
				{
					"name": "Massstab",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/massstab",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"massstab"
							]
						}
					},
					"response": []
				},
				{
					"name": "MotorTyp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/motorTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"motorTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Produkt",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/produkt",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"produkt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Produkt Teil",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/produktTeil",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"produktTeil"
							]
						}
					},
					"response": []
				},
				{
					"name": "Protokoll",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/protokoll",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"protokoll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sondermodell",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/sondermodell",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"sondermodell"
							]
						}
					},
					"response": []
				},
				{
					"name": "Spurweite",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/spurweite",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"spurweite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Steuerung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/steuerung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"steuerung"
							]
						}
					},
					"response": []
				},
				{
					"name": "UnterKategorie",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/unterKategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"unterKategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vorbild",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/vorbild",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"vorbild"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zug Consist",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/zugConsist",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zugConsist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zug",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/zug",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zug"
							]
						}
					},
					"response": []
				},
				{
					"name": "ZugTyp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/zugTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zugTyp"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Import",
			"item": [
				{
					"name": "Achsfolg",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/achsfolg",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"achsfolg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anderung",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/anderung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"anderung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Antrieb",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/antrieb",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"antrieb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Artikel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/artikel",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"artikel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Aufbau",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/aufbau",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"aufbau"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bahnverwaltung",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/bahnverwaltung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"bahnverwaltung"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderAdress",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderAdress",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderAdress"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderCv",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderCv",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderCv"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderFunktion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderFunktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderFunktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Decoder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoder",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoder"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypAdress",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderTypAdress",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypAdress"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypCv",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderTypCv",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypCv"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypFunktion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderTypFunktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypFunktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTyp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Epoch",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/epoch",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"epoch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gattung",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/gattung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"gattung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hersteller",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/hersteller",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"hersteller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kategorie",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/kategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"kategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kupplung",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/kupplung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"kupplung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Licht",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/licht",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"licht"
							]
						}
					},
					"response": []
				},
				{
					"name": "Massstab",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/massstab",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"massstab"
							]
						}
					},
					"response": []
				},
				{
					"name": "MotorTyp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/motorTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"motorTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Produkt",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/produkt",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"produkt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Produkt Teil",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/produktTeil",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"produktTeil"
							]
						}
					},
					"response": []
				},
				{
					"name": "Protokoll",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/protokoll",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"protokoll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sondermodell",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/sondermodell",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"sondermodell"
							]
						}
					},
					"response": []
				},
				{
					"name": "Spurweite",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/spurweite",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"spurweite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Steuerung",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/steuerung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"steuerung"
							]
						}
					},
					"response": []
				},
				{
					"name": "UnterKategorie",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/unterKategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"unterKategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vorbild",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/vorbild",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"vorbild"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zug Consist",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/zugConsist",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zugConsist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zug",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/zug",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zug"
							]
						}
					},
					"response": []
				},
				{
					"name": "ZugTyp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "{{language}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/zugTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zugTyp"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "password",
				"type": "string"
			},
			{
				"key": "username",
				"value": "username",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "15047749-47ff-4777-a067-f7f5ebb30273",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "dce55e36-a031-4d30-9b16-1039dd59c0a4",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "f05b153d-52c4-432c-83ba-7cae3491d416",
			"key": "host",
			"value": "127.0.0.1"
		},
		{
			"id": "e781cdc6-5cda-4f50-8aab-1418c0a90c9d",
			"key": "port",
			"value": ":8086"
		},
		{
			"id": "2082291b-4577-4f2b-91c6-8ee2bb3c3862",
			"key": "server",
			"value": "http://{{host}}{{port}}"
		},
		{
			"id": "90ce3ac1-bf83-4fe9-9dc3-f8f290ad7564",
			"key": "root",
			"value": "{{server}}/ModellBahn"
		},
		{
			"id": "e0aff7fd-0267-4ddd-942e-7f0b03019d53",
			"key": "api",
			"value": "{{root}}/api"
		},
		{
			"id": "3e517cc6-ef31-4155-b910-e64e0401a169",
			"key": "language",
			"value": "de"
		},
		{
			"id": "14d1603a-1e3b-46c2-8d83-33120e639821",
			"key": "achsfolgAdd",
			"value": "1C1H2T"
		},
		{
			"id": "9a8c2863-3f48-4bd4-a0cf-587f5ee6ebda",
			"key": "achsfolgUpdate",
			"value": "COCO"
		},
		{
			"id": "9e340c8d-0e02-4daa-8e7b-90e28aadc0cd",
			"key": "adIndexAdd",
			"value": "1"
		},
		{
			"id": "571ddef0-ba97-4060-babd-d9a05a7349f8",
			"key": "adIndexUpdate",
			"value": "1"
		},
		{
			"id": "413fab63-3c1e-4665-9232-0c9ed496e6b7",
			"key": "adSpanAdd",
			"value": "2"
		},
		{
			"id": "7472ec63-f03b-4fc6-a5b3-475bb62afb99",
			"key": "adSpanUpdate",
			"value": "16"
		},
		{
			"id": "5601d659-66bf-4467-88d3-940993a9f65b",
			"key": "adTypAdd",
			"value": "DIGITAL"
		},
		{
			"id": "4a1f8f43-7435-4055-ab08-5e68e3a373df",
			"key": "adTypUpdate",
			"value": "DELTA"
		},
		{
			"id": "fe0a544e-fc9c-464d-8fee-8fc4574ee7a3",
			"key": "adAdd",
			"value": "10"
		},
		{
			"id": "ffb03364-4436-48d7-aff0-d164e2a88c96",
			"key": "adUpdate",
			"value": "80"
		},
		{
			"id": "cce9b714-4d57-4237-a52b-961fad2a26f6",
			"key": "anderungAdd",
			"value": "1"
		},
		{
			"id": "3d5f4bc7-2b6b-4066-8a00-c60799345abf",
			"key": "anderungUpdate",
			"value": "1"
		},
		{
			"id": "45bd6443-27ac-4b53-90b0-508982b367d3",
			"key": "antriebAdd",
			"value": "DAMPF"
		},
		{
			"id": "40fe6240-aa7c-4b8b-8919-ffa2e72ea3e7",
			"key": "antriebUpdate",
			"value": "ELEKTRO"
		},
		{
			"id": "5ad01164-a05d-4839-8804-f22774a888e7",
			"key": "artikelAdd",
			"value": "00001"
		},
		{
			"id": "3d0eb226-b7ea-4283-a309-266c622c563e",
			"key": "artikelUpdate",
			"value": "00001"
		},
		{
			"id": "b198e2cc-7753-49da-934a-b23471486c0e",
			"key": "aufbauAdd",
			"value": "LK"
		},
		{
			"id": "edc94f5f-5bbe-4736-9e0b-23313c88b21d",
			"key": "aufbauUpdate",
			"value": "LK"
		},
		{
			"id": "5415379b-8e58-4dcd-b1b4-f250ed4e4e90",
			"key": "bestellNrAdd",
			"value": "3000"
		},
		{
			"id": "f8a3ba11-b865-44b9-9566-32e5ac8c5ef3",
			"key": "bestellNrUpdate",
			"value": "3003"
		},
		{
			"id": "aeabe8d7-b479-4935-9c08-833ac06753a5",
			"key": "bahnverwaltungAdd",
			"value": "DB"
		},
		{
			"id": "86f63e42-f093-4320-9d4c-f008d7b8a241",
			"key": "bahnverwaltungUpdate",
			"value": "DBAG"
		},
		{
			"id": "d1627b14-1fc9-41a0-83ef-71772d4aa44d",
			"key": "cvAdd",
			"value": "8"
		},
		{
			"id": "a4fe7eff-9e86-4b13-9c4d-7f9a3156ade1",
			"key": "cvUpdate",
			"value": "120"
		},
		{
			"id": "b0e34f5e-18ff-44c6-9da9-012212bcc1b7",
			"key": "cvMaxAdd",
			"value": "63"
		},
		{
			"id": "816b270a-9e28-4b96-b015-dd55b4d456ac",
			"key": "cvMaxUpdate",
			"value": "80"
		},
		{
			"id": "43b69b50-d856-422b-b190-e8e72ca5d33e",
			"key": "cvMinAdd",
			"value": "0"
		},
		{
			"id": "1d86fbfa-3f63-410e-9aac-da88e4f8920f",
			"key": "cvMinUpdate",
			"value": "1"
		},
		{
			"id": "9ee17bce-e125-486a-8359-66bd968f4359",
			"key": "cvValueAdd",
			"value": "30"
		},
		{
			"id": "afc03636-38c8-41a3-9625-e8b64e53c037",
			"key": "cvValueUpdate",
			"value": "50"
		},
		{
			"id": "aace0579-33f7-4be3-a6dd-7d5ebeced4aa",
			"key": "decoderAdd",
			"value": "00001"
		},
		{
			"id": "065c40a9-9ad6-437b-90d6-5d25267f8e6a",
			"key": "decoderUpdate",
			"value": "00001"
		},
		{
			"id": "f69564f9-615d-4fed-87e4-21cd91225c24",
			"key": "decoderAdd",
			"value": "00001"
		},
		{
			"id": "83d7872b-3ecb-4499-910e-cb02340a65fe",
			"key": "decoderUpdate",
			"value": "00001"
		},
		{
			"id": "f728ff75-3093-4209-a391-b7385370415c",
			"key": "decoderHerstellerAdd",
			"value": "ESU"
		},
		{
			"id": "8e5302a9-e0f2-4a30-aa42-a6797feae660",
			"key": "decoderHerstellerUpdate",
			"value": "ESU"
		},
		{
			"id": "a138d4e0-8ab7-4e4d-beb1-f3a67813c4e4",
			"key": "decoderBestellNrAdd",
			"value": "62400"
		},
		{
			"id": "f501583e-0a97-472c-8312-64acbe19d1d7",
			"key": "decoderBestellNrUpdate",
			"value": "62499"
		},
		{
			"id": "a7563ecf-79c8-4df7-afaf-dadd2632a697",
			"key": "decoderBezeichnungAdd",
			"value": "LokSound M4"
		},
		{
			"id": "be099f85-9946-4d25-858f-8a47284b7bc5",
			"key": "epochAdd",
			"value": "IV"
		},
		{
			"id": "bb3d3fae-9085-4a98-982a-b7a48c504a45",
			"key": "epochUpdate",
			"value": "IV"
		},
		{
			"id": "25ea8799-802d-4e23-9396-98b3fb4f30b6",
			"key": "fahrstufeAdd",
			"value": "27"
		},
		{
			"id": "4773e250-84ae-459f-b5e6-d9a39be91150",
			"key": "fahrstufeUpdate",
			"value": "128"
		},
		{
			"id": "4bd3f5e5-5aac-4862-bcd4-a8083a2f9ea5",
			"key": "fnFuntionAdd",
			"value": "F0"
		},
		{
			"id": "eef0297c-c06c-450d-ae0c-e769c3de3549",
			"key": "fnFuntionUpdate",
			"value": "F0"
		},
		{
			"id": "60d9ae59-306e-44d5-8b9d-0541ffdaf75c",
			"key": "fnReiheAdd",
			"value": "1"
		},
		{
			"id": "0ce6920e-c5f9-4ef9-ae2f-e61943990575",
			"key": "fnReiheUpdate",
			"value": "1"
		},
		{
			"id": "c3433ddf-2fff-49f8-91d0-06d2f3ccec8f",
			"key": "gattungAdd",
			"value": "BR89.0"
		},
		{
			"id": "0446b579-3637-4766-a1c5-653697d155b4",
			"key": "gattungUpdate",
			"value": "BR89.0"
		},
		{
			"id": "ceb22530-53bc-4567-bd39-5baedfdda645",
			"key": "herstellerAdd",
			"value": "MARKLIN"
		},
		{
			"id": "4ed97e53-b18d-4efb-9d29-36208e6fbdf8",
			"key": "herstellerUpdate",
			"value": "MARKLIN"
		},
		{
			"id": "ce4c6abb-75c5-45b1-9d22-69c464693d02",
			"key": "iMaxAdd",
			"value": "1.5"
		},
		{
			"id": "37a29c04-f713-4777-a062-0c89ebbbdb68",
			"key": "iMaxUpdate",
			"value": "2.0"
		},
		{
			"id": "f783fbfb-cd88-471e-b905-bbc63c006780",
			"key": "kategorieAdd",
			"value": "LOKOMOTIV"
		},
		{
			"id": "5993f119-dc70-46f6-b27e-647f4b87f881",
			"key": "kategorieUpdate",
			"value": "AUSGESTALTUNG"
		},
		{
			"id": "087d50b5-082a-483d-a543-43b2b6e2b0fa",
			"key": "kupplungAdd",
			"value": "RELEX"
		},
		{
			"id": "d9d97a3b-0014-4eb7-adc0-32dc48105832",
			"key": "kupplungUpdate",
			"value": "RELEX"
		},
		{
			"id": "34806bc3-a371-41e3-9759-d31a2aa6c0a9",
			"key": "konfigurationAdd",
			"value": "CV"
		},
		{
			"id": "f67b4969-2feb-4d44-acac-4251ddc0a4dd",
			"key": "konfigurationUpdate",
			"value": "STECKER"
		},
		{
			"id": "468be7a1-fabd-41ca-b0bd-4afb6d310c79",
			"key": "leistungsubertragungAdd",
			"value": "MECHANISH"
		},
		{
			"id": "bf91c644-014d-4b2a-9a7f-58e8a5b2c0d2",
			"key": "leistungsubertragungUpdate",
			"value": "ELEKTRISH"
		},
		{
			"id": "3686c900-06e3-4d5c-a3d8-37b909a9deac",
			"key": "lichtAdd",
			"value": "L1V"
		},
		{
			"id": "1d602508-d417-471a-bdf5-f98d853c8d58",
			"key": "lichtUpdate",
			"value": "L1V"
		},
		{
			"id": "1bfa3d43-4c8a-49eb-94ae-f5bdb437d257",
			"key": "massstabAdd",
			"value": "H0"
		},
		{
			"id": "fdb97b4b-5844-47b9-9b3f-1c6d9784327f",
			"key": "massstabUpdate",
			"value": "H0"
		},
		{
			"id": "4ae17061-d24c-4d66-8a34-fe28f9c75e8a",
			"key": "motorTypAdd",
			"value": "CSINUS"
		},
		{
			"id": "35a873c9-9c50-43e5-a5f5-afb90383dfc1",
			"key": "motorTypUpdate",
			"value": "CSINUS"
		},
		{
			"id": "68821444-bd93-4027-93f2-675abeebe10f",
			"key": "protokollAdd",
			"value": "MFX"
		},
		{
			"id": "6f3052d9-34a1-4211-b365-f8d397379188",
			"key": "protokollUpdate",
			"value": "DELTA"
		},
		{
			"id": "3feca2f9-0f59-4fa7-8145-d598b71c53c5",
			"key": "sondermodellAdd",
			"value": "MM"
		},
		{
			"id": "347a3dac-fc3c-4157-ae85-664d17a9ac6c",
			"key": "sondermodellUpdate",
			"value": "MM"
		},
		{
			"id": "a9dcdad0-7246-47d3-8e54-04fceda26532",
			"key": "spurweiteAdd",
			"value": "H0"
		},
		{
			"id": "bf51e6f2-6c51-405d-95f4-c096b716a7b2",
			"key": "spurweiteUpdate",
			"value": "H0"
		},
		{
			"id": "5d75c86c-22ca-40c4-9631-5769ceb91441",
			"key": "steckerAdd",
			"value": "NEM651"
		},
		{
			"id": "3f182263-94db-43f4-9be3-9a3d8cc9a524",
			"key": "steckerUpdate",
			"value": "NEM652"
		},
		{
			"id": "fae0a228-3d78-4caa-9913-f4e54f8751ed",
			"key": "steuerungAdd",
			"value": "DIGITAL"
		},
		{
			"id": "22e1e9ea-94ca-444a-b21b-7f69d46295ef",
			"key": "steuerungUpdate",
			"value": "DIGITAL"
		},
		{
			"id": "0722dfc1-5f60-4a44-aaec-32e6711cb832",
			"key": "teilHerstellerAdd",
			"value": "MARKLIN"
		},
		{
			"id": "a8a8e637-9102-4fce-9e42-2528390030d9",
			"key": "teilBestellNrAdd",
			"value": "600300"
		},
		{
			"id": "8bbf9318-b6ba-45c5-a355-00a7983ad778",
			"key": "teilKategorieAdd",
			"value": "ERSATZTEIL"
		},
		{
			"id": "a07759e7-957a-4554-8726-46621a138798",
			"key": "teilUnterKategorieAdd",
			"value": "BURSTEN"
		},
		{
			"id": "e76f17a5-960c-42f7-aa1f-ae14f21d0292",
			"key": "unterKategorieAdd",
			"value": "DAMPF"
		},
		{
			"id": "d924d1a5-07b7-44cb-b6d0-8291f6c27c4b",
			"key": "unterKategorieUpdate",
			"value": "HECKEN"
		},
		{
			"id": "93159ea4-4437-4558-a7b4-28a4d80d74e8",
			"key": "teilBezeichnungAdd",
			"value": "Bürsten"
		},
		{
			"id": "e8fadcde-95ea-45a4-b0c3-5a0cd01397d9",
			"key": "vorbildAdd",
			"value": "HECKEN"
		},
		{
			"id": "1cca112f-14a0-4637-8f9e-4badd2343ed9",
			"key": "vorbildUpdate",
			"value": "HECKEN"
		},
		{
			"id": "a28b2ed1-15c0-4f1e-b579-d21c406bae13",
			"key": "zugAdd",
			"value": "BAVARIA"
		},
		{
			"id": "0ce3ad13-d5bf-4102-b488-fac4a1abdca9",
			"key": "zugUpdate",
			"value": "BAVARIA"
		},
		{
			"id": "5d48d77a-f416-4865-9e7f-5f28123686a3",
			"key": "zugTypAdd",
			"value": "TEE"
		},
		{
			"id": "48de6dcc-31c5-4d6b-b78c-f86fd8fc711e",
			"key": "zugTypUpdate",
			"value": "TEE"
		},
		{
			"id": "139d2d3c-9c39-4d06-a0dc-509d0d89c91e",
			"key": "imageFile",
			"value": "3000.jpg"
		},
		{
			"id": "6816e6cb-d1cf-495f-8edf-64639573e1ae",
			"key": "anleitungFile",
			"value": "3000_betrieb.pdf"
		},
		{
			"id": "5d383f84-f00e-4d41-ace4-b393b5eeba35",
			"key": "explosionszeichnungFile",
			"value": "3000_explo.pdf"
		},
		{
			"id": "5a739195-81dc-43d5-9f9a-652f0b4e2983",
			"key": "xlFile",
			"value": "3000.jpg"
		}
	],
	"protocolProfileBehavior": {}
}