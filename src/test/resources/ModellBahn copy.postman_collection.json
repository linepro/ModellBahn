{
	"info": {
		"_postman_id": "eaa4e27c-f7e6-4434-8c23-65d17dfbd78d",
		"name": "ModellBahn",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Achsfolg",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8ac57d0a-77a8-49c4-8a1c-308c0ee20eaf",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "424b8dae-6600-4d41-aa68-29c48fdbfe4d",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/achsfolg",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "edbd6404-82ee-4241-931c-90f1e453319a",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/achsfolg/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "dd93781a-dca3-430e-ba23-551fea84337b",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c62aa246-6ed8-426e-970a-a9a531779dc5",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{api}}/achsfolg/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6002f131-0d47-48af-ad02-b297cb1d79d0",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/achsfolg",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ab933e90-eda3-4cdd-a63e-95cea4f34b12",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/achsfolg/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"achsfolg",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Antrieb",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2bb782c3-15b7-4611-8d4c-2bc36dcca387",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "37ab38d9-b4e6-42aa-b9eb-88bbc4c43d6e",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/antrieb",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05ed7316-06a5-4ab0-a535-e47e93f4ec4e",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/antrieb/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "049303a1-88dd-4654-a1d5-4912869fd708",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fa4d19c8-b048-42ab-ada0-0c9327cb11a2",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/antrieb/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ee4ad79-fb08-4c6e-b410-da0c122d373c",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/antrieb",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03047ad9-1552-497d-8afe-fc1cc08950ec",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/antrieb/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"antrieb",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Artikel",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9b04ef4f-4b86-4d40-b3dc-b0a49f57ded9",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bc4ef269-6ed7-4cd5-9274-04c87bbfeb3d",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"artikelId\": \"{{artikelId}}\",\n    \"hersteller\": \"{{name}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n\t\"bezeichnung\": \"{{artikelId}} Description\",\n    \"kategorie\": \"LOKOMOTIV\",\n    \"unterKategorie\": \"DAMPF\",\n    \"lange\": 8.9,\n    \"massstab\": \"H0\",\n    \"spurweite\": \"H0\",\n    \"epoch\": \"III\",\n    \"bahnverwaltung\": \"DB\",\n    \"gattung\": \"89.0\",\n    \"betreibsnummer\": \"89 006\",\n    \"achsfolg\": \"\",\n    \"sondermodell\": \"\",\n    \"aufbau\": \"\",\n    \"licht\": \"L1V\",\n    \"kupplung\": \"RELEX\",\n    \"steuerung\": \"FRU\",\n    \"decoder\": \"00001\",\n    \"motorTyp\": \"SFCM\",\n    \"kaufdatum\": \"1967-01-01\",\n    \"wahrung\": \"EUR\",\n    \"preis\": 100.00,\n    \"stuck\": 1,\n    \"verbleibende\": 1,\n    \"anmerkung\": \"\",\n    \"beladung\": \"\",\n    \"status\": \"GEKAUFT\",\n    \"deleted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/artikel",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b84c1ca-2881-472e-8f50-a73b652a4f52",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2fb72069-2bd2-4bc5-8825-c5bd3ca05900",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "965a48d3-6a50-41f4-84d8-f5f1d66235a8",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"artikelId\": \"{{artikelId}}\",\n    \"hersteller\": \"{{name}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n\t\"bezeichnung\": \"{{artikelId}} Description\",\n    \"kategorie\": \"LOKOMOTIV\",\n    \"unterKategorie\": \"DAMPF\",\n    \"lange\": 8.9,\n    \"massstab\": \"H0\",\n    \"spurweite\": \"H0\",\n    \"epoch\": \"III\",\n    \"bahnverwaltung\": \"DB\",\n    \"gattung\": \"89.0\",\n    \"betreibsnummer\": \"89 006\",\n    \"achsfolg\": \"\",\n    \"sondermodell\": \"\",\n    \"aufbau\": \"\",\n    \"licht\": \"L1V\",\n    \"kupplung\": \"RELEX\",\n    \"steuerung\": \"FRU\",\n    \"decoder\": \"00001\",\n    \"motorTyp\": \"SFCM\",\n    \"kaufdatum\": \"1967-01-01\",\n    \"wahrung\": \"EUR\",\n    \"preis\": 100.00,\n    \"stuck\": 1,\n    \"verbleibende\": 1,\n    \"anmerkung\": \"\",\n    \"beladung\": \"\",\n    \"status\": \"GEKAUFT\",\n    \"deleted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Anderung",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"artikelId\": \"{{artikelId}}\",\n\t\"anderungId\": \"{{anderungId}}\",\n\t\"bezeichnung\": \"{{anderungId}} Description\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/anderung",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"anderung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Anderung",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"artikelId\": \"{{artikelId}}\",\n\t\"anderungId\": \"{{anderungId}}\",\n\t\"bezeichnung\": \"{{anderungId}} Description\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/anderung/{{anderungId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"anderung",
								"{{anderungId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a2fbf75-c76a-425c-84d0-b8c67f9a1673",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/artikel",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Anderung",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}/anderung/{{anderungId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}",
								"anderung",
								"{{anderungId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d1339bee-bf0c-429a-b3bf-9e24065568b2",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/artikel/{{artikelId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"artikel",
								"{{artikelId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Aufbau",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ffd89d11-5aec-4e17-951e-530d94b0e72d",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "012c24a8-cb34-46ea-9a14-f0ada679e937",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/aufbau",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9afe3303-c73e-470c-bb15-024147ade79a",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/aufbau/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "62be28b0-7577-4f70-908d-d9245b4f8c93",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e3fade65-6d88-4ce7-bdf6-fd6c0cda47ca",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/aufbau/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/aufbau/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "83ae0b01-dbce-4d6b-8937-4e121659eaf6",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/aufbau",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/aufbau/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc457fcc-d0c0-4d2c-9b78-f5070465b122",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/aufbau/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"aufbau",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Bahnverwaltung",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0edfec6d-bea2-4ba5-9b96-af51db7c7f66",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1865906c-9c36-4595-b971-f052618f72b3",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/bahnverwaltung",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "680874c3-1364-49ef-b1d6-d08edc9e87ec",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/bahnverwaltung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2ea02142-4f60-4600-ab38-61b368f42ecc",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "05a92e3a-a321-4c87-b6d1-da253eea63ab",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/bahnverwaltung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6e791e8-e780-4285-977e-383753458da0",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/bahnverwaltung",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6aa018b3-8b2d-4edd-b4ff-3822df78a10b",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/bahnverwaltung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"bahnverwaltung",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Decoder",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f2287638-c6ef-4232-92be-e8264339917c",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b820f93b-3037-45e4-a839-850b7330e3ec",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "858378fa-e72e-4549-a9d0-4c3ba81707c8",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b10a79cf-efcf-44e7-acce-5f372fc4fe0d",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6831ab73-9724-43b3-906f-bd264b4e4a65",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"decoderId\": \"{{decoderId}}\",\n    \"hersteller\": \"{{decoderHersteller}}\",\n    \"bestellNr\": \"{{decoderBestellNr}}\",\n    \"protokoll\": \"MFX\",\n    \"status\": \"INSTALIERT\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Adress",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}/adress/{{index}}?adress={{adress}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}",
								"adress",
								"{{index}}"
							],
							"query": [
								{
									"key": "adress",
									"value": "{{adress}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update CV",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}/cv/{{cv}}?wert={{wert}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}",
								"cv",
								"{{cv}}"
							],
							"query": [
								{
									"key": "wert",
									"value": "{{wert}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Funktion",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}/funktion/{{funktion}}/{{reihe}}?bezeichnung={{bezeichnung}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}",
								"funktion",
								"{{funktion}}",
								"{{reihe}}"
							],
							"query": [
								{
									"key": "bezeichnung",
									"value": "{{bezeichnung}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "119b6ea4-e0bc-4a0f-8fae-577d42e9e21b",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/decoder",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "205a268b-9aa4-40e4-a02c-d31c746f292a",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/decoder/{{decoderId}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoder",
								"{{decoderId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Decoder Typ",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5ee112a7-18ac-4853-8c4f-6d7b1222503e",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bfe92d45-50c0-4833-aca4-c193e7148929",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{decoderBestellNr}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"protokoll\": \"MFX\",\n    \"gerausch\": true,\n    \"konfiguration\": \"CV\",\n    \"stecker\": \"NEM652\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "328c55b4-acd0-4726-8d3b-5742616f0722",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a9dbb324-d266-479c-8b1d-be3f12e09baa",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "52cb9591-4247-4c8d-b90d-ce78a9d0030a",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{decoderBestellNr}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"protokoll\": \"MFX\",\n    \"gerausch\": true,\n    \"konfiguration\": \"CV\",\n    \"stecker\": \"NEM652\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Anleitungen",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/anleitungen",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"anleitungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Adress",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"index\": 1,\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"adressTyp\": \"{{adressTyp}}\",\n    \"span\": 1,\n    \"werkseinstellung\": 1,\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/adress",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"adress"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Adress",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"index\": 1,\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"adressTyp\": \"{{adressTyp}}\",\n    \"span\": 1,\n    \"werkseinstellung\": 1,\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/adress/{{index}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"adress",
								"{{index}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add CV",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{decoderBestellNr}}\",\n    \"cv\": 79,\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"minimal\": 1,\n    \"maximal\": 63,\n    \"werkseinstellung\": 63,\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/cv",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"cv"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update CV",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{decoderBestellNr}}\",\n    \"cv\": 79,\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"minimal\": 1,\n    \"maximal\": 63,\n    \"werkseinstellung\": 63,\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/cv/{{cv}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"cv",
								"{{cv}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Funktion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{decoderBestellNr}}\",\n    \"reihe\": 1,\n    \"funktion\": \"F11\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"programmable\": false,\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/funktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"funktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Funktion",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"hersteller\": \"{{decoderHersteller}}\",\n\t\"bestellNr\": \"{{decoderBestellNr}}\",\n    \"reihe\": 1,\n    \"funktion\": \"F11\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"programmable\": false,\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/funktion/{{funktion}}/{{reihe}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"funktion",
								"{{funktion}}",
								"{{reihe}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "647669a3-2b03-431a-8019-1687864a16dd",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/decoderTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Anleitungen",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/anleitungen",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"anleitungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Adress",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/adress/{{index}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"adress",
								"{{index}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete CV",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/cv/{{cv}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"cv",
								"{{cv}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Funktion",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}/funktion/{{funktion}}/{{reihe}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}",
								"funktion",
								"{{funktion}}",
								"{{reihe}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "434d188a-9474-4a4e-a7f9-92ee866040d2",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/decoderTyp/{{decoderHersteller}}/{{decoderBestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"decoderTyp",
								"{{decoderHersteller}}",
								"{{decoderBestellNr}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Epoch",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c227c318-695e-45eb-9045-32337ff6f3a9",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a749cf20-8dd9-4ff5-9747-f00b20ad8cfc",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/epoch",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69eb4e2e-cffe-4161-a045-502c588dbdf5",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/epoch/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6b183d6a-05b4-489f-8ccf-cf80ae7ff54b",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f6d54199-5e1a-4486-858d-ad542f342496",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/epoch/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "616ef784-a7a0-4bbe-bc9a-59394b53a93a",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/epoch",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "114f8253-1203-4ed3-b5c1-e9be2b1c466a",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/epoch/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"epoch",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Enums",
			"item": [
				{
					"name": "Adress Typ",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/adressTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"adressTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anderungs Typ",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/anderungsTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"anderungsTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Konfiguration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/konfiguration",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"konfiguration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/status",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stecker",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/enums/stecker",
							"host": [
								"{{api}}"
							],
							"path": [
								"enums",
								"stecker"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Gattung",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e1d93cc5-f0a4-420d-8d80-60638f17960a",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "37b889da-bc2a-4e29-ad45-2c6363bba347",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/gattung",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54dd5b23-4386-4217-aca0-bd17cedafcf9",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/gattung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0c4bf8da-8777-488f-bbdc-90080c040e84",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "abc7256e-a409-4124-acd5-0e268d731daf",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/gattung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a806577-0266-4a6a-aa9f-1ac1bb0ec9e1",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/gattung",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6951bd26-4284-431a-ae9f-45c9928bfe64",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/gattung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"gattung",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Hersteller",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "427e66ef-1a99-45c0-bb75-411606c03091",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9339ff81-3265-4dff-8c18-c88cbc4267af",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/hersteller",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9448a8a0-ed20-4aed-a6ec-fce4725f771d",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/hersteller/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2ef19bec-a4b7-47ab-b9f4-d7966de4d455",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c84eb53a-265c-4d79-a227-b84ce2e9e8b2",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/hersteller/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46a1e3d8-9560-47e8-b472-327e7c55a032",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/hersteller",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa2afc36-6eaa-4b55-a675-f0bd90cb61a1",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/hersteller/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"hersteller",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Kategorie",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "46deaeb7-318d-4c45-bc20-19bb363bd946",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "18c60b6f-a438-46b4-8307-9f6aeb445ad5",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ea92615-3a1e-490e-8d18-7681db319cde",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kategorie/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8f69893c-994b-40ee-9009-59c3d3fa06fd",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7edbf039-08bf-4ad9-920c-6559cd08b099",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kategorie/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Unter Kategorie",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"kategorie\": \"{{name}}\",\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kategorie/{{name}}/unterKategorien",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}",
								"unterKategorien"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Unter Kategorie",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kategorie/{{name}}/unterkategorien/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}",
								"unterkategorien",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Unter Kategorie",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"kategorie\": \"{{name}}\",\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kategorie/{{name}}/unterkategorien/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}",
								"unterkategorien",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Unter Kategorie",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kategorie/unterKategorien?kategorien=AUSGESTALTUNG,BELEUCHTUNG",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"unterKategorien"
							],
							"query": [
								{
									"key": "kategorien",
									"value": "AUSGESTALTUNG,BELEUCHTUNG"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ccc7e98b-bb4f-472f-b543-99f67dd3f894",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Unter Kategorie",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/kategorie/{{name}}/unterkategorien/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}",
								"unterkategorien",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e6dadbe-0764-491c-8d65-05cad968f920",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/kategorie/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kategorie",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Kupplung",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b29bbb8c-4698-469a-97fb-90eda3eee43d",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "027b7274-31bd-4b0d-9d8d-b74cba6b12b9",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kupplung",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b7f32bb-7cc3-448d-ab32-5375d7694207",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kupplung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "288a2495-598b-4037-99b9-a754af3b2e0a",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7907ea52-22e4-426c-9e03-d71d611c3c38",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/kupplung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8eb1e843-5000-4962-a31a-948be85aa70c",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/kupplung",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/kupplung/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/kupplung/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec26fbf5-4fc9-4b44-8e99-9e2ae61740ce",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/kupplung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"kupplung",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Licht",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "206e3973-2649-4d55-9c7f-9d7957be4e75",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1651c833-2959-40dc-aef3-4b46e222c673",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/licht",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16decfb6-30a5-45ed-9277-1882a8be0e54",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/licht/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a4a66531-525b-4072-a8c4-2ceddd4e0097",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "51a5bb98-4bc7-40cf-b884-07d06ebca2bc",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/licht/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/licht/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e15d269a-40d0-41c6-a2b5-d0a6e7ee12df",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/licht",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/licht/{{name}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa8d42fc-11f3-4920-8c47-2c26ebe97e0e",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/licht/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"licht",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Massstab",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6d157b2c-1e0e-40df-88fb-602a689ea308",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b7f8c5c1-5c98-42cb-9b39-6947215c4a40",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/massstab",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "182445e5-537e-4adc-85bd-441bf5b7cff3",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/massstab/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "96392a94-333d-422b-bee0-e3f2582b6722",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "76cec94f-b7db-40ab-8fe1-d16294385b7b",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/massstab/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a7fe367-6d18-47b5-aab1-090f98d2090f",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/massstab",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d7efe85-ea90-4417-af64-a40998269573",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/massstab/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"massstab",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Motor Typ",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5a83b405-9e82-4f45-95cd-bb6eca1b8995",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ebd4472d-eb60-4b68-99df-b5f263b670fc",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/motorTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2cc672d-f316-459f-9e55-8700ca53cbc1",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/motorTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "01f48983-d30e-4b0e-84f7-2dca353aeb0d",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a6410aa9-dba4-4618-bb9a-fab0e4c910a5",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/motorTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5810666d-1208-4a4a-a585-b8949a78f441",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/motorTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8143fec-c967-4ee5-a7fe-5977500f330a",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/motorTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"motorTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Produkt",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d5de4a72-95d2-408d-9841-daf77c1cfbcd",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ded37c6d-0805-4112-9158-3f01031a6970",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"lange\": 11.00,\n    \"kategorie\": \"LOKOMOTIV\",\n    \"unterKategorie\": \"DAMPF\",\n    \"massstab\": \"H0\",\n    \"spurweite\":\"H0\",\n    \"epoch\": \"III\" ,\n    \"bahnverwaltung\": \"DB\" ,\n    \"gattung\": \"BR89.0\" ,\n\t\"betreibsnummer\": \"89 028\",\n\t\"bauzeit\": \"1907-01-01\",\n\t\"vorbild\": \"BR89.0\" ,\n    \"achsfolg\": \"CH2T\" ,\n    \"aufbau\":  \"LK\",\n    \"licht\": \"L1V\",\n    \"kupplung\": \"RELEX\",\n    \"steuerung\": \"FRU\",\n    \"motorTyp\": \"SFCM\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/produkt",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd4ca4e8-332a-43c6-bd55-fe4c7fe0815b",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "de7355f3-b860-4e42-bc55-ee6be97baefc",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f021f873-468f-4e72-93fa-11ae03451375",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hersteller\": \"{{hersteller}}\",\n    \"bestellNr\": \"{{bestellNr}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"lange\": 11.00,\n    \"kategorie\": \"LOKOMOTIV\",\n    \"unterKategorie\": \"DAMPF\",\n    \"massstab\": \"H0\",\n    \"spurweite\":\"H0\",\n    \"epoch\": \"III\" ,\n    \"bahnverwaltung\": \"DB\" ,\n    \"gattung\": \"BR89.0\" ,\n\t\"betreibsnummer\": \"89 028\",\n\t\"bauzeit\": \"1907-01-01\",\n\t\"vorbild\": \"BR89.0\" ,\n    \"achsfolg\": \"CH2T\" ,\n    \"aufbau\":  \"LK\",\n    \"licht\": \"L1V\",\n    \"kupplung\": \"RELEX\",\n    \"steuerung\": \"FRU\",\n    \"motorTyp\": \"SFCM\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Anleitungen",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"anleitungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Explosionszeichnung",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"explosionszeichnung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Teil",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"teilHersteller\": \"{{teilHersteller}}\",\n    \"teilBestellNr\": \"{{teilBestellNr}}\",\n    \"anzahl\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"teilen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Teil",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen/{{teilHersteller}}/{{teilBestellNr}}?anzahl=2",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"teilen",
								"{{teilHersteller}}",
								"{{teilBestellNr}}"
							],
							"query": [
								{
									"key": "anzahl",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d973f25-bb37-45a6-8959-c1e8fd5573d9",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/produkt",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Anleitungen",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/anleitungen",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"anleitungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Explosionszeichnung",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/explosionszeichnung",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"explosionszeichnung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Teil",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}/teilen/{{teilHersteller}}/{{teilBestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}",
								"teilen",
								"{{teilHersteller}}",
								"{{teilBestellNr}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac1f8721-97c0-4510-9cd1-6189ec330986",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/produkt/{{hersteller}}/{{bestellNr}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"produkt",
								"{{hersteller}}",
								"{{bestellNr}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Protokoll",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "833d16d7-eb0d-4966-94dc-cd3acb49c6db",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7bfb541a-3670-45ca-90a8-cda67e1cebd9",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/protokoll",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d2b1767-9823-4a3a-88bd-3388bbfae866",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/protokoll/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bbf1c7d3-3e6e-49d9-9a1c-e86fe184bdb1",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b1093fe9-ffaf-460d-bac8-f34dde3540a8",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/protokoll/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2de9b555-7123-4470-849f-948aa07915ed",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/protokoll",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f43677a-8273-4158-9792-b677dd2fb643",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/protokoll/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"protokoll",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Sondermodell",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b5073a3-db2b-4f24-a7bb-13eb5c1c45df",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2236ef8d-990b-41b6-bb6d-e5505cd801ca",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/sondermodell",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00d915be-8b87-4d66-99dc-2e016778c089",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/sondermodell/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b09a7861-6412-4d09-b200-3cac8ee58b2c",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "aa62d3e5-c3eb-4bdd-b70b-2eb104ff4c12",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/sondermodell/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "946b37cc-a7b6-457b-b5b5-59f43eb8f429",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/sondermodell",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c85a9f3-1768-4706-b863-9dc95de45dcb",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/sondermodell/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"sondermodell",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Spurweite",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0771f575-7c30-4f23-8a38-b62a57e779e6",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3c42690f-6615-4ec1-88e6-6fa8d2dc7232",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/spurweite",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a9ec653-c67c-4472-9694-578ff20c88f0",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/spurweite/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1d9f30e2-10ca-43e9-92e6-6c5afac6e3d2",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "05f32314-c8d2-4e97-bb22-e2238b7d2a44",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/spurweite/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51437589-01b3-418d-afe4-fda96885398b",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/spurweite",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7af07e4-4961-41d2-b0bb-3a43cf41a8c5",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/spurweite/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"spurweite",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Steuerung",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a6e66308-75aa-4b80-9b9f-bd83285be47e",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2fb4c9dd-58b4-4c53-aa53-a61280d35c7d",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/steuerung",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54c6a23e-e5d9-458f-8c84-935a0d764e6a",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/steuerung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d4754f19-4c50-4a58-9bec-b3643fdaed93",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0a4639f9-dbc9-4ed4-8052-68ca76c03f47",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/steuerung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0856214-dedc-41cc-b840-9fbac733b5c1",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/steuerung",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88af1d21-4133-48d7-9e52-d89f4c99fad2",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/steuerung/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"steuerung",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Vorbild",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "097a3e99-c2b9-4bb9-8f17-bb9452f63e88",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8810fe90-9161-4722-a846-86903c348950",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"gattung\": \"BR89.0\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"LOKOMOTIV\",\n    \"unterKategorie\": \"DAMPF\",\n    \"bahnverwaltung\": \"DB\",\n    \"hersteller\": \"Henschel\",\n    \"bauzeit\": \"1934-01-01\",\n    \"anzahl\": 10,\n    \"betreibsnummer\": \"89 006\",\n    \"antrieb\":\"DAMPF\",\n    \"achsfolg\":\"CH2T\",\n    \"leistung\": 385.00,\n    \"dienstgewicht\": 46.60,\n    \"geschwindigkeit\": 45,\n    \"lange\": 9.60,\n    \"ausserdienst\": \"1962-01-01\",\n    \"dmTreibrad\": 1.10,\n    \"zylinder\": 2,\n    \"dmZylinder\": 0.42,\n    \"kolbenhub\": 0.55,\n    \"kesseluberdruck\": 14.00,\n    \"rostflache\": 1.42,\n    \"uberhitzerflache\": 24.10,\n    \"wasservorrat\": 4.50,\n    \"verdampfung\": 69.86,\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/vorbild",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "42b7cd70-13da-42a6-84ba-bc204bd22e4b",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/vorbild/{{gattung}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{gattung}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e197504a-ae6b-40d4-aebd-4897ddab2501",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ede5433d-ee79-4252-825f-9055bb983ecf",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"gattung\": \"BR89.0\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n    \"kategorie\": \"LOKOMOTIV\",\n    \"unterKategorie\": \"DAMPF\" ,\n    \"bahnverwaltung\": \"DB\", \n    \"hersteller\": \"Henschel\",\n    \"bauzeit\": \"1934-01-01\",\n    \"anzahl\": 10,\n    \"betreibsnummer\": \"89 006\",\n    \"antrieb\": \"DAMPF\",\n    \"achsfolg\": \"CH2T\",\n    \"leistung\": 385.00,\n    \"dienstgewicht\": 46.60,\n    \"geschwindigkeit\": 45,\n    \"lange\": 9.60,\n    \"ausserdienst\": \"1962-01-01\",\n    \"dmTreibrad\": 1.10,\n    \"zylinder\": 2,\n    \"dmZylinder\": 0.42,\n    \"kolbenhub\": 0.55,\n    \"kesseluberdruck\": 14.00,\n    \"rostflache\": 1.42,\n    \"uberhitzerflache\": 24.10,\n    \"wasservorrat\": 4.50,\n    \"verdampfung\": 69.86,\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/vorbild/{{gattung}",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{gattung}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Abbildung",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/vorbild/{{gattung}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{gattung}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7d1e438-326a-48f6-bc34-cdde8e6ea1da",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/vorbild",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Abbildung",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/vorbild/{{gattung}}/abbildung",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{gattung}}",
								"abbildung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e4fba986-d309-4783-99f8-958369e0c96c",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/vorbild/{{gattung}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"vorbild",
								"{{gattung}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Zug",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2a97fbb6-efa9-4188-b7cd-60bca30a344c",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8814d6fc-cf0b-464d-9b24-fa1e8cd9512b",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n    \"zugTyp\": \"TEE\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zug",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc7ba8f2-2dd2-4c91-adfa-ac5c1b0d01ab",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/zug/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "15a01d5f-9345-4b73-8f16-3acf82ff5c0d",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a32ba5ad-9b3a-4f31-86ea-e2875d244caa",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n    \"zugTyp\": \"TEE\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zug/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Consist",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zug/{{name}}/consist/{{position}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{name}}",
								"consist",
								"{{position}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Consist",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/zug/{{name}}/consist/{{position}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{name}}",
								"consist",
								"{{position}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "306ffaf3-7adc-4063-b62f-aca5fdebeab4",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/zug",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Consist",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/zug/{{name}}/consist/{{position}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{name}}",
								"consist",
								"{{position}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "feb266b1-0ce3-4e23-91b0-9656f8af6a47",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/zug/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zug",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Zug Typ",
			"item": [
				{
					"name": "Add",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b9b959d4-7dd0-41b6-a5bd-81b8757b2571",
								"exec": [
									"pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomAbbreviation}}\"));\r",
									"pm.environment.set(\"bezeichnung\", pm.variables.replaceIn(\"{{$randomProductName}}\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "66ad51d1-8ec0-4e74-b1bf-23a5b5308730",
								"exec": [
									"pm.response.to.have.status(201);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zugTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eed5b8f6-9991-4f58-ad1a-604bff36417a",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/zugTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "980ff77c-b4bb-41ee-b58f-0c47d47725d6",
								"exec": [
									"pm.environment.set(\"bezeichnung\", \"$randomProductName\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4d9779ed-f7c2-420b-b403-199049bc26ef",
								"exec": [
									"pm.response.to.have.status(202);\r",
									"var jsonData = pm.response.json();\r",
									"var name = pm.variables.replaceIn(\"{{name}}\");\r",
									"var bezeichnung = pm.variables.replaceIn(\"{{bezeichnung}}\");\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var self = root + \"/\" + name;\r",
									"pm.expect(jsonData.name).to.eql(name);\r",
									"pm.expect(jsonData.bezeichnung).to.eql(bezeichnung);\r",
									"pm.expect(jsonData.deleted).to.be.false;\r",
									"pm.expect(jsonData._links.add[0].href).to.eql(root);\r",
									"pm.expect(jsonData._links.self[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.update[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.delete[0].href).to.eql(self);\r",
									"pm.expect(jsonData._links.search[0].href).to.eql(root);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/html, application/xhtml+xml, application/xml"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"bezeichnung\": \"{{bezeichnung}}\",\n\t\"deleted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/zugTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cd05cff-d924-423c-9e71-5d0f21a5c381",
								"exec": [
									"pm.response.to.have.status(200);\r",
									"var root = pm.variables.replaceIn(\"{{api\"}}) + pm.request.url.getPath();\r",
									"var jsonData = pm.response.json();\r",
									"jsonData._embedded.achsfolg.forEach(function(a) { \r",
									"    var self = root + \"/\" + a.name;\r",
									"    pm.expect(a.name).to.exist;\r",
									"    pm.expect(a.bezeichnung).to.exist;\r",
									"    pm.expect(a.deleted).to.be.false;\r",
									"    pm.expect(a._links.add[0].href).to.eql(root);\r",
									"    pm.expect(a._links.self[0].href).to.eql(self);\r",
									"    pm.expect(a._links.update[0].href).to.eql(self);\r",
									"    pm.expect(a._links.delete[0].href).to.eql(self);\r",
									"    pm.expect(a._links.search[0].href).to.eql(root);\r",
									"});\r",
									"pm.expect(jsonData._links.self[0].href).to.match(new RegExp(\".*\"+root));\r",
									"pm.expect(jsonData.page.size).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalElements).to.eql(jsonData._embedded.achsfolg.length);\r",
									"pm.expect(jsonData.page.totalPages).to.eql(1);\r",
									"pm.expect(jsonData.page.number).to.eql(0);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api}}/zugTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a9989a4-ee06-4b05-b7a8-6e4d6a69d1e8",
								"exec": [
									"pm.response.to.have.status(204);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/zugTyp/{{name}}",
							"host": [
								"{{api}}"
							],
							"path": [
								"zugTyp",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Open Api",
			"item": [
				{
					"name": "Get Docs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{root}}/v3/api-docs.json",
							"host": [
								"{{root}}"
							],
							"path": [
								"v3",
								"api-docs.json"
							]
						},
						"description": "http://LINEPRO2.home:8086/ModellBahn/api/swagger/swagger."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Export",
			"item": [
				{
					"name": "Achsfolg",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/achsfolg",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"achsfolg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anderung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/anderung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"anderung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Antrieb",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/antrieb",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"antrieb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Artikel",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/artikel",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"artikel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Aufbau",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/aufbau",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"aufbau"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bahnverwaltung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/bahnverwaltung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"bahnverwaltung"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderAdress",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderAdress",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderAdress"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderCv",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderCv",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderCv"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderFunktion",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderFunktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderFunktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Decoder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoder",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoder"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypAdress",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderTypAdress",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypAdress"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypCv",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderTypCv",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypCv"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypFunktion",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderTypFunktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypFunktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTyp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/decoderTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Epoch",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/epoch",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"epoch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gattung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/gattung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"gattung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hersteller",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/hersteller",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"hersteller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kategorie",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/kategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"kategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kupplung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/kupplung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"kupplung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Licht",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/licht",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"licht"
							]
						}
					},
					"response": []
				},
				{
					"name": "Massstab",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/massstab",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"massstab"
							]
						}
					},
					"response": []
				},
				{
					"name": "MotorTyp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/motorTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"motorTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Produkt",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/produkt",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"produkt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Produkt Teil",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/produktTeil",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"produktTeil"
							]
						}
					},
					"response": []
				},
				{
					"name": "Protokoll",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/protokoll",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"protokoll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sondermodell",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/sondermodell",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"sondermodell"
							]
						}
					},
					"response": []
				},
				{
					"name": "Spurweite",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/spurweite",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"spurweite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Steuerung",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/steuerung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"steuerung"
							]
						}
					},
					"response": []
				},
				{
					"name": "UnterKategorie",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/unterKategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"unterKategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vorbild",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/vorbild",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"vorbild"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zug Consist",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/zugConsist",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zugConsist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zug",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/zug",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zug"
							]
						}
					},
					"response": []
				},
				{
					"name": "ZugTyp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv, application/json, text/html, application/xhtml+xml, application/xml"
							}
						],
						"url": {
							"raw": "{{api}}/data/zugTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zugTyp"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Import",
			"item": [
				{
					"name": "Achsfolg",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/achsfolg",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"achsfolg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Anderung",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/anderung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"anderung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Antrieb",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/antrieb",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"antrieb"
							]
						}
					},
					"response": []
				},
				{
					"name": "Artikel",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/artikel",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"artikel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Aufbau",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/aufbau",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"aufbau"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bahnverwaltung",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/bahnverwaltung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"bahnverwaltung"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderAdress",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderAdress",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderAdress"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderCv",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderCv",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderCv"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderFunktion",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderFunktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderFunktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Decoder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoder",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoder"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypAdress",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderTypAdress",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypAdress"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypCv",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderTypCv",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypCv"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTypFunktion",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderTypFunktion",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTypFunktion"
							]
						}
					},
					"response": []
				},
				{
					"name": "DecoderTyp",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/decoderTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"decoderTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Epoch",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/epoch",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"epoch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Gattung",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/gattung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"gattung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hersteller",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/hersteller",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"hersteller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kategorie",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/kategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"kategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kupplung",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/kupplung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"kupplung"
							]
						}
					},
					"response": []
				},
				{
					"name": "Licht",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/licht",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"licht"
							]
						}
					},
					"response": []
				},
				{
					"name": "Massstab",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/massstab",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"massstab"
							]
						}
					},
					"response": []
				},
				{
					"name": "MotorTyp",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/motorTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"motorTyp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Produkt",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/produkt",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"produkt"
							]
						}
					},
					"response": []
				},
				{
					"name": "Produkt Teil",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/produktTeil",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"produktTeil"
							]
						}
					},
					"response": []
				},
				{
					"name": "Protokoll",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/protokoll",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"protokoll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sondermodell",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/sondermodell",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"sondermodell"
							]
						}
					},
					"response": []
				},
				{
					"name": "Spurweite",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/spurweite",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"spurweite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Steuerung",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/steuerung",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"steuerung"
							]
						}
					},
					"response": []
				},
				{
					"name": "UnterKategorie",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/unterKategorie",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"unterKategorie"
							]
						}
					},
					"response": []
				},
				{
					"name": "Vorbild",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/vorbild",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"vorbild"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zug Consist",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/zugConsist",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zugConsist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zug",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/zug",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zug"
							]
						}
					},
					"response": []
				},
				{
					"name": "ZugTyp",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"src": []
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{api}}/data/zugTyp",
							"host": [
								"{{api}}"
							],
							"path": [
								"data",
								"zugTyp"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "password",
				"type": "string"
			},
			{
				"key": "username",
				"value": "username",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "c2083cfb-8ae4-444e-8007-b126a6cf21d8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "b2300513-d158-4f0d-8c66-4d946d2e89a8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}